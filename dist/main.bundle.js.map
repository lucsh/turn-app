{"version":3,"sources":["/home/juampi/Documents/Codetry/turn-app/src/$_gendir lazy","/home/juampi/Documents/Codetry/turn-app/src/app/app.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/app.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/app.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/app.helpers.ts","/home/juampi/Documents/Codetry/turn-app/src/app/app.module.ts","/home/juampi/Documents/Codetry/turn-app/src/app/app.routing.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/administrativo.guard.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/auth.guard.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/auth.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/feathers.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/login.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/login.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/medico.guard.ts","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/register.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/authentication/register.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/modal-semana/modal-semana.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/modal-semana/modal-semana.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/modal-semana/modal-semana.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/medico/agregarMedico/agregarMedico.html","/home/juampi/Documents/Codetry/turn-app/src/app/medico/agregarMedico/agregarMedico.ts","/home/juampi/Documents/Codetry/turn-app/src/app/medico/editarMedico/editarMedico.css","/home/juampi/Documents/Codetry/turn-app/src/app/medico/editarMedico/editarMedico.html","/home/juampi/Documents/Codetry/turn-app/src/app/medico/editarMedico/editarMedico.ts","/home/juampi/Documents/Codetry/turn-app/src/app/medico/medicos.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/medico/tablaMedicos/tablaMedicos.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/medico/tablaMedicos/tablaMedicos.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/medico/tablaMedicos/tablaMedicos.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/agregarObra/agregarObra.css","/home/juampi/Documents/Codetry/turn-app/src/app/obras/agregarObra/agregarObra.html","/home/juampi/Documents/Codetry/turn-app/src/app/obras/agregarObra/agregarObra.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/editarObra/editarObra.html","/home/juampi/Documents/Codetry/turn-app/src/app/obras/editarObra/editarObra.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/obra.tipo.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/obras-filter.pipe.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/obras/tablaObras/tablaObras.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/obras/tablaObras/tablaObras.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/obras/tablaObras/tablaObras.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/agregarPaciente/agregarPaciente.css","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/agregarPaciente/agregarPaciente.html","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/agregarPaciente/agregarPaciente.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/edad.pipe.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/editarPaciente/editarPaciente.css","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/editarPaciente/editarPaciente.html","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/editarPaciente/editarPaciente.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/paciente.tipo.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes-filter.pipe.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/tablaPacientes/tablaPacientes.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/tablaPacientes/tablaPacientes.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/pacientes/tablaPacientes/tablaPacientes.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes-socket.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/routerService/medicos.sistema.ts","/home/juampi/Documents/Codetry/turn-app/src/app/routerService/obras.sistema.ts","/home/juampi/Documents/Codetry/turn-app/src/app/routerService/pacientes.sistema.ts","/home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/time-ago.pipe.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/asignarPaciente/asignarPacienteTurno.html","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/asignarPaciente/asignarPacienteTurno.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos-socket.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.component.css","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/verTurno/verTurno.html","/home/juampi/Documents/Codetry/turn-app/src/app/turnos/verTurno/verTurno.ts","/home/juampi/Documents/Codetry/turn-app/src/app/ui/footer.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/ui/navigation/navigation.component.html","/home/juampi/Documents/Codetry/turn-app/src/app/ui/navigation/navigation.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/ui/navigation/navigation.service.ts","/home/juampi/Documents/Codetry/turn-app/src/app/ui/topnavbar/topnavbar.component.ts","/home/juampi/Documents/Codetry/turn-app/src/app/ui/topnavbar/topnavbar.template.html","/home/juampi/Documents/Codetry/turn-app/src/environments/environment.ts","/home/juampi/Documents/Codetry/turn-app/src/main.ts","/home/juampi/Documents/Codetry/turn-app/node_modules/moment/locale ^\\.\\/.*$","ws (ignored)"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,8JAA8J,mCAAmC,gCAAgC,KAAK,kNAAkN,mCAAmC,wuB;;;;;;;;;;;;;;;;;;;;;;ACAjb;AAEC;AAGiB;AAapC;AAQxB,IAAa,YAAY;IACxB,sBAAoB,IAAiB,EAAU,MAAc;QAA7D,iBAIC;QAJmB,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QA0BrD,kBAAa,GAAQ,KAAK,CAAC;QAEnC,mEAAmE;QACnE,YAAO,GAAG,IAAI;QA5Bb,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAkB;YACvC,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QACnC,CAAC,CAAC;IACL,CAAC;IAED,iEAAiE;IAClE,4CAAqB,GAArB,UAAsB,KAAkB;QACvC,EAAE,CAAC,CAAC,KAAK,YAAY,wEAAe,CAAC,CAAC,CAAC;YAErC,IAAI,CAAC,OAAO,GAAG,IAAI;QAErB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,YAAY,sEAAa,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,KAAK;QACrB,CAAC;QAED,qGAAqG;QACrG,EAAE,CAAC,CAAC,KAAK,YAAY,yEAAgB,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,KAAK;QACrB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,YAAY,wEAAe,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,KAAK;QACrB,CAAC;IACF,CAAC;IAOO,+BAAQ,GAAf;QACC,wEAAU,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAEM,+BAAQ,GAAf;QACC,wEAAU,EAAE,CAAC;IACd,CAAC;IAED,mCAAY,GAAZ;QACC,8BAA8B;QAC9B,4BAA4B;QAC5B,8BAA8B;QAC9B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC;QACb,6BAA6B;IAC9B,CAAC;IAEM,+BAAQ,GAAf;QACC,mEAAmE;QACnE,iCAAiC;QAFlC,iBAgBC;QAZA,IAAI,CAAC,IAAI;aACR,KAAK,EAAE;aACP,IAAI,CAAC;YACL,yBAAyB;YACzB,iCAAiC;YACjC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC;aACD,KAAK,CAAC;YACN,6BAA6B;YACpB,YAAY,CAAC,KAAK,EAAE,CAAC;YAC9B,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;IACF,mBAAC;AAAD,CAAC;AAnEY,YAAY;IALxB,gEAAS,CAAC;QACV,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KAClC,CAAC;yDAEyB,iFAAW,oBAAX,iFAAW,sDAAkB,+DAAM,oBAAN,+DAAM;GADjD,YAAY,CAmExB;AAnEwB;;;;;;;;;;;;AC1BzB;AAAA;;;;;;;GAOG;AAIG;IAEJ,IAAI,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;IAC1C,IAAI,YAAY,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;IACzD,IAAI,aAAa,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC;IAEzC,EAAE,CAAC,CAAC,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC;QACjC,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,GAAG,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,EAAE,CAAC,CAAC,YAAY,IAAI,aAAa,CAAC,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3C,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,GAAG,IAAI,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC;YACjC,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,GAAG,IAAI,CAAC,CAAC;QACrD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;AACH,CAAC;AAEK;IACJ,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;IACvC,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC;IAC1C,CAAC;AACH,CAAC;AAEK;IACJ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACrF,4DAA4D;QAC5D,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;QAC5B,4BAA4B;QAC5B,UAAU,CACR;YACE,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;QAC5B,UAAU,CACR;YACE,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,0EAA0E;QAC1E,MAAM,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEyD;AACjB;AACI;AACF;AAEU;AAGnC;AAC2D;AAmClD;AAEoB;AACsB;AAErE,+CAA+C;AAC/C,8CAA8C;AAC9C,qCAAqC;AACrC,2CAA2C;AAEe;AACb;AAED;AAClB;AAEyC;AAEF;AACT;AACE;AACa;AACN;AAGzB;AACgB;AACmB;AACH;AAC1B;AACc;AAEQ;AAEC;AACA;AACE;AACS;AACW;AAE7B;AAGyB;AACF;AAC7C;AACiB;AAEJ;AACsC;AACU;AACH;AACd;AAChB;AACiB;AACV;AAGf;AACJ;AACoB;AAChB;AACC;AACK;AACM;AACZ;AACG;AACf;AAE8B;AAEF;AACI;AACR;AAEsB;AAG5C;AAEqB;AACO;AA0G9E,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAxGrB,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,0FAAkB;YAClB,8EAAe;YACf,iGAAmB;YACnB,8FAAkB;YAClB,oEAAW;YACX,kFAAe;YACf,2FAAkB;YAClB,yFAAc;YACd,kFAAe;YACf,6FAAoB;YACpB,iHAAwB;YACxB,+GAAwB;YACxB,6GAAwB;YACxB,+EAAc;YACd,iHAAwB;YACxB,0GAAuB;YACvB,0FAAmB;YACnB,2GAAqB;YACrB,iGAAqB;YAErB,wFAAc;YACd,8FAAiB;YAEjB,2HAA4B;YAC5B,wHAAoB;YACpB,kFAAe;YACf,qFAAiB;YACjB,sEAAO;YACP,oGAAsB;YACtB,oHAAuB;YACvB,6FAAoB;YACpB,oGAAmB;SAEpB;QACD,OAAO,EAAE;YACP,wEAAa;YACb,2DAAW;YACX,iEAAU;YACV,qGAAuB;YACvB,mEAAe;YACf,yEAAc;YACd,+EAAoB;YACpB,+EAAoB;YACpB,uEAAY;YACZ,2EAAgB;YAChB,wEAAa;YACb,uEAAY;YACZ,6EAAkB;YAClB,yEAAc;YACd,4EAAiB;YACjB,2EAAgB;YAChB,uEAAY;YACZ,wEAAa;YACb,uEAAY;YACZ,uEAAY;YACZ,6EAAkB;YAClB,4EAAiB;YACjB,8EAAmB;YACnB,kFAAuB;YACvB,wEAAa;YACb,yEAAc;YACd,yEAAc;YACd,0EAAe;YACf,yEAAc;YACd,8EAAmB;YACnB,2EAAgB;YAChB,uEAAY;YACZ,wEAAa;YACb,uEAAY;YACZ,0EAAe;YACf,0EAAe;YACf,iFAAgB,CAAC,OAAO,EAAE;YAC1B,8DAAY;YACZ,8DAAO;YACP,yDAAY;YACZ,2DAAa;YACb,kFAAyB,CAAC,OAAO,EAAE;YACnC,iEAAkB;SACnB;QACD,SAAS,EAAE;YACT,uFAAgB;YAChB,8EAAa;YACb,uFAAgB;YAChB,gFAAc;YACd,6FAAiB;YACjB,0FAAkB;YAClB,sGAAwB;YACxB,2EAAY;YACZ,mFAAQ;YACR,kFAAW;YACX,8EAAS;YACT,oEAAY;YACZ,kGAAmB;YACnB,kFAAW;YACX,kGAAyB;YACzB,sGAA2B;YAC3B,8FAAuB;SAExB;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACrO+B;AAEc;AACT;AACS;AACZ;AACiC;AAEhC;AACoB;AAChB;AAGU;AACE;AAE6B;AAErG,IAAM,SAAS,GAAY;IAC3B;QACC,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,0FAAkB;QAC1B,WAAW,EAAE,CAAC,6EAAS,EAAC,iGAAmB,CAAC;KAC/C;IACD,IAAI;IACJ,kBAAkB;IAClB,+BAA+B;IAC/B,+BAA+B;IAC/B,KAAK;IACL;QACC,IAAI,EAAC,0BAA0B;QAC/B,SAAS,EAAE,iFAAe;QACvB,WAAW,EAAE,CAAC,6EAAS,CAAC;KAC3B;IACD;QACC,IAAI,EAAC,WAAW;QAChB,SAAS,EAAE,0FAAkB;QAC1B,WAAW,EAAE,CAAC,6EAAS,CAAC;KAC3B;IACD;QACC,IAAI,EAAC,QAAQ;QACb,SAAS,EAAE,gHAAwB;QAChC,WAAW,EAAE,CAAC,6EAAS,EAAC,iFAAW,CAAC;KACvC;IACD;QACC,IAAI,EAAC,eAAe;QACpB,SAAS,EAAE,2HAA4B;QACvC,WAAW,EAAE,CAAC,6EAAS,EAAC,iGAAmB,CAAC;KAC5C;IACD;QACC,IAAI,EAAC,OAAO;QACZ,SAAS,EAAE,8EAAc;QACzB,WAAW,EAAE,CAAC,6EAAS,EAAC,iGAAmB,CAAC;KAC5C;IACD;QACC,IAAI,EAAC,yBAAyB;QAC9B,SAAS,EAAE,2HAA4B;QACvC,WAAW,EAAE,CAAC,6EAAS,CAAC;KACxB;IACC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,uFAAc,EAAE;IAC7C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8FAAiB,EAAE;CAClD,CAAC;AAGK,IAAM,OAAO,GAAyB,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;AClElC;AACwD;AAEtD;AAE7C,wBAAwB;AACwB;AAIhD,IAAa,mBAAmB;IAC9B,6BAAoB,MAAc,EAAU,IAAiB,EAAS,GAAiB;QAAnE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAS,QAAG,GAAH,GAAG,CAAc;IAAG,CAAC;IAE3F,yCAAW,GAAX,UAAY,IAA4B,EAC5B,KAA0B;QAExB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,EAAE,EAAC,KAAK,CAAC,EAAC;YACR,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,EAAC;gBACd,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBACxB,wCAAwC;gBACxC,EAAE,EAAC,KAAK,KAAK,QAAQ,CAAC,EAAC;oBACrB,8BAA8B;oBAC9B,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBAC1B,IAAI,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC;oBACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAC,MAAM,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,iCAAiC;gBACjC,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;IAEf,CAAC;IACH,0BAAC;AAAD,CAAC;AAxBY,mBAAmB;IAD/B,iEAAU,EAAE;yDAEiB,+DAAM,oBAAN,+DAAM,sDAAgB,kEAAW,oBAAX,kEAAW,sDAAc,oEAAY,oBAAZ,oEAAY;GAD5E,mBAAmB,CAwB/B;AAxB+B;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACwD;AAEtD;AAE7C,wBAAwB;AACwB;AAIhD,IAAa,SAAS;IACpB,mBAAoB,MAAc,EAAU,IAAiB,EAAS,GAAiB;QAAnE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAS,QAAG,GAAH,GAAG,CAAc;IAAG,CAAC;IAE3F,+BAAW,GAAX,UAAY,IAA4B,EAC5B,KAA0B;QADtC,iBAgBC;QAbC,mFAAmF;QACnF,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,KAAK,EAAE;aACP,IAAI,CAAC;YACJ,2BAA2B;YAC3B,KAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC;YACL,qCAAqC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IACH,gBAAC;AAAD,CAAC;AApBY,SAAS;IADrB,iEAAU,EAAE;yDAEiB,+DAAM,oBAAN,+DAAM,sDAAgB,kEAAW,oBAAX,kEAAW,sDAAc,oEAAY,oBAAZ,oEAAY;GAD5E,SAAS,CAoBrB;AApBqB;;;;;;;;;;;;;;;;;;;;;;;;ACVqB;AACG;AACL;AAC+B;AAGxE;;GAEG;AAEH,IAAa,WAAW;IAEtB,qBAAoB,QAAkB,EAAU,MAAc;QAA1C,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE3D,4BAAM,GAAb,UAAc,MAAM,EAAE,KAAK,EAAE,QAAQ;IAErC,CAAC;IAEM,2BAAK,GAAZ,UAAa,WAAY;QACvB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAEM,4BAAM,GAAb;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACvB,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,0BAA0B;IAC5B,CAAC;IAAA,CAAC;IAEK,4BAAM,GAAb,UAAc,MAAM,EAAE,QAAQ,EAAE,KAAa,EAAE,QAAgB;QAC9D,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;aACjC,MAAM,CAAC,EAAC,MAAM,UAAE,QAAQ,YAAE,KAAK,SAAE,QAAQ,YAAC,CAAC;aAC3C,IAAI,CAAC,CAAC,CAAC;aACP,SAAS,EAAE;aACX,IAAI,CAAC,aAAG;YACP,gCAAgC;YAChC,wBAAwB;YACxB,MAAM,CAAC,GAAmB,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,CAAC,aAAG,IAAK,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CACjC;IACH,CAAC;IAGM,yBAAG,GAAV;QAEE,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9D,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,cAAc,IAAI,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,QAAQ,GAAG,IAAI,8DAAO,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;YACvD,MAAM,CAAC,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAEM,oCAAc,GAArB;QACA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACrD,MAAM,CAAC,GAAG,CAAC;IACd,CAAC;IAEO,sCAAgB,GAAvB;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;IAIH,kBAAC;AAAD,CAAC;AAzDY,WAAW;IADvB,iEAAU,EAAE;yDAGmB,mEAAQ,oBAAR,mEAAQ,sDAAkB,+DAAM,oBAAN,+DAAM;GAFnD,WAAW,CAyDvB;AAzDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AAEC;AACI;AACT;AACC;AACa;AACY;AACJ;AAE7D,6GAA6G;AAClF;AAE3B;;GAEG;AAEH,IAAa,QAAQ;IAKnB;QACE,IAAI,CAAC,OAAO,GAAG,8CAAE,CAAC,8EAAW,CAAC,MAAM,CAAC,CAAC,CAAO,iBAAiB;QAE9D,IAAI,CAAC,SAAS,GAAG,6CAAQ,EAAE,CAAC,CAAsB,gBAAgB;QAClE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,4CAAK,EAAE,CAAC,CAAC,CAAgB,mBAAmB;QACrE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,+CAAU,CAAC,kCAAE,CAAC,CAAC,CAAC,CAAS,+BAA+B;QACjF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,sDAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,uBAAuB;QACzE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,4DAAc,CAAC;YACtC,OAAO,EAAE,MAAM,CAAC,YAAY;SAC7B,CAAC,CAAC,CAAC;IACN,CAAC;IAED,kBAAkB;IACX,0BAAO,GAAd,UAAe,IAAY;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,mCAAgB,GAAvB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,wBAAwB;IACjB,+BAAY,GAAnB,UAAoB,WAAY;QAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,gBAAgB;IACT,yBAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;IACM,mCAAgB,GAAvB;QAEE,uCAAuC;QAGvC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACjD,sBAAsB;QACtB,gCAAgC;QAChC,qBAAqB;QACrB,uBAAuB;QACvB,yBAAyB;QACzB,yDAAyD;QACzD,4BAA4B;QAC5B,4BAA4B;QAC5B,mDAAmD;QACnD,MAAM;QAGN,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;YACjC,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,KAAK;SACnB,CAAC,CAAC;IACL,CAAC;IAEH,eAAC;AAAD,CAAC;AA3DY,QAAQ;IADpB,iEAAU,EAAE;;GACA,QAAQ,CA2DpB;AA3DoB;;;;;;;;ACjBrB,8gCAA8gC,UAAU,sO;;;;;;;;;;;;;;;;;;;;;;ACA9+B;AACD;AACK;AAED;AAO7C,IAAa,cAAc;IAGzB,wBACY,QAAkB,EAClB,MAAc,EACd,WAAwB;QAFxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QALpC,aAAQ,GAAW,EAAE,CAAC;IAKiB,CAAC;IAEjC,iCAAQ,GAAf;QACI,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,EAAE,EAAC,KAAK,CAAC,EAAC;YACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL,UAAM,KAAa,EAAE,QAAgB;QAArC,iBAsDC;QArDC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAC,6BAA6B,CAAC;YAC5C,MAAM,CAAC;QACT,CAAC;QACD,uBAAuB;QAEvB,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC5B,qCAAqC;QACrC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,oCAAoC;QACpC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;YACzB,QAAQ,EAAE,OAAO;YACjB,QAAQ;YACR,QAAQ;SACT,CAAC;aAEC,IAAI,CAAC,UAAC,KAAK;YACV,6CAA6C;YAC7C,sBAAsB;YAEtB,IAAI,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACpF,MAAM,CAAC,IAAI,CAAC,UAAC,OAAO;gBAClB,IAAI,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAEjE,OAAO,CAAC,IAAI,CAAC,UAAC,IAAI;oBAChB,4BAA4B;oBAC5B,qBAAqB;oBACrB,qCAAqC;oBACrC,EAAE,EAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,EAAC;wBAC1B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,CAAC;oBACD,IAAI,EAAC;wBACH,EAAE,EAAC,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC,EAAC;4BAClC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;4BAClD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC9B,CAAC;wBAAA,IAAI,EAAC;4BACJ,0BAA0B;4BAC1B,2BAA2B;4BAC3B,0CAA0C;4BAC1C,YAAY,CAAC,KAAK,EAAE,CAAC;4BACrB,KAAI,CAAC,QAAQ,GAAG,mCAAmC,CAAC;4BACpD,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,0DAA0D;wBAC5D,CAAC;oBAEH,CAAC;gBACH,CAAC,CAAC;YACJ,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,KAAI,CAAC,QAAQ,GAAG,mCAAmC,CAAC;QACtD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mCAAU,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,+BAAM,GAAN,UAAO,KAAa,EAAE,QAAgB;QAAtC,iBASC;QARC,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;aAC3B,MAAM,CAAC,EAAC,KAAK,SAAE,QAAQ,YAAC,CAAC;aACzB,IAAI,CAAC,CAAC,CAAC;aACP,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAC,eAAe,EAA7B,CAA6B,CAAC;aACzC,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,QAAQ,GAAC,wBAAwB,EAAtC,CAAsC,CAAC,CACtD;IACH,CAAC;IACH,qBAAC;AAAD,CAAC;AArFY,cAAc;IAL1B,gEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,2FAAqC;QACrC,sCAAsC;KACvC,CAAC;yDAKsB,mEAAQ,oBAAR,mEAAQ,sDACV,+DAAM,oBAAN,+DAAM,sDACD,kEAAW,oBAAX,kEAAW;GANzB,cAAc,CAqF1B;AArF0B;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AACwD;AAEtD;AAE7C,wBAAwB;AACwB;AAIhD,IAAa,WAAW;IACtB,qBAAoB,MAAc,EAAU,IAAiB,EAAS,GAAiB;QAAnE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAS,QAAG,GAAH,GAAG,CAAc;IAAG,CAAC;IAE3F,iCAAW,GAAX,UAAY,IAA4B,EAC5B,KAA0B;QAExB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,EAAE,EAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,EAAC;YACvB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,KAAK,CAAC,CAAC;YACrC,EAAE,EAAC,KAAK,KAAK,gBAAgB,CAAC,EAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACf,CAAC;IACH,kBAAC;AAAD,CAAC;AApBY,WAAW;IADvB,iEAAU,EAAE;yDAEiB,+DAAM,oBAAN,+DAAM,sDAAgB,kEAAW,oBAAX,kEAAW,sDAAc,oEAAY,oBAAZ,oEAAY;GAD5E,WAAW,CAoBvB;AApBuB;;;;;;;;;ACVxB,y8C;;;;;;;;;;;;;;;;;;;;;ACA0C;AACD;AAEI;AAO7C,IAAa,iBAAiB;IAI1B,2BACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEG,qCAAS,GAAhB,UAAiB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ;QAAlD,iBAOC;QANC,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAK;YAEnE,KAAI,CAAC,OAAO,EAAE,CAAC;QAEjB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,mCAAO,GAAd;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAEL,wBAAC;AAAD,CAAC;AAtBY,iBAAiB;IAL7B,gEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,8FAAwC;QACxC,sCAAsC;KACvC,CAAC;yDAMyB,kEAAW,oBAAX,kEAAW,sDAChB,+DAAM,oBAAN,+DAAM;GANf,iBAAiB,CAsB7B;AAtB6B;;;;;;;;;ACV9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,8P;;;;;;;;;;;;;;;;;;;;;;;;;ACAwE;AACrC;AACc;AAEyB;AAIpB;AACmB;AAQI;AAW7E,IAAa,4BAA4B;IA4BvC,sCACU,KAAqB,EACrB,kBAA6C,EAC7C,gBAAyC,EACzC,IAAU,EAAU,0BAAsD,EAAU,WAAyB;QAJvH,iBAwCG;QAvCO,UAAK,GAAL,KAAK,CAAgB;QACrB,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,SAAI,GAAJ,IAAI,CAAM;QAAU,+BAA0B,GAA1B,0BAA0B,CAA4B;QAAU,gBAAW,GAAX,WAAW,CAAc;QA7BhH,YAAO,GAAG,EAAE,CAAC;QACb,uBAAkB,GAAG,IAAI,CAAC;QAE1B,iBAAY,GAAG,IAAI,CAAC;QACnB,aAAQ,GAAY,KAAK,CAAC;QAE3B,mBAAc,GAAe,EAAE,CAAC;QAChC,gBAAW,GAAY,KAAK,CAAC;QACpC,2BAA2B;QACnB,eAAU,GAAU,GAAG,CAAC;QACxB,aAAQ,GAAW,KAAK,CAAC;QAGzB,iBAAY,GAAS,IAAI,CAAC;QAElC,4BAA4B;QAG5B,kDAAkD;QAC3C,kBAAa,GAAe,EAAE,CAAC;QAE/B,UAAK,GAAU,EAAE,CAAC;QASrB,IAAI,CAAC,YAAY,GAAG;YAClB,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,CAAC;SACZ;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB;;UAEE;QACF,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjD,EAAE,EAAC,QAAQ,IAAI,IAAI,CAAC,EAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,0BAA0B,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CACzD,gBAAM;gBACJ,EAAE,EAAC,MAAM,CAAC,EAAC;oBACT,kEAAkE;oBAClE,iGAAiG;oBACjG,oDAAoD;oBACpD,kEAAkE;oBAElE,EAAE,EAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC;wBACrB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC1C,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;wBAClB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC3B,CAAC;oBACD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;oBAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CACF;QACH,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC;IACjD,CAAC;IAED,sDAAe,GAAf;QAAA,iBA6BC;QA5BC;;;UAGE;QACF,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEtD,EAAE,EAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAC;YACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAO;gBAErE,qEAAqE;gBACrE,EAAE,EAAC,QAAQ,IAAI,IAAI,CAAC,EAAC;oBACnB,0FAA0F;oBAC1F,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACtC,EAAE,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,EAAC;4BAC9B,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,oCAAoC;4BACvD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yCAAyC;wBAC1E,CAAC;oBACL,CAAC;gBACH,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACzB,CAAC;gBAED,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,oDAAa,GAAb;QAAA,iBAmBC;QAlBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAC;YAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;gBAElE,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC5B,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACpD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAED,iDAAU,GAAV,UAAW,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,+CAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YAChB,6BAA6B;QAC/B,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,8CAA8C;QAC9C,wBAAwB;QACxB,6BAA6B;QAC7B,EAAE;QACF,EAAE;QACF,0CAA0C;IAC5C,CAAC;IAEM,yDAAkB,GAAzB;QACE,EAAE,EAAC,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,EAAC;YACnB,qEAAqE;YAGrE,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC;;;;;kBAKE;gBACF,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBAC/B,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBACtC,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,EAAE,EAAC,IAAE,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAC9B,wBAAwB;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,2DAAoB,GAA5B;QAKE,IAAI,CAAC,OAAO,GAAG;YACb,QAAQ,EAAE,IAAI;SACf;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAID,oDAAa,GAAb;QAEE;;UAEE;QACF,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC;QAErC,gEAAgE;QAChE,2BAA2B;QAC3B,6BAA6B;QAC7B,MAAM;IACR,CAAC;IAED,sDAAe,GAAf,UAAgB,MAAM,EAAC,QAAQ,EAAC,KAAK,EAAC,aAAa;QAAnD,iBA4BC;QA3BC,IAAI,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;QACrC,IAAI,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACnD,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEzC,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,EAAE,EAAC,MAAM,EAAC,QAAQ,EAAC,WAAW,EAAE,aAAa,EAAC,cAAc,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,qBAAW;YAExI,4BAA4B;YAC5B,+BAA+B;YAE/B,EAAE,CAAC,kBAAkB,CAAC,MAAM,GAAG,MAAM,CAAC;YACtC,EAAE,CAAC,kBAAkB,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1C,EAAE,CAAC,kBAAkB,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;YACtD,EAAE,CAAC,kBAAkB,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAChD,kCAAkC;YAClC,EAAE,CAAC,kBAAkB,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAEhD,0DAA0D;YAC1D,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAEpD,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAGM,mDAAY,GAAnB;QAEE,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,2BAA2B;QAC3B,yBAAyB;QAEzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YAC5C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAEzC,EAAE,EAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;oBACpC,2DAA2D;oBAC3D,4BAA4B;oBAC5B,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB;gBACvD,CAAC;YACH,CAAC;QAEH,CAAC,CAAC,CAAC;QAEH,6DAA6D;QAC7D,iCAAiC;QACjC,mCAAmC;QACnC,qCAAqC;QAErC,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAGD,uDAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACjC,IAAI,cAAc,CAAC;QACnB,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAM;YACjE,qBAAqB;YACrB,cAAc,GAAG,MAAM,CAAC;YAExB,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACrC,4DAA4D;YAC5D,wBAAwB;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,iDAAU,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QAEjC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,gEAAgE;QAChE,EAAE,EAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAC;YAChC,4BAA4B;YAC5B,wCAAwC;YACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC9C,8CAA8C;YAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC;QAGD,qEAAqE;QAKrE,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IACM,+CAAQ,GAAf;QACE,mBAAmB;QACnB,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAGrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,4DAAqB,GAArB,UAAsB,cAAc;QAClC,0CAA0C;QAC1C,EAAE;QACF,EAAE;QACF,+BAA+B;QAE/B;;;;UAIE;QAGF,mCAAmC;QACnC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAS,GAAG,EAAC,KAAK;YACrC,EAAE,EAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,cAAc,CAAC,GAAG,CAAC,EAAC;gBAC3C,CAAC,GAAG,KAAK,CAAC;YACZ,CAAC;QACH,CAAC,CAAC,CAAC;QACH,EAAE,EAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,cAAc,CAAC,aAAa,CAAC;QAC/D,CAAC;QAED,wEAAwE;QACxE,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IAI/B,CAAC;IAEM,wDAAiB,GAAxB;QACE,CAAC,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,6EAA6E;IAC7E,mCAAmC;IAGnC,8CAAO,GAAP,UAAQ,IAAuB;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,4BAA4B;IAC9B,CAAC;IAGD,sBAAY,mDAAS;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAsB,KAAY;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC;QAC1C,CAAC;;;OALA;IAMM,+CAAQ,GAAf,UAAgB,KAAS;QACvB,8CAA8C;IAChD,CAAC;IAEM,8CAAO,GAAd,UAAe,KAAS;QACtB,6CAA6C;IAC/C,CAAC;IAEM,4CAAK,GAAZ,UAAa,KAAS;QACpB,6CAA6C;IAC/C,CAAC;IAEM,mDAAY,GAAnB,UAAoB,KAAS;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEH,mCAAC;AAAD,CAAC;AAxXU,4BAA4B;IANxC,gEAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;QACpC,SAAS,EAAC,CAAC,iGAA0B,CAAC;QACtC,gHAAoD;QACpD,+GAAmD;KACpD,CAAC;yDA8BiB,uEAAc,oBAAd,uEAAc,sDACD,iGAAyB,oBAAzB,iGAAyB,sDAC3B,6FAAuB,oBAAvB,6FAAuB,sDACnC,2DAAI,oBAAJ,2DAAI,sDAAsC,iGAA0B,oBAA1B,iGAA0B,sDAAuB,0EAAY,oBAAZ,0EAAY;GAhC5G,4BAA4B,CAwXtC;AAxXsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BE;AACa;AAQzB;AACE;AAG4B;AACA;AAG7D,IAAa,0BAA0B;IAOtC,oCAAoB,IAAU,EAAS,WAAwB;QAA3C,SAAI,GAAJ,IAAI,CAAM;QAAS,gBAAW,GAAX,WAAW,CAAa;QALvD,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC5D,eAAU,GAAG,8EAAW,CAAC,MAAM,GAAE,UAAU,CAAC,CAAE,iBAAiB;IAMvE,CAAC,6DAA4D;IAC7D,+CAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC3D,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAW,CAAC;QACjC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAGO,gDAAW,GAAnB,UAAoB,KAAU;QAC7B,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,6BAA6B;QAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,iDAAY,GAAZ,UAAa,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,GAAC,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAClE,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,+BAA+B;YAC/B,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAS,CAAC;QAC/B,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,qDAAgB,GAAhB,UAAiB,EAAE,EAAC,MAAM,EAAC,QAAQ,EAAC,WAAW,EAAE,QAAQ,EAAC,KAAK,EAAE,SAAS;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAC,WAAW,EAAE,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,KAAK,EAAE,UAAU,EAAC,SAAS,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACjL,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAS,CAAC;QAC/B,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,mDAAc,GAAd,UAAe,EAAE;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,SAAS,EAAC,IAAI,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACrF,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,0CAA0C;YAC1C,+BAA+B;YAC/B,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAW,CAAC;QACjC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAEA,oDAAe,GAAf,UAAgB,MAAM;QACpB,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC;QAEpB,IAAI,aAAa,GAAG,8EAAW,CAAC,MAAM,GAAG,UAAU,CAAC;QAEtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,GAAC,OAAO,GAAC,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACpE,SAAS,EAAE;aACX,IAAI,CAAC,aAAG;YACR,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAExB,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAGvB,iDAAiD;QACnD,eAAe;QACf,sBAAsB;QACtB,oEAAoE;QAClE,oBAAoB;QACpB,gCAAgC;QAClC,EAAE;QACF,wBAAwB;QACxB,EAAE;QACA,sBAAsB;QACtB,4CAA4C;QAC9C,4BAA4B;QAC1B,qCAAqC;QACrC,8BAA8B;QAC9B,oCAAoC;QACpC,SAAS;QACT,OAAO;QACT,EAAE;QACF,2BAA2B;QAC3B,KAAK;QACL,4BAA4B;IAK5B,CAAC;IAIH,iCAAC;AAAD,CAAC;AApGY,0BAA0B;IADtC,iEAAU,EAAE;yDAQc,2DAAI,oBAAJ,2DAAI,sDAAsB,iFAAW,oBAAX,iFAAW;GAPnD,0BAA0B,CAoGtC;AApGsC;;;;;;;;;ACjBvC;AACA;;;AAGA;AACA,wCAAyC,sBAAsB,sBAAsB,GAAG,gBAAgB,qBAAqB,sBAAsB,GAAG;;AAEtJ;;;AAGA;AACA,2C;;;;;;;ACXA,oiBAAoiB,4jCAA4jC,4BAA4B,6oMAA6oM,0BAA0B,u8D;;;;;;;;;;;;;;;;;;;;;;;ACAprP;AAEpC;AAGlB;AAEb;AACgB;AAW5D,IAAa,oBAAoB;IAiC/B,8BAAoB,WAAyB,EAAU,cAA8B,EAAU,EAAqB;QAAhG,gBAAW,GAAX,WAAW,CAAc;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAmB;QA/B1G,mBAAc,GAAG,IAAI,2DAAY,EAAE,CAAC;QAgBvC,eAAU,GAAU,EAAE,CAAC;QAEtB,iBAAY,GAAS,IAAI,CAAC;QAE3B,kBAAa,GAAU,EAAE,CAAC;QAG1B,kBAAa,GAAe,EAAE,CAAC;QAC/B,gBAAW,GAAY,KAAK,CAAC;QAC5B,UAAK,GAAO,EAAE,CAAC;QACf,eAAU,GAAU,GAAG,CAAC;QACxB,aAAQ,GAAW,KAAK,CAAC;QAEzB,eAAU,GAAY,IAAI,CAAC;IAEqF,CAAC;IAEzH,uCAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAC;YACtB,iCAAiC;YACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,0DAA0D;YAC1D,+DAA+D;YAC/D,6BAA6B;YAC7B,IAAI;YACJ,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,0CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;QACrD,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,EAAE,EAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC;YACnB,2BAA2B;YAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE3B,CAAC;QAID,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAC;YACtB,iCAAiC;YACjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE5B,CAAC;QAED,EAAE,EAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAC;YACnC,wFAAwF;YACxF,qGAAqG;YACrG,gFAAgF;YAGhF,gHAAgH;YAChH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,8CAAe,GAAf;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,8BAA8B;IAChC,CAAC;IACD,iDAAkB,GAAlB;QACE,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAI3B;;;UAGE;QAEF,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,wBAAwB;QACxB,iCAAiC;QACjC,IAAI;IACN,CAAC;IAEM,qDAAsB,GAA7B;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,iBAAiB;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAE,EAAE,CAAC;IAEzB,CAAC;IAEM,oDAAqB,GAA5B;QACE,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YAC5B,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAC;gBAE1E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC;gBAChE,EAAE,EAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;oBACjC,0GAA0G;oBAC1G,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBAC1B,CAAC;YACH,CAAC;YAAA,IAAI,EAAC;gBAEJ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,aAAa,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,EAAC;YAChE,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QACD,IAAI,EAAC;QAEL,CAAC;QACD,8BAA8B;IAChC,CAAC;IAEM,kDAAmB,GAA1B;QAEE,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;QAChB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,EAAE,EAAC,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,EAAC;YAC1D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAExD,IAAI,QAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAExC,EAAE,EAAC,QAAM,IAAI,CAAC,CAAC,EAAC;wBACd,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;wBACrC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;oBAC5C,CAAC;oBACD,EAAE,EAAC,QAAM,IAAI,CAAC,CAAC,EAAC;wBACd,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;wBACtC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC1C,+CAA+C;oBACjD,CAAC;oBACD,EAAE,EAAC,QAAM,IAAI,CAAC,CAAC,EAAC;wBACd,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;wBACzC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC1C,kDAAkD;oBACpD,CAAC;oBACD,EAAE,EAAC,QAAM,IAAI,CAAC,CAAC,EAAC;wBACd,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;wBACtC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC1C,+CAA+C;oBACjD,CAAC;oBACD,EAAE,EAAC,QAAM,IAAI,CAAC,CAAC,EAAC;wBACd,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;wBACvC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC1C,gDAAgD;oBAClD,CAAC;oBACD,EAAE,EAAC,QAAM,IAAI,CAAC,CAAC,EAAC;wBACd,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;wBACtC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC1C,+CAA+C;oBACjD,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,gDAAiB,GAAxB;QAGI,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACtC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACF,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC1C,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACF,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACvC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACF,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACxC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;QACF,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACvC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAC,KAAK,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;MAEE;IACK,qDAAsB,GAA7B;QAEE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,aAAa,GAAU,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC1D,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YAC7D,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAErC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,EAAE,EAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAC;oBAE3D,IAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,sCAAsC;oBAC7D,qCAAqC;oBACrC,yCAAyC;oBACzC,aAAa,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;QACL,CAAC;IACH,CAAC;IAEM,sDAAuB,GAA9B;QAEE,IAAI,aAAa,GAAU,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC1D,aAAa,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gDAAiB,GAAxB;QACE,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;YAE5B,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,EAAC;gBAEpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC;gBAEvD;;;kBAGE;gBACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;oBAEzC,EAAE,EAAC,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,EAAC;wBACvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;wBAExC,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAC9D,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAEpD,kEAAkE;wBAClE,EAAE,EAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;4BACvB,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;wBAC5B,CAAC;wBACD,EAAE,EAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;4BACzB,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;wBAChC,CAAC;wBACD,6BAA6B;wBAC7B,IAAI,CAAC,WAAW,GAAG,QAAQ,GAAE,GAAG,GAAE,UAAU,CAAC;oBAC/C,CAAC;oBAED,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,EAAC;wBAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;wBAEhC,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAC1D,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAEhD,kEAAkE;wBAClE,EAAE,EAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;4BACvB,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;wBAC5B,CAAC;wBACD,EAAE,EAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;4BACzB,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;wBAChC,CAAC;wBACD,6BAA6B;wBAC7B,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAE,GAAG,GAAE,UAAU,CAAC;oBAC3C,CAAC;gBAEH,CAAC,CAAC,CAAC;gBACH,+BAA+B;YACjC,CAAC;YAAA,IAAI,EAAC;gBACJ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACvB,CAAC;QACH,CAAC;QACD,6BAA6B;QAC7B,gCAAgC;QAChC,EAAE,EAAC,IAAI,CAAC,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,EAAC;YAE1D,IAAI,KAAK,GAAG;gBACV,IAAI,EAAG,EAAE;gBACT,WAAW,EAAE,EAAE;gBACf,OAAO,EAAE,EAAE;gBACX,eAAe,EAAE,EAAE;aACpB,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,EAAC;YACH,uBAAuB;YACvB,kDAAkD;QACpD,CAAC;QACD,8BAA8B;IAChC,CAAC;IAIM,iDAAkB,GAAzB;QACE,EAAE,EAAC,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,EAAC;YACnB,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC;;;;;kBAKE;gBAEF,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBAC/B,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBACtC,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3C,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBAEvC,uCAAuC;YAEzC,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,IAAE,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAGM,8CAAe,GAAtB;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;IACrC,CAAC;IAGM,+CAAgB,GAAvB;QAEE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,KAAK,GAAG;YACV,IAAI,EAAG,EAAE;YACT,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEM,0CAAW,GAAlB;QACE,IAAI,IAAI,GAAG;YACT,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,CAAC;SAClB;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAIM,qDAAsB,GAA7B,UAA8B,SAAS,EAAC,GAAG;QACzC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,EAAE,EAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAC;gBAC3B,KAAK,GAAG,CAAC,CAAC;gBACV,OAAO,GAAG,IAAI,CAAC;YACjB,CAAC;QACH,CAAC;QACD,EAAE,EAAC,CAAC,OAAO,CAAC,EAAC;YACX,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QACD,IAAI,EAAC;YACH,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QACjC,CAAC;QACD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC,IAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;QAClD,0BAA0B;IAC5B,CAAC;IAEM,gDAAiB,GAAxB,UAAyB,KAAK;QAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAEM,mDAAoB,GAA3B,UAA4B,KAAK;QAC/B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAEM,2CAAY,GAAnB,UAAoB,KAAa,EAAE,IAAI;QACrC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEO,2CAAY,GAApB;QACE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,cAAc,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,EAAC;QACjH,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEM,gDAAiB,GAAxB;QAEE,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACjD,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,mDAAmD;YAC1D,+DAA+D;YAC/D,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,iBAAiB;YACpC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YAEN;;;;;;cAME;YAEF,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;gBACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,CAAC,CAAC,CAAC;YAGH,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;YAC9B,IAAI,MAAM,GAAG;gBACX,UAAU,EAAE,EAAE,CAAC,UAAU;gBACzB,gBAAgB,EAAE,KAAK;aACxB;YACD,EAAE,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,mBAAS;gBACrE,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK,IAAK,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;YACxC,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;YACnB,EAAE,CAAC,aAAa,GAAG,EAAE,CAAC;YACtB,EAAE,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEjD,CAAC,EAAE,UAAS,OAAO;YACjB,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IAIL,CAAC;IACM,uCAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAClB,wBAAwB;QACxB,2BAA2B;QAI3B,mBAAmB;QACnB,4BAA4B;QAC5B,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEjD,2BAA2B;QAC3B,sBAAsB;IACxB,CAAC;IAID,8EAA8E;IAE9E,iDAAiD;IAC1C,0CAAW,GAAlB,UAAmB,SAAS;QAE1B;;;;;UAKE;QAEF,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACzC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,EAAC;gBAC5B,cAAc,GAAG,KAAK,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,iBAAiB,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC;QAG/C,iBAAiB,CAAC,WAAW,CAAC;YAC5B,SAAS,EAAE,IAAI;YACf,SAAS,EAAE;gBAET;;;;;;;;kBAQE;gBAEF,IAAI,gBAAgB,GAAiB,iBAAkB,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;gBAC9E,IAAI,OAAO,GAAI,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE3C,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,EAAE,EAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oBACrB,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,CAAC;gBAED,IAAI,aAAa,GAAG,KAAK,GAAG,EAAE,CAAC;gBAC/B,IAAI,kBAAkB,GAAG,OAAO,GAAG,aAAa,CAAC;gBAEjD,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC;gBAE/C,6EAA6E;gBAC7E,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1C,CAAC;SACF,CAAC,CAAC;QAEH,mDAAmD;QACnD,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IACM,sCAAO,GAAd,UAAe,SAAS;QAEtB;;;;;UAKE;QAEF,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACzC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,EAAC;gBAC5B,cAAc,GAAG,KAAK,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,aAAa,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;QAEvC,aAAa,CAAC,WAAW,CAAC;YACxB,SAAS,EAAE,IAAI;YACf,SAAS,EAAE;gBAET;;;;;;;;kBAQE;gBAEF,IAAI,gBAAgB,GAAiB,aAAc,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;gBAC1E,IAAI,OAAO,GAAI,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE3C,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,EAAE,EAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oBACrB,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,CAAC;gBAED,IAAI,aAAa,GAAG,KAAK,GAAG,EAAE,CAAC;gBAC/B,IAAI,cAAc,GAAG,OAAO,GAAG,aAAa,CAAC;gBAG7C,SAAS,CAAC,WAAW,GAAG,cAAc,CAAC;gBAEvC,6EAA6E;gBAC7E,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;QAEH,mDAAmD;QACnD,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAOD,sBAAY,2CAAS;QAHrB,6EAA6E;QAC7E,mCAAmC;aAEnC;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAsB,KAAY;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC;QAC1C,CAAC;;;OALA;IAMM,uCAAQ,GAAf,UAAgB,KAAS,EAAC,GAAU;QAClC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC;IAEhD,CAAC;IAEM,sCAAO,GAAd,UAAe,KAAS;IACxB,CAAC;IAEM,oCAAK,GAAZ,UAAa,KAAS;IACtB,CAAC;IAEM,2CAAY,GAAnB,UAAoB,KAAS;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEH,2BAAC;AAAD,CAAC;AAvmBW;IAAT,6DAAM,EAAE;;4DAAqC;AACrC;IAAR,4DAAK,EAAE;;oDAAa;AACZ;IAAR,4DAAK,EAAE;;8DAAyB;AAEG;IAAnC,gEAAS,CAAC,uBAAuB,CAAC;kDAAwB,yDAAU,oBAAV,yDAAU;mEAAC;AAG5C;IAAzB,mEAAY,CAAC,UAAU,CAAC;kDAAY,wDAAS,oBAAT,wDAAS;uDAAa;AAChC;IAA1B,mEAAY,CAAC,WAAW,CAAC;kDAAa,wDAAS,oBAAT,wDAAS;wDAAa;AAC/B;IAA7B,mEAAY,CAAC,cAAc,CAAC;kDAAgB,wDAAS,oBAAT,wDAAS;2DAAa;AACxC;IAA1B,mEAAY,CAAC,WAAW,CAAC;kDAAa,wDAAS,oBAAT,wDAAS;wDAAa;AACjC;IAA3B,mEAAY,CAAC,YAAY,CAAC;kDAAc,wDAAS,oBAAT,wDAAS;yDAAa;AACpC;IAA1B,mEAAY,CAAC,WAAW,CAAC;kDAAa,wDAAS,oBAAT,wDAAS;wDAAa;AAEnC;IAAzB,mEAAY,CAAC,UAAU,CAAC;kDAAkB,wDAAS,oBAAT,wDAAS;6DAAa;AAhBtD,oBAAoB;IALhC,gEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,qHAA4C;QAC5C,oHAA2C;KAC5C,CAAC;yDAkCiC,0EAAY,oBAAZ,0EAAY,sDAA0B,+EAAc,oBAAd,+EAAc,sDAAc,gEAAiB,oBAAjB,gEAAiB;GAjCzG,oBAAoB,CAymBhC;AAzmBgC;;;;;;;;;ACnBjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6Z;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACN;AACtB;AAEI;AAMyB;AAQ9D,IAAa,kBAAkB;IAmB7B,4BAAoB,gBAAkC,EAC7C,QAA8B;QADnB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC7C,aAAQ,GAAR,QAAQ,CAAsB;QAVvC,8BAA8B;QACvB,YAAO,GAAG;YACZ,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;YAC3B,kBAAkB;YACjB,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,WAAW;YACpB,YAAY,EAAE,KAAK;SACtB,CAAC;QAID,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,mDAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;aACxC,GAAG,CAAC,WAAC,IAAI,2CAAM,EAAE,EAAR,CAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IACD,kCAAK,GAAL,UAAM,KAAK;QACT,IAAI,UAAU,GAAG,oCAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,KAAK;IACd,CAAC;IACD,4CAAe,GAAf,UAAgB,MAAM;QACpB,IAAI,KAAK,GAAG,aAAa,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;gBACzC,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC9C,CAAC;QACH,CAAC;QAED,MAAM,CAAC,KAAK;IACd,CAAC;IAGD,aAAa;IACb,iCAAiC;IACjC,0BAA0B;IAC1B,2BAA2B;IAC3B,UAAU;IACV,MAAM;IAGC,qCAAQ,GAAf;QAEA,uBAAuB;QACrB,wBAAwB;QACxB,4BAA4B;QAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,WAAW,CAAC;IACpC,CAAC;IAGM,wCAAW,GAAlB;QACE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAEH,yBAAC;AAAD,CAAC;AA/DY,kBAAkB;IAN9B,gEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,SAAS,EAAC,CAAC,4EAAoB,CAAC;QAChC,0FAAyC;QACzC,yFAAwC;KACzC,CAAC;yDAoBsC,4EAAgB,oBAAhB,4EAAgB,sDACnC,4EAAoB,oBAApB,4EAAoB;GApB5B,kBAAkB,CA+D9B;AA/D8B;;;;;;;;;;;;;;;;;;;;;;;;;;AClBY;AACI;AAGhB;AACE;AAGjC,IAAa,gBAAgB;IAE3B,0BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAE9B,CAAC;IAGH,uBAAC;AAAD,CAAC;AAPY,gBAAgB;IAD5B,iEAAU,EAAE;yDAGe,2DAAI,oBAAJ,2DAAI;GAFnB,gBAAgB,CAO5B;AAP4B;;;;;;;;;ACR7B,2bAA2b,+/EAA+/E,oCAAoC,sCAAsC,mCAAmC,qCAAqC,uCAAuC,wCAAwC,oK;;;;;;;;;;;;;;;;;;;;;ACA5iG;AAG3D;AAGK;AAQzD,IAAa,sBAAsB;IAmBjC,gCACU,cAA8B,EAC9B,YAA0B;QAD1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAhB1B,mBAAc,GAAG,IAAI,2DAAY,EAAE,CAAC;QAI9C,yBAAyB;QACjB,kBAAa,GAAW,IAAI,CAAC;QAErC,2BAA2B;QACpB,wBAAmB,GAAe,EAAE,CAAC;QAErC,UAAK,GAAU,EAAE,CAAC;QAElB,gBAAW,GAAY,KAAK,CAAC;IAOpC,CAAC;IAED;MACE;IACF,yCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,qCAAqC;QACrC,cAAc;QACd,0BAA0B;QAC1B,iCAAiC;QACjC,MAAM;QACN,uCAAuC;IACzC,CAAC;IAED;MACE;IACF,4CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;IAEvD,CAAC;IAED;;MAEE;IACK,8CAAa,GAApB,UAAqB,YAAY,EAAC,cAAc,EAAE,WAAW,EAAE,eAAe,EAC5E,gBAAgB,EAAE,cAAc;QAC9B,4CAA4C;QAG5C,qCAAqC;QACrC,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEzC,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE,eAAe;YAC1B,KAAK,EAAE,WAAW;YAClB,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,cAAc;YACxB,KAAK,EAAE,cAAc;YACrB,eAAe,EAAE,gBAAgB;SAClC;QAED,mEAAmE;QAEnE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,aAAG;YAC5D,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;QACF;;;;;;;;;;;;;;;;;;UAkBE;IAKN,CAAC;IAGG;;MAEE;IACC,yCAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACpD,CAAC;IAED,8EAA8E;IAC9E,sBAAsB;IAGf,mDAAkB,GAAzB;QACE,EAAE,EAAC,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,EAAC;YACnB,qEAAqE;YAGrE,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC;;;;;kBAKE;gBACF,IAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACrC,IAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC5C,IAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;YACnD,CAAC,CAAC,CAAC;YACH,2BAA2B;YAC3B,yCAAyC;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,EAAE,EAAC,IAAE,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBACpC,wBAAwB;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,qDAAoB,GAA5B;QAKE,IAAI,CAAC,OAAO,GAAG;YACb,QAAQ,EAAE,IAAI;SACf;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,6CAAY,GAAnB;QAEE,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,2BAA2B;QAC3B,yBAAyB;QAEzB,EAAE,EAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBAClD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAEzC,EAAE,EAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;wBACpC,2DAA2D;wBAC3D,4BAA4B;wBAC5B,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB;oBACvD,CAAC;gBACH,CAAC;YAEH,CAAC,CAAC,CAAC;QACL,CAAC;QAID,6DAA6D;QAC7D,iCAAiC;QACjC,mCAAmC;QACnC,qCAAqC;QAErC,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAED,6EAA6E;IAC7E,mCAAmC;IAGnC,kDAAiB,GAAjB,UAAkB,IAAuB;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,4BAA4B;IAC9B,CAAC;IAIH,6BAAC;AAAD,CAAC;AApMU;IAAR,4DAAK,EAAE;;qDAAe;AACb;IAAT,6DAAM,EAAE;;8DAAqC;AAET;IAApC,gEAAS,CAAC,wBAAwB,CAAC;kDAAyB,yDAAU,oBAAV,yDAAU;sEAAC;AAP7D,sBAAsB;IAJlC,gEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,+FAAmC;KACpC,CAAC;yDAqB0B,wEAAc,oBAAd,wEAAc,sDAChB,0EAAY,oBAAZ,0EAAY;GArBzB,sBAAsB,CAwMlC;AAxMkC;;;;;;;;;ACdnC;AACA;;;AAGA;AACA,kEAAmE,mCAAmC,eAAe,8BAA8B,8CAA8C,gDAAgD,iGAAiG,GAAG;;AAErV;;;AAGA;AACA,2C;;;;;;;ACXA,2bAA2b,27G;;;;;;;;;;;;;;;;;;;;;;ACA5U;AAMZ;AAEvB;AACI;AAYhF,IAAa,qBAAqB;IAyBhC,+BACU,0BAAsD,EACtD,kBAA6C,EAC7C,gBAAyC;QAFzC,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAyB;QAxBzC,kBAAa,GAAG,IAAI,2DAAY,EAAE,CAAC;QACnC,oBAAe,GAAG,IAAI,2DAAY,EAAE,CAAC;QAIxC,iBAAY,GAAS,IAAI,CAAC;QAG1B,iBAAY,GAAG,IAAI,CAAC;QAKpB,gBAAW,GAAY,KAAK,CAAC;QAC7B,kBAAa,GAAe,EAAE,CAAC;QAE/B,UAAK,GAAU,EAAE,CAAC;QAGjB,eAAU,GAAU,GAAG,CAAC;QACxB,aAAQ,GAAW,KAAK,CAAC;QAM/B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAGD;MACE;IACF,wCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,oBAAoB;QACpF,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,6CAAa,GAAb;QAAA,iBAmBC;QAlBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAC;YAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;gBAElE,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC5B,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACpD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAEM,kDAAkB,GAAzB;QACE,EAAE,EAAC,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,EAAC;YACnB,qEAAqE;YAGrE,IAAI,IAAE,GAAG,IAAI,CAAC;YAEd,kCAAkC;YAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC;;;;;kBAKE;gBACF,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBAC/B,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBACtC,IAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAG5B,EAAE,EAAC,IAAE,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAC9B,wBAAwB;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,oDAAoB,GAA5B;QAEE,IAAI,CAAC,OAAO,GAAG;YACb,QAAQ,EAAE,IAAI;SACf;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtC,yEAAyE;QACzE,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,EAAE,EAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAC;YAChC,8CAA8C;YAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC;IACH,CAAC;IAEM,+CAAe,GAAtB,UAAuB,MAAM,EAAC,QAAQ,EAAC,KAAK,EAAC,aAAa;QACxD,IAAI,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;QACrC,IAAI,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACnD,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEzC,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,EAAE,EAAC,MAAM,EAAC,QAAQ,EAAC,WAAW,EAAE,aAAa,EAAC,cAAc,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,qBAAW;YAExI,4BAA4B;YAC5B,+BAA+B;YAE/B,EAAE,CAAC,kBAAkB,CAAC,MAAM,GAAG,MAAM,CAAC;YACtC,EAAE,CAAC,kBAAkB,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1C,EAAE,CAAC,kBAAkB,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;YACtD,EAAE,CAAC,kBAAkB,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAChD,kCAAkC;YAClC,EAAE,CAAC,kBAAkB,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAEhD,0DAA0D;YAC1D,EAAE,CAAC,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAEhD,EAAE,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC/C,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAErC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,4CAAY,GAAnB;QAEE,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,2BAA2B;QAC3B,yBAAyB;QAEzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YAC5C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAEzC,EAAE,EAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;oBACpC,2DAA2D;oBAC3D,4BAA4B;oBAC5B,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB;gBACvD,CAAC;YACH,CAAC;QAEH,CAAC,CAAC,CAAC;QAEH,6DAA6D;QAC7D,iCAAiC;QACjC,mCAAmC;QACnC,qCAAqC;QAErC,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAID;MACE;IACF,2CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;QACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,oBAAoB;IACtF,CAAC;IAKD,sBAAsB;IACtB,mBAAmB;IACnB,WAAW;IACX,gEAAgE;IAChE,yDAAyD;IACzD,uBAAuB;IACvB,8BAA8B;IAC9B,qCAAqC;IACrC,iCAAiC;IACjC,0CAA0C;IAC1C,oCAAoC;IACpC,0BAA0B;IAC1B,+BAA+B;IAC/B,6BAA6B;IAC7B,uEAAuE;IACvE,kDAAkD;IAClD,iCAAiC;IACjC,wCAAwC;IACxC,EAAE;IACF,gCAAgC;IAChC,0DAA0D;IAC1D,0CAA0C;IAC1C,yBAAyB;IACzB,IAAI;IAGJ;;MAEE;IACK,wCAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC;IAGD,6EAA6E;IAC7E,mCAAmC;IAGnC,uCAAO,GAAP,UAAQ,IAAuB;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,4BAA4B;IAC9B,CAAC;IAGD,sBAAY,4CAAS;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAsB,KAAY;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC;QAC1C,CAAC;;;OALA;IAMM,wCAAQ,GAAf,UAAgB,KAAS;QACvB,8CAA8C;IAChD,CAAC;IAEM,uCAAO,GAAd,UAAe,KAAS;QACtB,6CAA6C;IAC/C,CAAC;IAEM,qCAAK,GAAZ,UAAa,KAAS;QACpB,6CAA6C;IAC/C,CAAC;IAEM,4CAAY,GAAnB,UAAoB,KAAS;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAGH,4BAAC;AAAD,CAAC;AA9PU;IAAR,4DAAK,EAAE;;iEAAyB;AACvB;IAAT,6DAAM,EAAE;;4DAAoC;AACnC;IAAT,6DAAM,EAAE;;8DAAsC;AAEX;IAAnC,gEAAS,CAAC,uBAAuB,CAAC;kDAAwB,yDAAU,oBAAV,yDAAU;oEAAC;AAP3D,qBAAqB;IALjC,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6FAAkC;QAClC,4FAAiC;KAClC,CAAC;yDA2BsC,sHAA0B,oBAA1B,sHAA0B,sDAClC,iGAAyB,oBAAzB,iGAAyB,sDAC3B,6FAAuB,oBAAvB,6FAAuB;GA5BxC,qBAAqB,CAiQjC;AAjQiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBS;AACY;AAKxB;AACE;AAE4B;AAEA;AAG7D,IAAa,cAAc;IAK1B,wBAAoB,IAAU,EAAU,WAAwB;QAA5C,SAAI,GAAJ,IAAI,CAAM;QAAU,gBAAW,GAAX,WAAW,CAAa;QAHxD,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACzD,eAAU,GAAG,8EAAW,CAAC,MAAM,GAAE,UAAU,CAAC,CAAE,iBAAiB;IAI1E,CAAC,6DAA4D;IAC7D,oCAAW,GAAX;QACO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC3D,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACnB,oCAAoC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAc,CAAC;QACpC,CAAC,CAAC;aACK,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEI,qCAAY,GAAnB,UAAoB,WAAW;QAA/B,iBASC;QARA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC,SAAS,EAAE;YAClG,IAAI,CAAC,aAAG;YACP,oDAAoD;YACpD,2BAA2B;YAE3B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,EAAhB,CAAgB,CAAC,CAAC;IACjC,CAAC;IAEK,yCAAgB,GAAvB,UAAwB,EAAE,EAAC,MAAM;QAAjC,iBAMC;QALA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,aAAa,EAAC,MAAM,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,mBAAS;YACtH,oCAAoC;YACpC,yBAAyB;YACzB,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,EAAhB,CAAgB,CAAC,CAAC;IACnC,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAU;QACvB,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;QAClE,6BAA6B;QAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IACpD,CAAC;IAGH,qBAAC;AAAD,CAAC;AA5CY,cAAc;IAD1B,iEAAU,EAAE;yDAMc,2DAAI,oBAAJ,2DAAI,sDAAuB,iFAAW,oBAAX,iFAAW;GALpD,cAAc,CA4C1B;AA5C0B;;;;;;;;;ACd3B;AACA;;;AAGA;AACA,8DAA+D,yBAAyB,yBAAyB,kBAAkB,iCAAiC,kCAAkC,mCAAmC,mCAAmC,qBAAqB,GAAG,qBAAqB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,gCAAgC,uBAAuB,oBAAoB,gBAAgB,GAAG,qBAAqB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,gCAAgC,iCAAiC,kCAAkC,wBAAwB,oBAAoB,8BAA8B,+BAA+B,2CAA2C,GAAG,qBAAqB,oBAAoB,wBAAwB,6BAA6B,yBAAyB,sBAAsB,GAAG,gBAAgB,mBAAmB,sBAAsB,GAAG,aAAa,2BAA2B,sBAAsB,yBAAyB,sBAAsB,6BAA6B,+BAA+B,kBAAkB,2BAA2B,sCAAsC,yBAAyB,sBAAsB,6BAA6B,+BAA+B,wFAAwF,kCAAkC,GAAG,8BAA8B,+BAA+B,GAAG,aAAa,8BAA8B,GAAG,iBAAiB,qCAAqC,kCAAkC,kCAAkC,iCAAiC,+BAA+B,GAAG,kBAAkB,gCAAgC,iCAAiC,kCAAkC,GAAG;;AAEx+D;;;AAGA;AACA,2C;;;;;;;ACXA,wWAAwW,+BAA+B,kCAAkC,eAAe,mBAAmB,gCAAgC,aAAa,0jBAA0jB,oCAAoC,qRAAqR,eAAe,yPAAyP,YAAY,+PAA+P,cAAc,6QAA6Q,cAAc,ggCAAggC,gDAAgD,uBAAuB,2BAA2B,6rC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1rG;AAE/E,oBAAoB;AACkC;AACA;AACD;AACV;AACN;AACF;AACJ;AACS;AACQ;AACT;AAEiB;AAExD,uBAAuB;AACkB;AAEzC,uBAAuB;AACuB;AAEqD;AAGnB;AACJ;AAY5E,IAAa,qBAAqB;IAiBhC,+BACU,kBAA6C,EAC7C,gBAAyC,EACzC,0BAAsD;QAFtD,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,+BAA0B,GAA1B,0BAA0B,CAA4B;QAlBtD,6BAAwB,GAAG,IAAI,2DAAY,EAAE,CAAC;QAExD,qBAAgB,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAI/E,cAAS,GAAG,IAAI,gFAAc,CAAS,IAAI,EAAE,EAAE,CAAC,CAAC;QAKjD,uBAAkB,GAAG;YACnB,IAAI,EAAG,EAAE;SACV,CAAC;QAOA,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,kBAAkB,CAAC,CAAC;IACjE,CAAC;IAMD,wCAAQ,GAAR,UAAS,GAAG;QACV,GAAG,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC;QACrC,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;IAChC,CAAC;IAED,yCAAS,GAAT;QACE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC9D,CAAC;IAED,wCAAQ,GAAR;QAAA,iBA0BG;QAvBD,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,kBAAkB,GAAG;YACxB,IAAI,EAAG,EAAE;SACV,CAAC;QAEF,sCAAsC;QACtC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;QAE5D,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzF,2DAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC;aACvD,YAAY,CAAC,GAAG,CAAC;aACjB,oBAAoB,EAAE;aACtB,SAAS,CAAC;YACT,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YAAC,CAAC;YACT,IAAI,EAAC;gBAEH,IAAI,WAAW,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;gBAClD,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAa,GAAb;QAAA,iBAkBC;QAjBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAC;YAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;gBAElE,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;gBACtD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAED,gDAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,+CAAe,GAAf,UAAgB,MAAM;QACpB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAGD,4CAAY,GAAZ,UAAa,MAAM;QAEjB,IAAI,CAAE,kBAAkB,GAAG,MAAM,CAAC;QAClC;;;UAGE;QACF,UAAU,CAAC;YACT,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,EACD,GAAG,CAAC,CAAC;IACP,CAAC;IAGD,kDAAkB,GAAlB,UAAmB,MAAM;QACvB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,+BAA+B;IAC/B,gDAAgB,GAAhB,UAAiB,MAAM;QACrB,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACjC,IAAI,cAAc,CAAC;QACnB,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAM;YACjE,qBAAqB;YACrB,cAAc,GAAG,MAAM,CAAC;YAExB,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;YAC5D,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACrC,4DAA4D;YAC5D,wBAAwB;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAqB,GAArB,UAAsB,cAAc;QAElC;;;;UAIE;QAGF,mCAAmC;QACnC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAEtD,wEAAwE;QACxE,IAAI,CAAC,kBAAkB,GAAG;YACxB,IAAI,EAAG,EAAE;SACV,CAAC;IAKJ,CAAC;IAEH,4BAAC;AAAD,CAAC;AAtJS;IAAT,6DAAM,EAAE;;uEAA+C;AAuBnC;IAApB,gEAAS,CAAC,QAAQ,CAAC;kDAAS,yDAAU,oBAAV,yDAAU;qDAAC;AACrB;IAAlB,gEAAS,CAAC,kEAAM,CAAC;kDAAO,kEAAM,oBAAN,kEAAM;mDAAC;AACR;IAAvB,gEAAS,CAAC,uEAAW,CAAC;kDAAY,uEAAW,oBAAX,uEAAW;wDAAC;AA3BpC,qBAAqB;IALjC,gEAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,uGAA4C;QAC5C,sGAA2C;KAC5C,CAAC;yDAmB8B,kGAAyB,oBAAzB,kGAAyB,sDAC3B,8FAAuB,oBAAvB,8FAAuB,sDACb,uHAA0B,oBAA1B,uHAA0B;GApBrD,qBAAqB,CAwJ/B;AAxJ+B;AA2JhC,8EAA8E;AAE9E;;EAEE;AACF;IAME,yBAAoB,kBAA6C;QAA7C,uBAAkB,GAAlB,kBAAkB,CAA2B;QALjE,6DAA6D;QAC7D,eAAU,GAA2B,IAAI,qEAAe,CAAQ,EAAE,CAAC,CAAC;QAKlE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IALD,sBAAI,iCAAI;aAAR,cAAoB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAOnD,yCAAe,GAAf;QAAA,iBAeC;QAdC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAC;YACnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAO;gBAE5E,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;gBAC3D,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACzB,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGD;;MAEE;IACF,oCAAU,GAAV,UAAW,OAAc;QACvB,IAAI,UAAU,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAGD,mCAAS,GAAT,UAAU,MAAM;QAEd,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAE5C,CAAC;IAED,oCAAU,GAAV,UAAW,aAAa;QACtB,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;IACtD,CAAC;IAED,sCAAY,GAAZ,UAAa,MAAM;QAEjB,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAE/C,CAAC;IAED,0CAAgB,GAAhB,UAAiB,cAAc;QAG7B,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;IAE3D,CAAC;IAIH,sBAAC;AAAD,CAAC;;AAGD,8EAA8E;AAE9E;;;EAGE;AACF;IAAuC,qCAAe;IASpD,2BAAoB,gBAAiC,EAAW,KAAa,EAAW,UAAuB;QAA/G,YACE,iBAAO,SACR;QAFmB,sBAAgB,GAAhB,gBAAgB,CAAiB;QAAW,WAAK,GAAL,KAAK,CAAQ;QAAW,gBAAU,GAAV,UAAU,CAAa;QAR/G,mBAAa,GAAG,IAAI,qEAAe,CAAC,EAAE,CAAC,CAAC;QAKxC,kBAAY,GAAU,EAAE,CAAC;QACzB,kBAAY,GAAU,EAAE,CAAC;;IAIzB,CAAC;IATD,sBAAI,qCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD,UAAW,MAAc,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OADN;IAWzD;;MAEE;IACF,mCAAO,GAAP;QAAA,iBA8BC;QA7BC,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,KAAK,CAAC,YAAY;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI;SACrB,CAAC;QAEF,MAAM,CAAC,2DAAU,CAAC,KAAK,OAAhB,2DAAU,EAAU,kBAAkB,EAAE,GAAG,CAAC;YACjD,mCAAmC;YAEnC,kCAAkC;YAClC,KAAI,CAAC,YAAY,GAAK,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAC,IAAS;gBAExE,4DAA4D;gBAC5D,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;gBAE7G,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YAEH,wBAAwB;YACxB,IAAM,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;YAE5D,qDAAqD;YACrD,IAAM,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxE,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAG5E,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAU,GAAV,cAAc,CAAC;IAEf;;MAEE;IACF,oCAAQ,GAAR,UAAS,IAAW;QAApB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAEtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACpB,IAAI,SAAS,GAAkB,EAAE,CAAC;YAClC,IAAI,SAAS,GAAkB,EAAE,CAAC;YAElC,MAAM,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1B,KAAK,WAAW;oBAAE,+BAAmD,EAAlD,iBAAS,EAAE,iBAAS,CAA+B;oBAAC,KAAK,CAAC;gBAC7E,KAAK,QAAQ;oBAAE,yBAA6C,EAA5C,iBAAS,EAAE,iBAAS,CAAyB;oBAAC,KAAK,CAAC;gBACpE,KAAK,UAAU;oBAAE,6BAAiD,EAAhD,iBAAS,EAAE,iBAAS,CAA6B;oBAAC,KAAK,CAAC;gBAC1E,KAAK,UAAU;oBAAE,6BAAiD,EAAhD,iBAAS,EAAE,iBAAS,CAA6B;oBAAC,KAAK,CAAC;YAC5E,CAAC;YAED,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;YACxD,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;YAExD,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAC/E,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC,CAzEsC,4EAAU,GAyEhD;;;;;;;;;;ACtVH;AACA;;;AAGA;AACA,kEAAmE,mCAAmC,eAAe,8BAA8B,8CAA8C,gDAAgD,iGAAiG,GAAG;;AAErV;;;AAGA;AACA,2C;;;;;;;ACXA,0dAA0d,qkDAAqkD,wI;;;;;;;;;;;;;;;;;;;;;;;ACAh7D;AAE3E;AACY;AAEJ;AAY5C,IAAa,oBAAoB;IAU/B,8BACU,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QATpC,iCAAiC;QACjC,kCAAkC;QACxB,iBAAY,GAAG,IAAI,2DAAY,EAAE,CAAC;QAS1C,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAI,EAAE,CAAC;IAC9B,CAAC;IAED;MACE;IACF,uCAAQ,GAAR;IAEA,CAAC;IAED;MACE;IACF,0CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;IAEvD,CAAC;IACH,kHAAkH;IACzG,kDAAmB,GAA1B,UAA2B,UAAiB;QAC1C,UAAU,CAAC,SAAS,EAAE,CAAC;QACvB,kGAAkG;IACpG,CAAC;IACG;;MAEE;IACC,uCAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAED,wCAAS,GAAT,UAAU,SAAS,EAAC,MAAM;QAA1B,iBA4BC;QA3BC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU;YAC9D,iDAAiD;YACjD,6BAA6B;YAE7B,sBAAsB;YACtB,KAAI,CAAC,SAAS,GAAG,IAAI,wDAAI,EAAE,CAAC;YAE5B,2CAA2C;YAC3C,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnC,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAG9C,mDAAI,CAAC;gBACH,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,wBAAwB;gBAC9B,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC,IAAI,CACL,cAAa,CAAC;YACd,iCAAiC;YACjC,UAAU,OAAO;gBACf,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBAE1B,CAAC;YACH,CAAC,CACF;QACD,CAAC,CAAC;IACJ,CAAC;IAED,mDAAoB,GAApB;QACE,UAAU,CAAC;YACT,CAAC,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC,EACD,GAAG,CAAC,CAAC;IACP,CAAC;IAED,iDAAkB,GAAlB;QACE,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAIH,2BAAC;AAAD,CAAC;AAnFW;IAAT,6DAAM,EAAE;;0DAAmC;AAEX;IAAhC,gEAAS,CAAC,oBAAoB,CAAC;kDAAqB,yDAAU,oBAAV,yDAAU;gEAAC;AANrD,oBAAoB;IALhC,gEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0FAAiC;QACjC,yFAAgC;KACjC,CAAC;yDAYwB,oEAAY,oBAAZ,oEAAY;GAXzB,oBAAoB,CAuFhC;AAvFgC;;;;;;;;;ACjBjC,kbAAkb,swDAAswD,oK;;;;;;;;;;;;;;;;;;;;;;ACAzkE;AAI/D;AAEJ;AAO5C,IAAa,mBAAmB;IAc9B,6BACU,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAX1B,gBAAW,GAAG,IAAI,2DAAY,EAAE,CAAC;QACjC,kBAAa,GAAG,IAAI,2DAAY,EAAE,CAAC;QAI7C,yBAAyB;QACzB,qCAAqC;QAE9B,eAAU,GAAG,IAAI,CAAC;IAMzB,CAAC;IAED;MACE;IACF,sCAAQ,GAAR;QACE,qCAAqC;QACrC,cAAc;QACd,wCAAwC;QACxC,0BAA0B;QAC1B,qFAAqF;QACrF,EAAE;QACF,kCAAkC;QAClC,MAAM;QACN,uCAAuC;IACzC,CAAC;IAED;MACE;IACF,yCAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;QACrD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAsB;IACxE,CAAC;IAED;;MAEE;IACK,wCAAU,GAAjB;QACE,4CAA4C;QAC5C,uCAAuC;QAFzC,iBAkBC;QAdC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC;aACrE,IAAI,CAAC,kBAAQ;YACZ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAGhC,yCAAyC;YACzC,6BAA6B;YAC7B,4BAA4B;YAC5B,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEjD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;IACtC,CAAC;IAGD;;MAEE;IACK,sCAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,4BAA4B;QAC5B,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAED,sCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,qDAAqD;YAC5D,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;YAClC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAa;gBACvD,yCAAyC;gBACzC,wBAAwB;gBACxB,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAGrC,yCAAyC;gBACzC,8BAA8B;gBAC9B,4BAA4B;gBAC5B,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAE/C,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAIH,0BAAC;AAAD,CAAC;AAvGU;IAAR,4DAAK,EAAE;;iDAAW;AACT;IAAT,6DAAM,EAAE;;wDAAkC;AACjC;IAAT,6DAAM,EAAE;;0DAAoC;AAEX;IAAjC,gEAAS,CAAC,qBAAqB,CAAC;kDAAsB,yDAAU,oBAAV,yDAAU;gEAAC;AAPvD,mBAAmB;IAL/B,gEAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,wFAAgC;QAChC,iFAAqC;KACtC,CAAC;yDAgBwB,oEAAY,oBAAZ,oEAAY;GAfzB,mBAAmB,CA0G/B;AA1G+B;;;;;;;;;;ACbhC;AAAA;IAAA;IAIA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACJ2B;AACsB;AAKlD,IAAa,eAAe;IAA5B;IAmBA,CAAC;IAjBG,mCAAS,GAAT,UAAU,KAAY,EAAE,KAAa;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,8CAAQ,CAAC,KAAK,EAAE,aAAG;gBACxB,IAAI,KAAK,GAAG,KAAK,CAAC;gBAClB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;oBAC9D,KAAK,GAAG,IAAI,CAAC;gBACf,CAAC;gBACD,IAAI,EAAC;oBACH,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;wBACjE,KAAK,GAAG,IAAI,CAAC;oBACf,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,sBAAC;AAAD,CAAC;AAnBY,eAAe;IAH3B,2DAAI,CAAC;QACF,IAAI,EAAE,aAAa;KACtB,CAAC;GACW,eAAe,CAmB3B;AAnB2B;;;;;;;;ACN5B;AACA;;;AAGA;AACA,kEAAmE,mCAAmC,eAAe,8BAA8B,8CAA8C,gDAAgD,iGAAiG,GAAG;;AAErV;;;AAGA;AACA,2C;;;;;;;ACXA,0P;;;;;;;;;;;;;;;;;;;;;;;ACAyE;AAG5B;AAEV;AACS;AAW5C,IAAa,cAAc;IAYzB,wBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QATvC,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,OAAO,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAElB,iBAAY,GAAG,IAAI,CAAC;QAKzB,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAI,EAAE,CAAC;IAC9B,CAAC;IAED,iCAAQ,GAAR;QACE,sBAAsB;IACxB,CAAC;IAED,kHAAkH;IACzG,4CAAmB,GAA1B,UAA2B,UAAiB;QAC1C,UAAU,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAEK,oCAAW,GAAnB;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY;aAChB,QAAQ,EAAE;aACV,IAAI,CAAC,wBAAc;YAChB,KAAI,CAAC,KAAK,GAAG,cAAc,CAAC;YAC5B,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;YAC3B,uBAAuB;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAM,GAAN,UAAO,IAAI;QAET,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB;;;UAGE;QACF,UAAU,CAAC;YACT,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC,EACD,GAAG,CAAC,CAAC;IACP,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,qDAAqD;YAC5D,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;YAClC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAS;gBACnD,yCAAyC;gBACzC,wBAAwB;gBACxB,IAAI,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAKD,6CAAoB,GAApB;QACE,UAAU,CAAC;YACT,CAAC,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC,EACD,GAAG,CAAC,CAAC;IACP,CAAC;IAED,2CAAkB,GAAlB;QACE,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAED,kCAAS,GAAT,UAAU,SAAS,EAAC,MAAM;QAA1B,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU;YAC5D,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5B,8BAA8B;YAC9B,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAChD,CAAC,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb,UAAc,WAAW;QACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAEzB,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YACrC,oBAAoB;YACpB,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,EAAC;gBAC9B,UAAU,GAAG,KAAK,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,EAAC,UAAU,IAAI,CAAC,CAAC,EAAC;YAClB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;QAC1D,CAAC;IAEH,CAAC;IAIH,qBAAC;AAAD,CAAC;AAlHkC;IAAhC,gEAAS,CAAC,oBAAoB,CAAC;kDAAqB,yDAAU,oBAAV,yDAAU;0DAAC;AADrD,cAAc;IAN1B,gEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,SAAS,EAAC,CAAC,oEAAY,CAAC;QACxB,kFAAqC;QACrC,iFAAoC;KACrC,CAAC;yDAakC,oEAAY,oBAAZ,oEAAY;GAZnC,cAAc,CAmH1B;AAnH0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBgB;AACa;AAGzB;AACE;AAG4B;AAEA;AAG7D,IAAa,YAAY;IAMvB,sBAAoB,IAAU,EAAS,WAAwB;QAA3C,SAAI,GAAJ,IAAI,CAAM;QAAS,gBAAW,GAAX,WAAW,CAAa;QAJvD,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC5D,aAAQ,GAAG,8EAAW,CAAC,MAAM,GAAE,QAAQ,CAAC,CAAE,iBAAiB;IAGA,CAAC;IAEpE,+BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACzD,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACZ,iCAAiC;YACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAY,CAAC;QACnC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAED,qCAAc,GAAd,UAAe,EAAE,EAAC,KAAK;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACxE,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,6CAA6C;YAC7C,oCAAoC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAY,CAAC;QAClC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzB,CAAC;IAED,gCAAS,GAAT,UAAU,SAAS,EAAC,MAAM;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,EAAC,SAAS,EAAE,SAAS,EAAC,MAAM,EAAC,MAAM,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;aAC5G,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,6CAA6C;YAC7C,oCAAoC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAU,CAAC;QAChC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzB,CAAC;IAED,mCAAY,GAAZ,UAAa,GAAG;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,GAAG,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACtE,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,0CAA0C;YAC1C,+BAA+B;YAC/B,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAY,CAAC;QAClC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzB,CAAC;IAID,6EAA6E;IACrE,kCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC;QACpE,6BAA6B;QAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAEH,mBAAC;AAAD,CAAC;AA7DY,YAAY;IADxB,iEAAU,EAAE;yDAOe,2DAAI,oBAAJ,2DAAI,sDAAsB,iFAAW,oBAAX,iFAAW;GANpD,YAAY,CA6DxB;AA7DwB;;;;;;;;;ACbzB;AACA;;;AAGA;AACA,8DAA+D,yBAAyB,yBAAyB,kBAAkB,iCAAiC,kCAAkC,mCAAmC,mCAAmC,qBAAqB,GAAG,qBAAqB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,gCAAgC,uBAAuB,oBAAoB,gBAAgB,GAAG,qBAAqB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,gCAAgC,iCAAiC,kCAAkC,wBAAwB,oBAAoB,8BAA8B,+BAA+B,2CAA2C,GAAG,qBAAqB,oBAAoB,wBAAwB,6BAA6B,yBAAyB,sBAAsB,GAAG,gBAAgB,mBAAmB,sBAAsB,GAAG,aAAa,2BAA2B,sBAAsB,yBAAyB,sBAAsB,6BAA6B,+BAA+B,kBAAkB,2BAA2B,sCAAsC,yBAAyB,sBAAsB,6BAA6B,+BAA+B,wFAAwF,kCAAkC,GAAG,8BAA8B,+BAA+B,GAAG,aAAa,8BAA8B,GAAG,iBAAiB,qCAAqC,kCAAkC,kCAAkC,iCAAiC,+BAA+B,GAAG,kBAAkB,gCAAgC,iCAAiC,kCAAkC,GAAG;;AAEx+D;;;AAGA;AACA,2C;;;;;;;ACXA,wuBAAwuB,oCAAoC,sPAAsP,eAAe,2NAA2N,YAAY,0qBAA0qB,0CAA0C,uBAAuB,2BAA2B,+yB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/6D;AAE/E,oBAAoB;AACkC;AACA;AACD;AACV;AACN;AACF;AACJ;AACS;AACQ;AACT;AAEiB;AAExD,uBAAuB;AACkB;AAEzC,uBAAuB;AACuB;AAGE;AAG4B;AAY5E,IAAa,mBAAmB;IAe9B,6BAAoB,YAA0B,EAAU,uBAAgD;QAApF,iBAAY,GAAZ,YAAY,CAAc;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QAb9F,qBAAgB,GAAG,IAAI,2DAAY,EAAE,CAAC;QAEhD,qBAAgB,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAI3C,cAAS,GAAG,IAAI,gFAAc,CAAS,IAAI,EAAE,EAAE,CAAC,CAAC;QAEjD,iBAAY,GAAG;YACb,IAAI,EAAG,EAAE;YACT,KAAK,EAAG,EAAE;SACX,CAAC;QAGA,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,YAAY,EAAE,uBAAuB,CAAC,CAAC;IACpF,CAAC;IAMD,sCAAQ,GAAR,UAAS,GAAG;QACV,GAAG,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;IAC1B,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAChD,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAyBG;QAtBD,IAAI,CAAC,YAAY,GAAG;YAClB,IAAI,EAAG,EAAE;YACT,KAAK,EAAG,EAAE;SACX,CAAC;QAEF,sCAAsC;QACtC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;QAE5D,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzF,2DAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC;aACvD,YAAY,CAAC,GAAG,CAAC;aACjB,oBAAoB,EAAE;aACtB,SAAS,CAAC;YACT,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YAAC,CAAC;YACT,IAAI,EAAC;gBAEH,IAAI,WAAW,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;gBAClD,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAc,GAAd,UAAe,IAAI;QACjB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,2CAAa,GAAb,UAAc,IAAI;QAChB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAGD,oCAAM,GAAN,UAAO,IAAI;QAET,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB;;;UAGE;QACF,UAAU,CAAC;YACT,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC,EACD,GAAG,CAAC,CAAC;QAEL,iBAAiB;QACjB,SAAS;QACT,2DAA2D;QAC3D,qDAAqD;QACrD,qBAAqB;QACrB,4BAA4B;QAC5B,mCAAmC;QACnC,+BAA+B;QAC/B,sCAAsC;QACtC,kCAAkC;QAClC,wBAAwB;QACxB,gFAAgF;QAChF,yDAAyD;QACzD,iCAAiC;QACjC,wBAAwB;QACxB,0CAA0C;QAC1C,uBAAuB;IAEzB,CAAC;IAGH,6CAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,0BAAC;AAAD,CAAC;AAvGS;IAAT,6DAAM,EAAE;;6DAAuC;AAiB3B;IAApB,gEAAS,CAAC,QAAQ,CAAC;kDAAS,yDAAU,oBAAV,yDAAU;mDAAC;AACrB;IAAlB,gEAAS,CAAC,kEAAM,CAAC;kDAAO,kEAAM,oBAAN,kEAAM;iDAAC;AACR;IAAvB,gEAAS,CAAC,uEAAW,CAAC;kDAAY,uEAAW,oBAAX,uEAAW;sDAAC;AArBpC,mBAAmB;IAL/B,gEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,kGAA0C;QAC1C,iGAAyC;KAC1C,CAAC;yDAgBkC,qEAAY,oBAAZ,qEAAY,sDAAmC,8FAAuB,oBAAvB,8FAAuB;GAf7F,mBAAmB,CAyG7B;AAzG6B;AA4G9B,8EAA8E;AAE9E;;EAEE;AACF;IAME,yBAAoB,YAA0B,EAAU,uBAAgD;QAApF,iBAAY,GAAZ,YAAY,CAAc;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QALxG,6DAA6D;QAC7D,eAAU,GAA4B,IAAI,qEAAe,CAAS,EAAE,CAAC,CAAC;QAKpE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IALD,sBAAI,iCAAI;aAAR,cAAqB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAOpD,uCAAa,GAAb;QAAA,iBAkBC;QAjBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;gBAE3E,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACpD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC;QAC1C,CAAC;IACH,CAAC;IAGD;;MAEE;IACF,kCAAQ,GAAR,UAAS,SAAiB;QACxB,IAAI,UAAU,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAElC,CAAC;IAGD,iCAAO,GAAP,UAAQ,IAAI;QAEV,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE3C,wCAAwC;QACxC,yBAAyB;QACzB,oCAAoC;IACtC,CAAC;IAED,kCAAQ,GAAR,UAAS,WAAW;QAClB,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAErD,uBAAuB;QACvB,wCAAwC;QACxC,EAAE;QACF,4CAA4C;QAC5C,sCAAsC;QACtC,0BAA0B;QAC1B,MAAM;QACN,MAAM;QACN,uBAAuB;QACvB,6DAA6D;QAC7D,sCAAsC;QACtC,IAAI;IACN,CAAC;IAED,oCAAU,GAAV,UAAW,IAAI;QAEb,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAE9C,wCAAwC;QACxC,EAAE;QACF,mBAAmB;QACnB,2CAA2C;QAC3C,8BAA8B;QAC9B,sBAAsB;QACtB,MAAM;QACN,MAAM;QACN,qBAAqB;QACrB,kCAAkC;QAClC,sCAAsC;QACtC,IAAI;IACN,CAAC;IAIH,sBAAC;AAAD,CAAC;;AAGD,8EAA8E;AAE9E;;;EAGE;AACF;IAAuC,qCAAe;IASpD,2BAAoB,gBAAiC,EAAW,KAAa,EAAW,UAAuB;QAA/G,YACE,iBAAO,SACR;QAFmB,sBAAgB,GAAhB,gBAAgB,CAAiB;QAAW,WAAK,GAAL,KAAK,CAAQ;QAAW,gBAAU,GAAV,UAAU,CAAa;QAR/G,mBAAa,GAAG,IAAI,qEAAe,CAAC,EAAE,CAAC,CAAC;QAKxC,kBAAY,GAAW,EAAE,CAAC;QAC1B,kBAAY,GAAW,EAAE,CAAC;;IAI1B,CAAC;IATD,sBAAI,qCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD,UAAW,MAAc,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OADN;IAWzD;;MAEE;IACF,mCAAO,GAAP;QAAA,iBA4CC;QA3CC,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,KAAK,CAAC,YAAY;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI;SACrB,CAAC;QAEF,MAAM,CAAC,2DAAU,CAAC,KAAK,OAAhB,2DAAU,EAAU,kBAAkB,EAAE,GAAG,CAAC;YACjD,mCAAmC;YAEnC,kCAAkC;YAClC,KAAI,CAAC,YAAY,GAAK,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAC,IAAU;gBAEzE,qBAAqB;gBACrB,6CAA6C;gBAC7C,kCAAkC;gBAClC,gBAAgB;gBAChB,qCAAqC;gBACrC,IAAI;gBACJ,gDAAgD;gBAChD,kCAAkC;gBAClC,gBAAgB;gBAChB,qCAAqC;gBACrC,IAAI;gBACJ,EAAE;gBACF,8FAA8F;gBAE9F,4DAA4D;gBAC5D,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;gBAE7D,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YAEH,wBAAwB;YACxB,IAAM,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;YAE5D,qDAAqD;YACrD,IAAM,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxE,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAG5E,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAU,GAAV,cAAc,CAAC;IAEf;;MAEE;IACF,oCAAQ,GAAR,UAAS,IAAY;QAArB,iBAiBC;QAhBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAEtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACpB,IAAI,SAAS,GAAkB,EAAE,CAAC;YAClC,IAAI,SAAS,GAAkB,EAAE,CAAC;YAElC,MAAM,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1B,KAAK,QAAQ;oBAAE,yBAA6C,EAA5C,iBAAS,EAAE,iBAAS,CAAyB;oBAAC,KAAK,CAAC;gBACpE,KAAK,WAAW;oBAAE,+BAAmD,EAAlD,iBAAS,EAAE,iBAAS,CAA+B;oBAAC,KAAK,CAAC;YAC/E,CAAC;YAED,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;YACxD,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;YAExD,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAC/E,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC,CArFsC,4EAAU,GAqFhD;;;;;;;;;;AC5UH;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,4NAA4N,yCAAyC,ucAAuc,sOAAsO,gTAAgT,cAAc,oQAAoQ,eAAe,8HAA8H,kDAAkD,yBAAyB,uBAAuB,GAAG,yBAAyB,iIAAiI,4CAA4C,gCAAgC,uBAAuB,2G;;;;;;;;;;;;;;;;;;;;;;ACA16D;AACW;AAO7C;AACU;AAQjC,IAAa,wBAAwB;IAsCnC,kCAAoB,qBAA8C,EAAS,GAAsB;QAA7E,0BAAqB,GAArB,qBAAqB,CAAyB;QAAS,QAAG,GAAH,GAAG,CAAmB;QAlC1F,cAAS,GAAY,KAAK,CAAC;QAClC,kBAAa,GAAU;YACrB;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,QAAQ;aAClB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,MAAM;gBAChB,OAAO,EAAE,MAAM;aAChB;YACD;gBACI,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,MAAM;aAClB;SACF,CAAC;IAEmG,CAAC;IAEtG,mDAAgB,GAAhB,UAAiB,MAAM;QACrB,0CAA0C;QAC1C,2BAA2B;QAC3B,IAAI,KAAK,GAAG,aAAa,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;gBAC1C,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/C,CAAC;QACH,CAAC;QAED,MAAM,CAAC,KAAK;IACd,CAAC;IAED,wCAAK,GAAL,UAAM,KAAK;QACT,uBAAuB;QAEvB,aAAa;QACb,iCAAiC;QAEjC,eAAe;QACf,IAAI,UAAU,GAAG,oCAAM,CAAC,KAAK,EAAC,qBAAqB,CAAC,CAAC;QACrD,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,KAAK;IACd,CAAC;IAED,8CAAW,GAAX,UAAY,KAAK,EAAC,MAAM;QACtB,0BAA0B;QAC1B,2BAA2B;QAC3B,KAAK,CAAC,MAAM,GAAC,MAAM,CAAC;QAEpB,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;QACrD,oDAAoD;QACpD,cAAc;QACd,0BAA0B;QAC1B,MAAM;IAER,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAsBC;QApBC,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,MAAe;YAC7E,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YACxB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;gBAE5B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBAChC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC/B,IAAI,WAAW,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;gBAE5C,MAAM,CAAC,CAAC,WAAW,CAAC;YAEtB,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,EAAE,UAAC,GAAG;YACH,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAEH,+BAAC;AAAD,CAAC;AApGU;IAAR,4DAAK,EAAE;;gEAAqB;AAFlB,wBAAwB;IANpC,gEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,SAAS,EAAC,CAAC,0FAAsB,CAAC;QAClC,0GAAiD;QACjD,yGAAgD;KACjD,CAAC;yDAuC4C,0FAAsB,oBAAtB,0FAAsB,sDAAc,gEAAiB,oBAAjB,gEAAiB;GAtCtF,wBAAwB,CAsGpC;AAtGoC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBM;AACE;AAGZ;AAC4B;AACA;AAc7D,IAAa,sBAAsB;IAkBjC,gCAAoB,qBAA+B;QACjD,sCAAsC;QACtC,4EAA4E;QAF9E,iBAsBC;QAtBmB,0BAAqB,GAArB,qBAAqB,CAAU;QAhB3C,gBAAW,GAAG,8EAAW,CAAC,MAAM,CAAC;QAoBvC,qFAAqF;QACrF,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;QAChE,mCAAmC;QACnC,IAAI,CAAC,sBAAsB,GAAK,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAGvE,qBAAqB;QACrB,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAC5E,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAC5E,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAC5E,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAG5E,IAAI,CAAC,OAAO,GAAG,IAAI,2DAAU,CAAC,UAAC,QAAQ;YACrC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;IAClC,CAAC;IAEM,6CAAY,GAAnB;QAAA,iBA2BC;QA1BC,yBAAyB;QACzB,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,IAAI,GAAG,oCAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACjD,8EAA8E;QAC9E,yBAAyB;QACzB,IAAI,KAAK,GAAG,oCAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,KAAK,GAAG,CAAC,oCAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;YAC/B,KAAK,EAAE;gBACL,WAAW,EAAE;oBACX,GAAG,EAAE,IAAI;oBACT,GAAG,EAAE,KAAK;iBACX;gBACC,SAAS,EAAE,iBAAiB,CAAC,mBAAmB;aACnD;SACF,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAEb,mEAAmE;YACnE,2BAA2B;YAE3B,6BAA6B;YAC7B,wBAAwB;YAExB,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;YAC/B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACtC,CAAC;IAIM,4CAAW,GAAlB,UAAmB,KAAK,EAAE,WAAW;QACnC,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,mJAAmJ;QACnJ,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,EAAC,QAAQ,EAAE,WAAW,EAAC,CAAC,CAAC,IAAI,CAAC,UAAC,gBAAgB;YACzF,mDAAmD;QACrD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACtC,CAAC;IAEO,yCAAQ,GAAhB,UAAiB,EAAU;QACzB,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QAEpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxC,UAAU,GAAG,CAAC,CAAC;YACjB,CAAC;QACH,CAAC;QAED,MAAM,CAAC,UAAU,CAAC;QAClB,YAAY;IACd,CAAC;IAED;;MAEE;IACM,0CAAS,GAAjB,UAAkB,KAAU;QAC1B,gEAAgE;QAChE,uBAAuB;QAEvB;;;;UAIE;QAEF,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QAErB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAC9B,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;QAGhC,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3C,2CAA2C;QAC3C,6CAA6C;QAE7C,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;YAEvC,6CAA6C;YAC7C,EAAE,EAAC,GAAG,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAC;gBAC/E,4CAA4C;gBAE5C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,0BAA0B;gBAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;IAIH,CAAC;IAED;;MAEE;IACM,0CAAS,GAAjB,UAAkB,KAAY;QAC5B,0CAA0C;QAC1C,EAAE;QACF,wCAAwC;QACxC,EAAE;QACF,mDAAmD;IACrD,CAAC;IAID;;MAEE;IACM,0CAAS,GAAjB,UAAkB,KAAY;QAC5B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;IAED;;MAEE;IAEM,0CAAS,GAAjB,UAAkB,KAAK;QAErB,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE9C,EAAE,EAAC,UAAU,GAAG,CAAC,CAAC,CAAC,EAAC;YAElB,IAAI,aAAa,GAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC1D,2CAA2C;YAC3C,EAAE,EAAC,aAAa,CAAC,MAAM,IAAE,WAAW,IAAI,KAAK,CAAC,MAAM,IAAI,QAAQ,CAAC,EAAC;gBAChE,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;gBAC3D,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;YACtD,CAAC;YAAA,IAAI,EAAC;gBACJ,0FAA0F;gBAC1F,EAAE,EAAC,aAAa,CAAC,MAAM,IAAE,YAAY,IAAI,KAAK,CAAC,MAAM,IAAI,QAAQ,CAAC,EAAC;oBACjE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;QAC5C,CAAC;IAMH,CAAC;IAEM,sDAAqB,GAA5B,UAA6B,cAAc;QACzC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAGD,iDAAgB,GAAhB,UAAiB,MAAM,EAAE,QAAQ;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,oBAAoB,EACpB,YAAY,GAAG,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,QAAQ,CACvF;IACH,CAAC;IAKD;;MAEE;IACF,4CAAW,GAAX;QAEE,sBAAsB;QACtB,4BAA4B;QAC5B,6BAA6B;QAC7B,0DAA0D;IAC5D,CAAC;IAMD,oBAAoB;IACZ,iDAAgB,GAAxB,UAAyB,KAAK;QAC5B,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QAEpB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACnC,2BAA2B;QAE3B,MAAM,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YAChC,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAC;gBAE9C,UAAU,GAAG,KAAK,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH,6BAAC;AAAD,CAAC;AAzOY,sBAAsB;IADlC,iEAAU,EAAE;yDAmBgC,kFAAQ,oBAAR,kFAAQ;GAlBxC,sBAAsB,CAyOlC;AAzOkC;;;;;;;;;ACpBnC;AACA;;;AAGA;AACA,kEAAmE,mCAAmC,eAAe,8BAA8B,8CAA8C,gDAAgD,iGAAiG,GAAG;;AAErV;;;AAGA;AACA,2C;;;;;;;ACXA,6eAA6e,g+HAAg+H,aAAa,6dAA6d,sCAAsC,wCAAwC,mCAAmC,qCAAqC,wCAAwC,yCAAyC,sV;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/iK;AAEnE;AACY;AAGC;AAEmB;AAIhC;AACJ;AASxC,IAAa,wBAAwB;IA4BnC,kCACU,gBAAkC,EAClC,uBAAgD,EAChD,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,iBAAY,GAAZ,YAAY,CAAc;QA7BpC,iCAAiC;QACjC,kCAAkC;QACxB,qBAAgB,GAAG,IAAI,2DAAY,EAAE,CAAC;QAOzC,iBAAY,GAAS,IAAI,CAAC;QAG1B,oBAAe,GAAQ,IAAI,CAAC;QAInC,gCAAgC;QACzB,wBAAmB,GAAiB;YACvC,WAAW,EAAE,KAAK;YAClB,wBAAwB,EAAE,IAAI;YAC9B,iBAAiB,EAAE,KAAK;YACxB,UAAU,EAAE,YAAY;YACxB,SAAS,EAAE,EAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC;YACxF,WAAW,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE;SAC7I,CAAC;QAOA,IAAI,CAAC,aAAa,GAAG,IAAI,gEAAQ,EAAE,CAAC;IACtC,CAAC;IAED;MACE;IACF,2CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,qCAAqC;QACrC,cAAc;QACd,0BAA0B;QAC1B,8CAA8C;QAC9C,MAAM;QACN,uCAAuC;IACzC,CAAC;IAED,gDAAa,GAAb;QAAA,iBA6BC;QA5BC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;gBAE3E,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBAEnB,EAAE,EAAC,KAAI,CAAC,kBAAkB,EAAE,IAAE,IAAI,CAAC,EAAC;oBAElC,IAAI,UAAU,GAAG;wBAChB,GAAG,EAAE,YAAY;wBACjB,MAAM,EAAE,YAAY;wBACpB,SAAS,EAAE,YAAY;qBACvB,CAAC;oBACF,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC9B,CAAC;gBAED,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;gBACzD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC;QAC1C,CAAC;IACH,CAAC;IAGO,qDAAkB,GAA1B;QACE,IAAI,OAAY,CAAC;QACjB,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,YAAa,CAAC,EAAC;oBAC/B,OAAO,GAAG,IAAI,CAAC;gBACjB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,qEAAqE;QAErE,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED;MACE;IACF,8CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;IAEvD,CAAC;IACH,kHAAkH;IACzG,sDAAmB,GAA1B,UAA2B,UAAiB;QAC1C,UAAU,CAAC,SAAS,EAAE,CAAC;QACvB,kGAAkG;IACpG,CAAC;IAED;;MAEE;IACK,kDAAe,GAAtB,UAAuB,cAAc,EAAC,gBAAgB,EAAE,WAAW,EACjE,aAAa,EAAE,gBAAgB,EAAE,SAAS,EAAE,aAAa;QAD3D,iBAmHC;QAhHG,IAAI,CAAC,aAAa,GAAG,IAAI,gEAAQ,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,cAAc,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,gBAAgB,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,WAAW,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,gBAAgB,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAGjE,IAAI,kBAAkB,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;QACrD,4CAA4C;QAC5C,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;QAEnC,EAAE,EAAC,MAAM,KAAK,YAAY,CAAC,EAAC;YAC1B,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,cAAc,EAAC,gBAAgB,EAAE,WAAW,EAC/E,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,gBAAgB,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,CAAC;aACnG,IAAI,CAAC,uBAAa;YAEjB,iDAAiD;YACjD,0BAA0B;YAE1B,0CAA0C;YAC1C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAE1C,mBAAmB;YACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAGlD,6DAA6D;YAG/D,mDAAI,CAAC;gBACH,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,4BAA4B;gBAClC,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC,IAAI,CACL,cAAa,CAAC;YACd,iCAAiC;YACjC,UAAU,OAAO;gBACf,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBAE1B,CAAC;YACH,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,EAAE,EAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,EAAC;gBACrB,IAAI,IAAE,GAAG,KAAI,CAAC;gBACd,mDAAI,CAAC;oBACH,KAAK,EAAE,0BAA0B;oBACjC,IAAI,EAAE,8HAA8H;oBACpI,IAAI,EAAE,OAAO;iBACd,CAAC,CAAC,IAAI,CACL;oBACE,yCAAyC;oBAEzC,2FAA2F;oBAE3F,gEAAgE;oBAChE,yDAAyD;oBACzD,+CAA+C;oBAC/C,mDAAmD;oBACnD,yDAAyD;oBACzD,2DAA2D;oBAC3D,mEAAmE;oBACnE,IAAE,CAAC,aAAa,GAAG,IAAE,CAAC,aAAa,CAAC;oBAGpC,0CAA0C;oBAC1C,iCAAiC;oBAGjC,qDAAqD;oBACrD,IAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;wBACrB,cAAc,EAAC,IAAE,CAAC,aAAa,CAAC,MAAM;wBACtC,gBAAgB,EAAE,IAAE,CAAC,aAAa,CAAC,QAAQ;wBAC3C,iBAAiB,EAAE,IAAE,CAAC,aAAa,CAAC,GAAG;wBACvC,aAAa,EAAE,IAAE,CAAC,aAAa,CAAC,KAAK;wBACrC,aAAa,EAAE,IAAE,CAAC,aAAa,CAAC,eAAe;wBAC/C,gBAAgB,EAAE,IAAE,CAAC,aAAa,CAAC,QAAQ;wBAC3C,iBAAiB,EAAE,IAAE,CAAC,aAAa,CAAC,SAAS;wBAC7C,qBAAqB,EAAE,IAAE,CAAC,aAAa,CAAC,aAAa;wBACrD,YAAY,EAAE,IAAE,CAAC,YAAY;qBAC9B,CAAC,CAAC;oBAEH,IAAE,CAAC,aAAa,GAAG,IAAI,CAAC;gBAG1B,CAAC;gBACD,iCAAiC;gBACjC,UAAU,OAAO;oBACf,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;oBAE1B,CAAC;gBACH,CAAC,CACF;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IAIT,CAAC;IAED;;MAEE;IACF,oDAAiB,GAAjB,UAAkB,UAAU;QAE1B,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QAGlC,2BAA2B;QAC3B,wBAAwB;IAC1B,CAAC;IAGG;;MAEE;IACC,2CAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtD,CAAC;IAIH,+BAAC;AAAD,CAAC;AA1PW;IAAT,6DAAM,EAAE;;kEAAuC;AAET;IAAtC,gEAAS,CAAC,0BAA0B,CAAC;kDAA2B,yDAAU,oBAAV,yDAAU;0EAAC;AAChD;IAA3B,gEAAS,CAAC,eAAe,CAAC;kDAAe,yDAAU,oBAAV,yDAAU;+DAAC;AAC5B;IAAxB,gEAAS,CAAC,YAAY,CAAC;kDAAY,sDAAM,oBAAN,sDAAM;4DAAC;AARhC,wBAAwB;IALpC,gEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,sGAAqC;QACrC,qGAAoC;KACrC,CAAC;yDA8B4B,4EAAgB,oBAAhB,4EAAgB,sDACT,6FAAuB,oBAAvB,6FAAuB,sDAClC,0EAAY,oBAAZ,0EAAY;GA/BzB,wBAAwB,CA8PpC;AA9PoC;;;;;;;;;;;;;;;;;;;;ACtBe;AACnB;AAIjC,IAAa,OAAO;IAApB;IAaA,CAAC;IAXG,2BAAS,GAAT,UAAU,KAAa;QACnB,IAAI,KAAK,GAAG,oCAAM,EAAE,CAAC;QACb,IAAI,SAAS,GAAG,oCAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAU,KAAK,GAAG,QAAQ,CAAC;QAEnC,4EAA4E;QAEpF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEL,cAAC;AAAD,CAAC;AAbY,OAAO;IAHnB,2DAAI,CAAC;QACF,IAAI,EAAE,KAAK;KACd,CAAC;GACW,OAAO,CAanB;AAbmB;;;;;;;;ACLpB;AACA;;;AAGA;AACA,kEAAmE,mCAAmC,eAAe,8BAA8B,8CAA8C,gDAAgD,iGAAiG,GAAG;;AAErV;;;AAGA;AACA,2C;;;;;;;ACXA,8bAA8b,wrHAAwrH,aAAa,qiCAAqiC,yJ;;;;;;;;;;;;;;;;;;;;;;;;ACAzjK;AAEnE;AACY;AAMC;AAEb;AAS5C,IAAa,uBAAuB;IAgBlC,iCACU,gBAAkC,EAClC,YAA0B;QAD1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAd1B,oBAAe,GAAG,IAAI,2DAAY,EAAE,CAAC;QACrC,sBAAiB,GAAG,IAAI,2DAAY,EAAE,CAAC;QAK1C,iBAAY,GAAS,IAAI,CAAC;QAE1B,mBAAc,GAAG,IAAI,CAAC;QAEtB,oBAAe,GAAQ,IAAI,CAAC;QASnC,gCAAgC;QACzB,wBAAmB,GAAiB;YACvC,WAAW,EAAE,KAAK;YAClB,wBAAwB,EAAE,IAAI;YAC9B,iBAAiB,EAAE,KAAK;YACxB,UAAU,EAAE,YAAY;YACxB,SAAS,EAAE,EAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC;YACxF,WAAW,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE;SAC7I,CAAC;QAXA,IAAI,CAAC,cAAc,GAAG,IAAI,gEAAQ,EAAE,CAAC;IACvC,CAAC;IAYD;MACE;IACF,0CAAQ,GAAR;QAAA,iBAiBC;QAhBC,4CAA4C;QAC5C,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC3D,IAAI,CAAC,eAAe,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC,QAAQ,EAAE,GAAE,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC;QAEtI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,CAC/B,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,KAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,sBAAsB;YAE9E,8BAA8B;QAChC,CAAC,CACF,CAAC,KAAK,CAAC,eAAK,IAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,CAAC;IACtC,CAAC;IAEO,yDAAuB,GAA/B;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,EAAE,EAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,EAAC;YAC3B,EAAE,EAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,QAAQ,IAAG,IAAI,CAAC,EAAC;gBACnC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;oBACpC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;wBACnC,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAChD,CAAC;IACH,CAAC;IAGO,oDAAkB,GAA1B;QACE,IAAI,OAAY,CAAC;QACjB,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,YAAa,CAAC,EAAC;oBAC/B,OAAO,GAAG,IAAI,CAAC;gBACjB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACD;MACE;IACF,6CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;QACrD,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,sBAAsB;IAChF,CAAC;IAED;;MAEE;IACK,gDAAc,GAArB;QACE,uCAAuC;QADzC,iBAsCC;QAnCC,mCAAmC;QACnC,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC/E,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,EAAC;YAChE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,EAAC;YACH,EAAE,EAAC,IAAI,CAAC,YAAY,CAAC,EAAC;gBACpB,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;gBACjD,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACrE,CAAC;QACH,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAElE,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC;aACrF,IAAI,CAAC,sBAAY;YAChB,sCAAsC;YACtC,6BAA6B;YAC7B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAGxC,yCAAyC;YACzC,6BAA6B;YAC7B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAErD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;IAOtC,CAAC;IAED,2CAAS,GAAT,UAAU,QAAQ;QAEhB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,iDAAiD;YACxD,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,gBAAgB;YACnC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;gBAC1D,0CAA0C;gBAC1C,wBAAwB;gBACxB,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,2CAAS,GAAT,UAAU,QAAQ;QAChB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,iDAAiD;YACxD,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,gBAAgB;YACnC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;gBAC1D,0CAA0C;gBAC1C,wBAAwB;gBACxB,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;YAC3B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IAItB,CAAC;IAED,0CAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,gDAAgD;YACvD,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;YAClC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;gBACzD,yCAAyC;gBACzC,wBAAwB;gBACxB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAE/B,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;gBACvB,EAAE,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,6CAAW,GAAX,UAAY,QAAQ;QAClB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,cAAc,CAAC,QAAQ,GAAG,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC;QAC3J,mDAAI,CAAC,KAAK,CAAC,CAAC;gBACV,KAAK,EAAE,+BAA+B;gBACtC,iBAAiB,EAAE,WAAW;gBAC9B,IAAI,EACF,4GAA4G;gBAC9G,mBAAmB,EAAE,IAAI;gBACzB,UAAU,EAAE;oBACV,MAAM,CAAC,IAAI,OAAO,CAAC,UAAU,OAAO;wBAEhC,EAAE,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,cAAc,CAAC;6BAC/E,IAAI,CAAC,sBAAY;4BACd,mDAAI,CAAC,eAAe,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC;4BAChD,OAAO,EAAE;wBACb,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;oBAExC,CAAC,CAAC;gBACJ,CAAC;aACF,CAAC,CAAC,CAAC;IAEN,CAAC;IAGD;;MAEE;IACK,0CAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACrD,CAAC;IAIH,8BAAC;AAAD,CAAC;AAjPU;IAAR,4DAAK,EAAE;;yDAAe;AACb;IAAT,6DAAM,EAAE;;gEAAsC;AACrC;IAAT,6DAAM,EAAE;;kEAAwC;AAEX;IAArC,gEAAS,CAAC,yBAAyB,CAAC;kDAA0B,yDAAU,oBAAV,yDAAU;wEAAC;AAP/D,uBAAuB;IALnC,gEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,oGAAoC;QACpC,mGAAmC;KACpC,CAAC;yDAkB4B,4EAAgB,oBAAhB,4EAAgB,sDACpB,0EAAY,oBAAZ,0EAAY;GAlBzB,uBAAuB,CAoPnC;AApPmC;;;;;;;;;;ACpBpC;AAAA;IAAA;IAiBA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACjB2B;AACsB;AAKlD,IAAa,cAAc;IAA3B;IAgCA,CAAC;IA9BG,kCAAS,GAAT,UAAU,KAAY,EAAE,KAAa;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,8CAAQ,CAAC,KAAK,EAAE,aAAG;gBACxB,IAAI,KAAK,GAAG,KAAK,CAAC;gBAClB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;oBAC9D,KAAK,GAAG,IAAI,CAAC;gBACf,CAAC;gBACD,IAAI,EAAC;oBACH,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;wBAChE,KAAK,GAAG,IAAI,CAAC;oBACf,CAAC;oBACD,IAAI,EAAC;wBACH,EAAE,EAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;4BAC5D,KAAK,GAAG,IAAI,CAAC;wBACf,CAAC;wBACD,IAAI,EAAC;4BACH,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;gCACrE,KAAK,GAAG,IAAI,CAAC;4BACf,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YAIf,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,qBAAC;AAAD,CAAC;AAhCY,cAAc;IAH1B,2DAAI,CAAC;QACF,IAAI,EAAE,YAAY;KACrB,CAAC;GACW,cAAc,CAgC1B;AAhC0B;;;;;;;;ACN3B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,kQ;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACf;AAEkB;AAGT;AAW5C,IAAa,kBAAkB;IAY7B,4BAAoB,IAAU,EAAU,gBAAkC;QAAtD,SAAI,GAAJ,IAAI,CAAM;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QATnE,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,OAAO,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAElB,qBAAgB,GAAG,IAAI,CAAC;QA0CxB,qBAAgB,GAAG,UAAC,CAAM;YAC7B,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;QACzB,CAAC;IAvCD,CAAC;IAED,qCAAQ,GAAR;QACI,+BAA+B;QAC/B,4BAA4B;QAC5B,4BAA4B;QAC5B,uCAAuC;QACvC,oBAAoB;QACpB,UAAU;QACV,0BAA0B;QAC1B,mCAAmC;IACvC,CAAC;IAEM,kCAAK,GAAZ,UAAa,GAAW;QACpB,MAAM,CAAC,CAAC,GAAG,CAAC;IAChB,CAAC;IAED,4CAAe,GAAf;QAAA,iBAQC;QAPC,IAAI,CAAC,gBAAgB;aACpB,YAAY,EAAE;aACd,IAAI,CAAC,mBAAS;YACX,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,KAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,2BAA2B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAwB,GAAxB;QAAA,iBASC;QARC,IAAI,CAAC,gBAAgB;aACpB,mBAAmB,EAAE;aACrB,IAAI,CAAC,mBAAS;YACX,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,KAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,uCAAuC;YACvC,2BAA2B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,2CAAc,GAAd,UAAe,EAAS;QACtB,4CAA4C;QAC5C,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAQ;YACpD,6CAA6C;YAC7C,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,sCAAsC;IACtC,IAAI;IAEJ,mCAAM,GAAN,UAAO,QAAQ;QAEb,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC;;;UAGE;QACF,UAAU,CAAC;YACT,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC,EACD,GAAG,CAAC,CAAC;QAEL,iBAAiB;QACjB,SAAS;QACT,2DAA2D;QAC3D,qDAAqD;QACrD,qBAAqB;QACrB,4BAA4B;QAC5B,mCAAmC;QACnC,+BAA+B;QAC/B,sCAAsC;QACtC,kCAAkC;QAClC,wBAAwB;QACxB,gFAAgF;QAChF,yDAAyD;QACzD,iCAAiC;QACjC,wBAAwB;QACxB,0CAA0C;QAC1C,uBAAuB;IAEzB,CAAC;IAED;;MAEE;IACF,gDAAmB,GAAnB;QACE,UAAU,CAAC;YACT,CAAC,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC,EACD,GAAG,CAAC,CAAC;IACP,CAAC;IAED,+CAAkB,GAAlB,UAAmB,aAAa;QAC9B,EAAE,EAAC,aAAa,CAAC,EAAC;YAChB,uBAAuB;YACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAED,8CAAiB,GAAjB,UAAkB,eAAe;QAC/B,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YACzC,EAAE,EAAC,IAAI,CAAC,GAAG,KAAK,eAAe,CAAC,GAAG,CAAC,EAAC;gBACnC,UAAU,GAAG,KAAK,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,EAAE,EAAC,UAAU,IAAI,CAAC,CAAC,EAAC;YAClB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;QAClE,CAAC;IAEH,CAAC;IAGD,sCAAS,GAAT,UAAU,QAAQ;QAEhB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,iDAAiD;YACxD,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,gBAAgB;YACnC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;gBAC1D,0CAA0C;gBAC1C,wBAAwB;gBACxB,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,sCAAS,GAAT,UAAU,QAAQ;QAChB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,iDAAiD;YACxD,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,gBAAgB;YACnC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;gBAC1D,0CAA0C;gBAC1C,wBAAwB;gBACxB,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;YAC3B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IAItB,CAAC;IAED,qCAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,iDAAiD;YACxD,kDAAkD;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;YAClC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;gBACzD,yCAAyC;gBACzC,wBAAwB;gBACxB,IAAI,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,CAAC;gBACD,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;YAC5B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;QACrC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAIH,yBAAC;AAAD,CAAC;AAvMY,kBAAkB;IAN9B,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,SAAS,EAAC,CAAC,4EAAgB,CAAC;QAC5B,0FAAyC;QACzC,yFAAwC;KACzC,CAAC;yDAa0B,2DAAI,oBAAJ,2DAAI,sDAA4B,4EAAgB,oBAAhB,4EAAgB;GAZ/D,kBAAkB,CAuM9B;AAvM8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBY;AACa;AAKzB;AACE;AAC4B;AAGA;AAG7D,IAAa,gBAAgB;IAK5B,0BAAoB,IAAU,EAAU,WAAwB;QAA5C,SAAI,GAAJ,IAAI,CAAM;QAAU,gBAAW,GAAX,WAAW,CAAa;QAHxD,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC5D,iBAAY,GAAG,8EAAW,CAAC,MAAM,GAAG,YAAY,CAAC,CAAE,iBAAiB;IAI5E,CAAC,6DAA4D;IAC7D,uCAAY,GAAZ;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC7D,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,iCAAiC;YACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IACD,oCAAoC;IACpC,8CAAmB,GAAnB;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAC,gCAAgC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC9F,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,iCAAiC;YACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,yCAAc,GAAd,UAAe,cAAc,EAAC,gBAAgB,EAAE,WAAW,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa;QAEvJ,MAAM,CAAC,IAAI,CAAC,IAAI;aACf,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,gBAAgB;YACzF,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,aAAa,EAAE,UAAU,EAAE,kBAAkB;YACtE,QAAQ,EAAE,gBAAgB,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,EAAC,aAAa;YACjG,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK;SAChD,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;aACrC,SAAS,EAAE;aACZ,IAAI,CAAC,aAAG;YACR,MAAM,CAAC,GAAG,CAAC,IAAI,EAAc,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAU;QAC7B,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC;QACpE,6BAA6B;QAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,yCAAc,GAAd,UAAe,EAAE;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAC,GAAG,GAAC,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACpE,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,iCAAiC;YACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,6CAAkB,GAAlB,UAAmB,EAAE,EAAC,KAAK;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAC,GAAG,GAAC,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC1E,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,6CAA6C;YAC7C,oCAAoC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,4CAAiB,GAAjB,UAAkB,EAAE;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACrF,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,+CAA+C;YAC/C,oCAAoC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,2CAAgB,GAAhB,UAAiB,EAAE;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,SAAS,EAAC,IAAI,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACvF,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,0CAA0C;YAC1C,+BAA+B;YAC/B,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,4CAAiB,GAAjB,UAAkB,EAAE;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,OAAO,EAAC,KAAK,EAAC,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACtF,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,+CAA+C;YAC/C,oCAAoC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAEF,uBAAC;AAAD,CAAC;AAtGY,gBAAgB;IAD5B,iEAAU,EAAE;yDAMc,2DAAI,oBAAJ,2DAAI,sDAAuB,iFAAW,oBAAX,iFAAW;GALpD,gBAAgB,CAsG5B;AAtG4B;;;;;;;;;ACd7B;AACA;;;AAGA;AACA,8DAA+D,yBAAyB,yBAAyB,kBAAkB,iCAAiC,kCAAkC,mCAAmC,mCAAmC,qBAAqB,GAAG,qBAAqB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,gCAAgC,uBAAuB,oBAAoB,gBAAgB,GAAG,qBAAqB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,gCAAgC,iCAAiC,kCAAkC,wBAAwB,oBAAoB,8BAA8B,+BAA+B,2CAA2C,GAAG,qBAAqB,oBAAoB,wBAAwB,6BAA6B,yBAAyB,sBAAsB,GAAG,gBAAgB,mBAAmB,sBAAsB,GAAG,aAAa,yBAAyB,sBAAsB,6BAA6B,+BAA+B,kBAAkB,yBAAyB,sBAAsB,6BAA6B,+BAA+B,wFAAwF,kCAAkC,GAAG,8BAA8B,+BAA+B,GAAG,aAAa,8BAA8B,GAAG,iBAAiB,qCAAqC,kCAAkC,kCAAkC,iCAAiC,+BAA+B,GAAG,kBAAkB,gCAAgC,iCAAiC,kCAAkC,GAAG;;AAEt3D;;;AAGA;AACA,2C;;;;;;;ACXA,8tBAA8tB,oCAAoC,yOAAyO,SAAS,oZAAoZ,yCAAyC,gGAAgG,WAAW,2OAA2O,YAAY,2OAA2O,cAAc,uSAAuS,cAAc,irBAAirB,0CAA0C,uBAAuB,2BAA2B,s1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA//F;AAE/E,oBAAoB;AACkC;AACA;AACD;AACV;AACN;AACF;AACJ;AACS;AACQ;AACT;AAEiB;AAExD,uBAAuB;AACkB;AAEzC,uBAAuB;AACuB;AAEsC;AAG5B;AAYxD,IAAa,uBAAuB;IAelC,iCAAoB,gBAAkC,EAAU,2BAAwD;QAApG,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,gCAA2B,GAA3B,2BAA2B,CAA6B;QAb9G,yBAAoB,GAAG,IAAI,2DAAY,EAAE,CAAC;QAEpD,qBAAgB,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAC,UAAU,CAAC,CAAC;QAIrE,cAAS,GAAG,IAAI,gFAAc,CAAS,IAAI,EAAE,EAAE,CAAC,CAAC;QAEjD,iBAAY,GAAG;YACb,IAAI,EAAG,EAAE;YACT,KAAK,EAAG,EAAE;SACX,CAAC;QAGA,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,gBAAgB,EAAE,2BAA2B,CAAC,CAAC;IAC5F,CAAC;IAMD,0CAAQ,GAAR,UAAS,GAAG;QACV,6BAA6B;QAC7B,oBAAoB;QACpB,GAAG,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC;QAErC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;IAC1B,CAAC;IAED,2CAAS,GAAT;QACE,kCAAkC;QAClC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAiCG;QA7BD,IAAI,CAAC,YAAY,GAAG;YAClB,IAAI,EAAG,EAAE;YACT,KAAK,EAAG,EAAE;SACX,CAAC;QACF,kCAAkC;QAElC,sCAAsC;QACtC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,sBAAsB,CAAC;QAEhE,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzF,2DAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC;aACvD,YAAY,CAAC,GAAG,CAAC;aACjB,oBAAoB,EAAE;aACtB,SAAS,CAAC;YACT,4BAA4B;YAC5B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,wCAAwC;gBACxC,MAAM,CAAC;YAAC,CAAC;YACT,IAAI,EAAC;gBAEH,IAAI,WAAW,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;gBAElD,EAAE,EAAC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAC;oBACzB,+BAA+B;gBACjC,CAAC;gBACD,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAQ;QACzB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,mDAAiB,GAAjB,UAAkB,QAAQ;QACxB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAGD,wCAAM,GAAN,UAAO,QAAQ;QAEb,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B;;;UAGE;QACF,UAAU,CAAC;YACT,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC,EACD,GAAG,CAAC,CAAC;QAEL,iBAAiB;QACjB,SAAS;QACT,2DAA2D;QAC3D,qDAAqD;QACrD,qBAAqB;QACrB,4BAA4B;QAC5B,mCAAmC;QACnC,+BAA+B;QAC/B,sCAAsC;QACtC,kCAAkC;QAClC,wBAAwB;QACxB,gFAAgF;QAChF,yDAAyD;QACzD,iCAAiC;QACjC,wBAAwB;QACxB,0CAA0C;QAC1C,uBAAuB;IAEzB,CAAC;IAGH,qDAAmB,GAAnB,UAAoB,QAAQ;QAC1B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,8BAAC;AAAD,CAAC;AAnHS;IAAT,6DAAM,EAAE;;qEAA2C;AAiB/B;IAApB,gEAAS,CAAC,QAAQ,CAAC;kDAAS,yDAAU,oBAAV,yDAAU;uDAAC;AACrB;IAAlB,gEAAS,CAAC,kEAAM,CAAC;kDAAO,kEAAM,oBAAN,kEAAM;qDAAC;AACR;IAAvB,gEAAS,CAAC,uEAAW,CAAC;kDAAY,uEAAW,oBAAX,uEAAW;0DAAC;AArBpC,uBAAuB;IALnC,gEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,8GAA8C;QAC9C,6GAA6C;KAC9C,CAAC;yDAgBsC,6EAAgB,oBAAhB,6EAAgB,sDAAuC,sGAA2B,oBAA3B,sGAA2B;GAf7G,uBAAuB,CAqHjC;AArHiC;AAwHlC,8EAA8E;AAE9E;;EAEE;AACF;IAME,yBAAoB,gBAAkC,EAAU,2BAAwD;QAApG,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,gCAA2B,GAA3B,2BAA2B,CAA6B;QALxH,6DAA6D;QAC7D,eAAU,GAAgC,IAAI,qEAAe,CAAa,EAAE,CAAC,CAAC;QAM5E,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,oDAAoD;QACpD,kBAAkB;QAClB,oCAAoC;QACpC,MAAM;QACN,qCAAqC;IACvC,CAAC;IAXD,sBAAI,iCAAI;aAAR,cAAyB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAaxD,2CAAiB,GAAjB;QAAA,iBAkBC;QAjBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,SAAS;gBAElF,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC7B,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;gBAC5D,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE,CAAC;QAClD,CAAC;IACH,CAAC;IAGD;;MAEE;IACF,sCAAY,GAAZ,UAAa,SAAqB;QAChC,IAAI,UAAU,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAElC,CAAC;IAGD,qCAAW,GAAX,UAAY,QAAQ;QAClB,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAErC,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEvD,6BAA6B;QAC7B,oCAAoC;IACtC,CAAC;IAED,sCAAY,GAAZ,UAAa,eAAe;QACxB,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACnE,uBAAuB;QACvB,wCAAwC;QACxC,EAAE;QACF,4CAA4C;QAC5C,0CAA0C;QAC1C,0BAA0B;QAC1B,MAAM;QACN,MAAM;QACN,uBAAuB;QACvB,iEAAiE;QACjE,sCAAsC;QACtC,IAAI;IACN,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;QAChB,UAAU,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACpC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAC;gBAC3B,MAAM,GAAG,KAAK,CAAC;YACjB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAIH,sBAAC;AAAD,CAAC;;AAGD,8EAA8E;AAE9E;;;EAGE;AACF;IAAuC,qCAAe;IASpD,2BAAoB,gBAAiC,EAAW,KAAa,EAAW,UAAuB;QAA/G,YACE,iBAAO,SACR;QAFmB,sBAAgB,GAAhB,gBAAgB,CAAiB;QAAW,WAAK,GAAL,KAAK,CAAQ;QAAW,gBAAU,GAAV,UAAU,CAAa;QAR/G,mBAAa,GAAG,IAAI,qEAAe,CAAC,EAAE,CAAC,CAAC;QAKxC,kBAAY,GAAe,EAAE,CAAC;QAC9B,kBAAY,GAAe,EAAE,CAAC;;IAI9B,CAAC;IATD,sBAAI,qCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD,UAAW,MAAc,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OADN;IAWzD;;MAEE;IACF,mCAAO,GAAP;QAAA,iBA4CC;QA3CC,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,KAAK,CAAC,YAAY;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI;SACrB,CAAC;QAEF,MAAM,CAAC,2DAAU,CAAC,KAAK,OAAhB,2DAAU,EAAU,kBAAkB,EAAE,GAAG,CAAC;YACjD,mCAAmC;YAEnC,kCAAkC;YAClC,KAAI,CAAC,YAAY,GAAK,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,UAAC,IAAc;gBAE7E,qBAAqB;gBACrB,6CAA6C;gBAC7C,kCAAkC;gBAClC,gBAAgB;gBAChB,qCAAqC;gBACrC,IAAI;gBACJ,gDAAgD;gBAChD,kCAAkC;gBAClC,gBAAgB;gBAChB,qCAAqC;gBACrC,IAAI;gBACJ,EAAE;gBACF,8FAA8F;gBAE9F,4DAA4D;gBAC5D,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;gBAEpG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YAEH,wBAAwB;YACxB,IAAM,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;YAE5D,qDAAqD;YACrD,IAAM,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxE,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAG5E,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAU,GAAV,cAAc,CAAC;IAEf;;MAEE;IACF,oCAAQ,GAAR,UAAS,IAAgB;QAAzB,iBAoBC;QAnBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAEtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACpB,IAAI,SAAS,GAAkB,EAAE,CAAC;YAClC,IAAI,SAAS,GAAkB,EAAE,CAAC;YAElC,MAAM,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1B,KAAK,KAAK;oBAAE,mBAAuC,EAAtC,iBAAS,EAAE,iBAAS,CAAmB;oBAAC,KAAK,CAAC;gBAC3D,KAAK,OAAO;oBAAE,uBAA2C,EAA1C,iBAAS,EAAE,iBAAS,CAAuB;oBAAC,KAAK,CAAC;gBACjE,KAAK,QAAQ;oBAAE,yBAA6C,EAA5C,iBAAS,EAAE,iBAAS,CAAyB;oBAAC,KAAK,CAAC;gBACpE,KAAK,UAAU;oBAAE,6BAAiD,EAAhD,iBAAS,EAAE,iBAAS,CAA6B;oBAAC,KAAK,CAAC;gBAC1E,KAAK,UAAU;oBAAE,6BAAiD,EAAhD,iBAAS,EAAE,iBAAS,CAA6B;oBAAC,KAAK,CAAC;YAC5E,CAAC;YAED,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;YACxD,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;YAExD,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAC/E,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC,CAxFsC,4EAAU,GAwFhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9VmD;AACT;AAEN;AAKsB;AACA;AACoB;AAMrC;AAG5C,IAAa,wBAAwB;IAmBnC,kCAAoB,qBAA+B,EAAU,oBAAkD;QAC7G,2EAA2E;QAD7E,iBAmCC;QAnCmB,0BAAqB,GAArB,qBAAqB,CAAU;QAAU,yBAAoB,GAApB,oBAAoB,CAA8B;QAlBvG,gBAAW,GAAG,8EAAW,CAAC,MAAM,CAAC;QAqBvC,IAAI,CAAC,MAAM,GAAG,8CAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,qFAAqF;QACrF,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;QAChE,mCAAmC;QACnC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE1E,qBAAqB;QACrB,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,QAAQ,IAAK,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAxB,CAAwB,CAAC,CAAC;QACpF,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,QAAQ,IAAK,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAxB,CAAwB,CAAC,CAAC;QACpF,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,QAAQ,IAAK,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAxB,CAAwB,CAAC,CAAC;QACpF,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,QAAQ,IAAK,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAxB,CAAwB,CAAC,CAAC;QAGpF,IAAI,CAAC,YAAY,GAAG,IAAI,2DAAU,CAAC,UAAC,QAAQ;YAC1C,KAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QACrC,mDAAmD;QAEnD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,WAAW;QACX,oCAAoC;QACpC,2BAA2B;QAC3B,wBAAwB;QACxB,4BAA4B;QAC5B,MAAM;QACN,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,YAAY;QAEZ,0BAA0B;IAE5B,CAAC;IAED,8CAAW,GAAX;QAEE,8EAA8E;QAC9E,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QACzB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,sBAAsB;QACtB,wCAAwC;QACxC,EAAE;QACF,EAAE;QACF,EAAE;QACF,4BAA4B;QAC5B,EAAE;QACF,wCAAwC;QAExC,4BAA4B;QAE5B,6BAA6B;QAC7B,uDAAuD;IACzD,CAAC;IAED,6EAA6E;IAC7E,uBAAuB;IAEhB,kDAAe,GAAtB;QACE;;;UAGE;QAJJ,iBA2BC;QArBC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;YACjC,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC,CAAC,IAAI,CAAC,UAAC,oBAAoB;YAE3B,oEAAoE;YACpE;;;cAGE;YACF,oEAAoE;YAEpE,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,oBAAoB,CAAC;YAGlD,4DAA4D;YAC5D,sCAAsC;YAEtC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACtC,CAAC;IAGD,mDAAgB,GAAhB,UAAiB,mBAAmB;QAClC,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QAE9D,EAAE,EAAC,aAAa,GAAG,CAAC,CAAC,CAAC,EAAC;YACrB,IAAI,EAAE,GAAG,mBAAmB,CAAC,GAAG,CAAC;YACjC,IAAI,SAAS,GAAG,mBAAmB,CAAC,UAAU,CAAC;YAC/C,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,EAAC,EAAC,UAAU,EAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAC,WAAW,EAAC,IAAI,EAAC,CAAC,CAAC,IAAI,CACpG,0BAAgB;gBACd,EAAE,EAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAC;oBAE5B;;sBAEE;oBAEF,mDAAI,CAAC;wBACH,KAAK,EAAE,qBAAqB;wBAC5B,IAAI,EAAE,4BAA4B;wBAClC,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ,CAAC,CAAC,IAAI,CACL,cAAa,CAAC;oBACd,iCAAiC;oBACjC,UAAU,OAAO;wBACf,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;4BACxB,4CAA4C;wBAC9C,CAAC;oBACH,CAAC,CACF;gBAEH,CAAC;YACH,CAAC,CACF;QACH,CAAC;IAGH,CAAC;IAED,oDAAiB,GAAjB,UAAkB,mBAAmB;QACnC,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QAE9D,EAAE,EAAC,aAAa,GAAG,CAAC,CAAC,CAAC,EAAC;YACrB,IAAI,EAAE,GAAG,mBAAmB,CAAC,GAAG,CAAC;YACjC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAC3C,2BAAiB;gBACf,wDAAwD;gBACxD,mDAAI,CAAC;oBACH,KAAK,EAAE,sBAAsB;oBAC7B,IAAI,EAAE,6CAA6C;oBACnD,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC,IAAI,CACL,cAAa,CAAC;gBACd,iCAAiC;gBACjC,UAAU,OAAO;oBACf,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;wBACxB,4CAA4C;oBAC9C,CAAC;gBACH,CAAC,CACF;YACH,CAAC,CACF;QACH,CAAC;IACH,CAAC;IAED,oDAAiB,GAAjB;QAAA,iBAkBC;QAjBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAC;YACvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,SAAS;gBAEpF,KAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;gBAClC,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;gBAC5D,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAC3C,CAAC;IACH,CAAC;IAGD,sBAAsB;IAGtB;;;MAGE;IACM,4CAAS,GAAjB,UAAkB,gBAAgB;QAChC,+FAA+F;QAC/F,gCAAgC;QAChC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAEzC,oEAAoE;QACpE,EAAE,EAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACpD,CAAC;QAED,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC;IAGD;;;MAGE;IACM,4CAAS,GAAjB,UAAkB,iBAAiB;QACjC,gGAAgG;QAChG,iCAAiC;QAEjC,4BAA4B;QAE5B,kEAAkE;QAClE,EAAE,EAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;QAC1C,CAAC;IAEH,CAAC;IAED;;;MAGE;IACM,4CAAS,GAAjB,UAAkB,gBAAgB;QAEhC,kEAAkE;QAClE,EAAE,EAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAC;YAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YAErD,4CAA4C;YAC5C,EAAE,EAAC,OAAO,CAAC,EAAC;gBACV,EAAE,EAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,EAAC;oBAC9D,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;gBAC1D,CAAC;YACH,CAAC;QAEH,CAAC;IAEH,CAAC;IAED;;;MAGE;IACM,4CAAS,GAAjB,UAAkB,QAAQ;IAE1B,CAAC;IAGD,8EAA8E;IAC9E,oBAAoB;IAEZ,kDAAe,GAAvB,UAAwB,mBAAmB;QACzC,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC;QAExB,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAC7C,2BAA2B;QAE3B,WAAW,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACrC,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAC;gBAE5D,cAAc,GAAG,KAAK,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAEO,kDAAe,GAAvB,UAAwB,cAAc;QACpC,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAC7C,2BAA2B;QAE3B,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAEvD,EAAE,EAAC,WAAW,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,EAAC;YACjE,oCAAoC;YACpC,yCAAyC;YACzC,kDAAkD;YAClD,EAAE;YACF,2CAA2C;YAE3C,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAEhE,2CAA2C;YAC3C,+CAA+C;YAE/C,2BAA2B;YAE3B,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAIH,+BAAC;AAAD,CAAC;AAvTY,wBAAwB;IADpC,iEAAU,EAAE;yDAoBgC,kFAAQ,oBAAR,kFAAQ,sDAAiC,qGAA2B,oBAA3B,qGAA2B;GAnBpG,wBAAwB,CAuTpC;AAvToC;;;;;;;;;ACnBrC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,oWAAoW,qBAAqB,gdAAgd,+CAA+C,gCAAgC,kBAAkB,GAAG,oBAAoB,mCAAmC,eAAe,kDAAkD,kDAAkD,2lBAA2lB,kWAAkW,yBAAyB,mWAAmW,2BAA2B,wKAAwK,sBAAsB,yKAAyK,wBAAwB,uLAAuL,oDAAoD,6KAA6K,2BAA2B,+KAA+K,8BAA8B,6rB;;;;;;;;;;;;;;;;;;;;;;ACAj2G;AAKlD;AAEU;AAGuC;AAWxE,IAAa,oBAAoB;IAY7B,8BACY,kBAA6C,EAC7C,GAAsB;QADtB,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,QAAG,GAAH,GAAG,CAAmB;QAZ3B,gBAAW,GAAU,EAAE,CAAC;QAKxB,mBAAc,GAAG,KAAK,CAAC;QACvB,wBAAmB,GAAY,CAAC,CAAC;IAOpC,CAAC;IAEL,uCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,oBAA2B;YAC3F,KAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;YACxC,EAAE,EAAC,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAC9B,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACnD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC7B,CAAC;YACD,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC5B,CAAC,EAAE,UAAC,GAAG;YACH,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAW,GAAX;QACE,mDAAmD;QAEjD,kCAAkC;QAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,6CAAc,GAAd,UAAe,mBAAmB;QAC9B,uCAAuC;QACvC,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC;QAC5C,CAAC,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,+CAAgB,GAAhB,UAAiB,mBAAmB;QAChC,oCAAoC;QACpC,mCAAmC;QAEnC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;QAC9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QACxD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAClD,CAAC;IACD,gDAAiB,GAAjB,UAAkB,mBAAmB;QACjC,oCAAoC;QACpC,mCAAmC;QAEnC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QACxD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAClD,CAAC;IAED,oCAAK,GAAL,UAAM,KAAK;QACP,IAAI,UAAU,GAAG,oCAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,KAAK;IAChB,CAAC;IAEL,2BAAC;AAAD,CAAC;AA5DoC;IAAhC,gEAAS,CAAC,oBAAoB,CAAC;kDAAqB,yDAAU,oBAAV,yDAAU;gEAAC;AAVvD,oBAAoB;IANhC,gEAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,SAAS,EAAE,CAAE,6FAAwB,CAAE;QACvC,0FAA2C;QAC3C,yFAA0C;KAC7C,CAAC;yDAcmC,6FAAwB,oBAAxB,6FAAwB,sDACxC,gEAAiB,oBAAjB,gEAAiB;GAdzB,oBAAoB,CAsEhC;AAtEgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBU;AAEN;AAIsB;AAE5B;AACE;AAWjC,IAAa,yBAAyB;IAMpC,mCACU,cAA8B;QADxC,iBAeC;QAdS,mBAAc,GAAd,cAAc,CAAgB;QAGtC,IAAI,CAAC,QAAQ,GAAG,IAAI,mDAAU,CAAC,UAAC,QAAQ;YACtC,4BAA4B;YAC5B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,oCAAoC;QACpC,qBAAqB;QACrB,iCAAiC;QACjC,kCAAkC;QAClC,uBAAuB;QACvB,KAAK;QACL,oCAAoC;IACtC,CAAC;IAEM,2CAAO,GAAd,UAAe,OAAO;QACpB,sCAAsC;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,iDAAiD;QACjD,iCAAiC;QACjC,8BAA8B;QAC9B,yCAAyC;QACzC,MAAM;QAEN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,+CAA+C;IAEjD,CAAC;IAEM,6CAAS,GAAhB,UAAiB,MAAM;QACrB,EAAE,EAAC,MAAM,CAAC,EAAC;YACT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAEM,8CAAU,GAAjB;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAEM,gDAAY,GAAnB,UAAoB,MAAM;QACxB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,EAAC;YACpC,IAAI,YAAU,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACtC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,EAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,YAAU,GAAG,KAAK,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,YAAU,GAAG,CAAC,CAAC,CAAC,EAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,YAAU,CAAC,GAAG,MAAM,CAAC;YACpC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAEM,oDAAgB,GAAvB,UAAwB,cAAc;QAGpC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAS,GAAG,EAAC,KAAK;YACrC,EAAE,EAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,cAAc,CAAC,GAAG,CAAC,EAAC;gBAC3C,CAAC,GAAG,KAAK,CAAC;YACZ,CAAC;QACH,CAAC,CAAC,CAAC;QACH,EAAE,EAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,cAAc,CAAC,aAAa,CAAC;QAC/D,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEnC,CAAC;IAEM,gDAAY,GAAnB,UAAoB,MAAM;QACxB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,EAAC;YACpC,IAAI,YAAU,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACtC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,EAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,YAAU,GAAG,KAAK,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,YAAU,GAAG,CAAC,CAAC,CAAC,EAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAU,EAAE,CAAC,CAAC,CAAC;YACrC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAMH,gCAAC;AAAD,CAAC;AArGY,yBAAyB;IADrC,iEAAU,EAAE;yDAQe,+EAAc,oBAAd,+EAAc;GAP7B,yBAAyB,CAqGrC;AArGqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBK;AAEN;AAGiB;AAGvB;AACE;AAUjC,IAAa,uBAAuB;IAMlC,iCACU,YAA0B;QADpC,iBAOC;QANS,iBAAY,GAAZ,YAAY,CAAc;QAGlC,IAAI,CAAC,MAAM,GAAG,IAAI,mDAAU,CAAC,UAAC,QAAQ;YACpC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACM,8CAAY,GAAnB,UAAoB,KAAK;QACvB,+CAA+C;QAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,2BAA2B;QAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEM,yCAAO,GAAd,UAAe,QAAQ;QACrB,EAAE,EAAC,QAAQ,CAAC,EAAC;YACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEM,0CAAQ,GAAf;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEM,4CAAU,GAAjB,UAAkB,QAAQ;QACxB,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,EAAC;YACpC,IAAI,YAAU,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,YAAU,GAAG,KAAK,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,YAAU,GAAG,CAAC,CAAC,CAAC,EAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,YAAU,CAAC,GAAG,QAAQ,CAAC;YACpC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEM,4CAAU,GAAjB,UAAkB,IAAI;QACpB,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,EAAC;YAChC,IAAI,YAAU,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACpC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,YAAU,GAAG,KAAK,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,YAAU,GAAG,CAAC,CAAC,CAAC,EAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAU,EAAE,CAAC,CAAC,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IACH,8BAAC;AAAD,CAAC;AA/DY,uBAAuB;IADnC,iEAAU,EAAE;yDAQa,0EAAY,oBAAZ,0EAAY;GAPzB,uBAAuB,CA+DnC;AA/DmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBO;AAEN;AAG6B;AAGnC;AACE;AAUjC,IAAa,2BAA2B;IAMtC,qCACU,gBAAkC;QAD5C,iBAOC;QANS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAG1C,IAAI,CAAC,UAAU,GAAG,IAAI,mDAAU,CAAC,UAAC,QAAQ;YACxC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACM,sDAAgB,GAAvB,UAAwB,SAAS;QAC/B,+CAA+C;QAC/C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,+BAA+B;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,iDAAW,GAAlB,UAAmB,QAAQ;QACzB,EAAE,EAAC,QAAQ,CAAC,EAAC;YACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEM,kDAAY,GAAnB;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAEM,oDAAc,GAArB,UAAsB,QAAQ;QAC5B,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,EAAC;YACxC,IAAI,YAAU,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACxC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,YAAU,GAAG,KAAK,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,YAAU,GAAG,CAAC,CAAC,CAAC,EAAC;gBAClB,IAAI,CAAC,SAAS,CAAC,YAAU,CAAC,GAAG,QAAQ,CAAC;YACxC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEM,oDAAc,GAArB,UAAsB,QAAQ;QAC5B,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,EAAC;YACxC,IAAI,YAAU,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACxC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAC;oBAC3B,YAAU,GAAG,KAAK,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,YAAU,GAAG,CAAC,CAAC,CAAC,EAAC;gBAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAU,EAAE,CAAC,CAAC,CAAC;YACvC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEM,oDAAc,GAArB,UAAsB,QAAQ;QAE5B,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAE3C,EAAE,EAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,EAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAEO,oDAAc,GAAtB,UAAuB,QAAQ;QAC7B,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YACxC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAC;gBAC3B,MAAM,GAAG,KAAK,CAAC;YACjB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;IAEhB,CAAC;IACH,kCAAC;AAAD,CAAC;AAtFY,2BAA2B;IADvC,iEAAU,EAAE;yDAQiB,sFAAgB,oBAAhB,sFAAgB;GAPjC,2BAA2B,CAsFvC;AAtFuC;;;;;;;;;ACnBxC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6VAA6V,6FAA6F,+EAA+E,2DAA2D,8DAA8D,8BAA8B,KAAK,oBAAoB,igBAAigB,8L;;;;;;;;;;;;;;;;;;;;ACAxoC;AACH;AAS/C,IAAa,eAAe;IAU1B,yBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QALzC,eAAU,GAEb;YACF,IAAI,EAAE,IAAI;SACX,CAAC;IACkD,CAAC;IAErD,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAGD,qCAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YAC1C,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAExB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oCAAU,GAAV,UAAW,WAAoB;QAA/B,iBAYC;QAVC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAClD,cAAI;YACF,qBAAqB;YACrB,4BAA4B;YAC5B,KAAI,CAAC,UAAU,GAAG;gBAChB,IAAI,EAAE,IAAI;aACX,CAAC;YAAA,CAAC;YACH,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAC7B,sBAAsB;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,oCAAU,GAAV,UAAW,MAAa,EAAE,IAAW,EAAE,SAAiB;QAAxD,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAC,IAAI,EAAC,SAAS,CAAC,CAAC,SAAS,CAC5D,cAAI;YACF,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,oCAAU,GAAV,UAAW,MAAe;QAA1B,iBAMC;QAJC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAC9C,cAAI;YACD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEH,sBAAC;AAAD,CAAC;AAlDY,eAAe;IAN3B,gEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,SAAS,EAAC,CAAC,sEAAa,CAAC;QACzB,oFAAsC;QACtC,mFAAqC;KACtC,CAAC;yDAWmC,sEAAa,oBAAb,sEAAa;GAVrC,eAAe,CAkD3B;AAlD2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVe;AACI;AAGhB;AACE;AAC4B;AAEA;AAI7D,IAAa,aAAa;IAMxB,uBAAoB,IAAU,EAAU,WAAwB;QAA5C,SAAI,GAAJ,IAAI,CAAM;QAAU,gBAAW,GAAX,WAAW,CAAa;QAHxD,YAAO,GAAG,IAAI,OAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC7D,cAAS,GAAG,8EAAW,CAAC,MAAM,GAAC,SAAS,CAAC,CAAE,iBAAiB;IAInE,CAAC;IAGD,gCAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC5D,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ;YACb,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAC7B,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAa,CAAC;QACnC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzB,CAAC;IAEF,kCAAU,GAAV,UAAW,WAAoB;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EACnC;YACE,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,KAAK;SACd,EAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC;IACvC,CAAC;IACD,kCAAU,GAAV,UAAW,OAAc,EAAC,WAAkB,EAAC,WAAmB;QAC/D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAC,GAAG,GAAE,OAAO,EAC/C;YACE,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,WAAW;SACpB,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5B,CAAC;IACD,kCAAU,GAAV,UAAW,OAAc;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,GAAC,GAAG,GAAE,OAAO,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7E,CAAC;IAGQ,mCAAW,GAAnB,UAAoB,KAAU;QAC9B,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,CAAC,CAAC;QACjE,6BAA6B;QAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAC/C,CAAC;IACF,oBAAC;AAAD,CAAC;AA9CY,aAAa;IADzB,iEAAU,EAAE;yDAOe,2DAAI,oBAAJ,2DAAI,sDAAuB,iFAAW,oBAAX,iFAAW;GANrD,aAAa,CA8CzB;AA9CyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwD;AACtC;AACC;AACP;AACA;AACD;AACA;AAMrC,IAAa,WAAW;IAOtB,qBAAY,GAAsB;QAJ1B,gBAAW,GAAG,KAAK,CAAC;QAK1B,IAAI,CAAC,KAAK,GAAG,IAAI,0DAAS,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEM,+BAAS,GAAhB,UAAiB,GAAQ;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACvC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACvD,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAEjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACpC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAEM,yBAAG,GAAV;QACE,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAEM,iCAAW,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,kCAAkC;IACpC,CAAC;IAEO,mCAAa,GAArB;QAAA,iBAYC;QAXC,MAAM,CAAC,2DAAU;aACd,EAAE,CAAC,CAAC,CAAC;aACL,UAAU,CAAC,uBAAa;YACvB,+FAA+F;YAC/F,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBAChC,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC;gBACpC,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;aACD,SAAS,CAAC,WAAC,IAAI,QAAC,KAAI,CAAC,WAAW,EAAjB,CAAiB,CAAC;aACjC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,YAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CAAC,CAAC;IACnC,CAAC;IAAA,CAAC;IAEM,6BAAO,GAAf;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;QAE/B,yCAAyC;QACzC,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;QAEhD,gBAAgB;QAChB,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;YACf,MAAM,CAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAG,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACxB,MAAM,CAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,MAAG,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;YACzB,MAAM,CAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAG,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAG,CAAC;QACzC,CAAC;IACH,CAAC;IACH,kBAAC;AAAD,CAAC;AArEY,WAAW;IAJvB,2DAAI,CAAC;QACJ,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,KAAK;KACZ,CAAC;yDAQiB,gEAAiB,oBAAjB,gEAAiB;GAPvB,WAAW,CAqEvB;AArEuB;;;;;;;;;ACZxB;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,yNAAyN,yCAAyC,6hBAA6hB,sOAAsO,+SAA+S,cAAc,oQAAoQ,eAAe,8HAA8H,kDAAkD,yBAAyB,uBAAuB,GAAG,yBAAyB,qXAAqX,4CAA4C,qCAAqC,uBAAuB,4sBAA4sB,mBAAmB,iBAAiB,qBAAqB,KAAK,aAAa,mBAAmB,iBAAiB,qBAAqB,KAAK,kF;;;;;;;;;;;;;;;;;;;;;;;;ACAjlG;AACkB;AAO7C;AACU;AAC6B;AAQ9D,IAAa,wBAAwB;IAgDnC,kCAAoB,sBAA+C,EAAS,GAAsB,EACxF,qBAA2C;QADjC,2BAAsB,GAAtB,sBAAsB,CAAyB;QAAS,QAAG,GAAH,GAAG,CAAmB;QACxF,0BAAqB,GAArB,qBAAqB,CAAsB;QA9C9C,cAAS,GAAY,KAAK,CAAC;QAClC,kBAAa,GAAU;YACrB;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,QAAQ;aAClB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,MAAM;gBAChB,OAAO,EAAE,MAAM;aAChB;YACD;gBACI,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,MAAM;aAClB;SACF,CAAC;QAKF,8BAA8B;QACvB,YAAO,GAAG;YACZ,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;YAC3B,kBAAkB;YACjB,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,WAAW;YACpB,YAAY,EAAE,KAAK;SACtB,CAAC;IAEsD,CAAC;IAG1D,oEAAoE;IACpE,mDAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,KAAK,GAAG,aAAa,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;gBAC1C,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/C,CAAC;QACH,CAAC;QAED,MAAM,CAAC,KAAK;IACd,CAAC;IAED,wGAAwG;IACxG,wCAAK,GAAL,UAAM,KAAK;QACT,uBAAuB;QAEvB,aAAa;QACb,iCAAiC;QAEjC,eAAe;QACf,IAAI,UAAU,GAAG,oCAAM,CAAC,KAAK,EAAC,qBAAqB,CAAC,CAAC;QACrD,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,KAAK;IACd,CAAC;IAGD,8CAAW,GAAX,UAAY,KAAK,EAAC,MAAM;QACtB,0BAA0B;QAC1B,2BAA2B;QAC3B,KAAK,CAAC,MAAM,GAAC,MAAM,CAAC;QAEpB,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;QACtD,oDAAoD;QACpD,cAAc;QACd,0BAA0B;QAC1B,MAAM;IAER,CAAC;IAGM,iDAAc,GAArB,UAAsB,KAAK;QACzB,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAEM,iDAAc,GAArB,UAAsB,KAAK;QACzB,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,KAAK,EAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IAEM,iDAAc,GAArB,UAAsB,KAAK;QACzB,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,KAAK,EAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IAEM,kDAAe,GAAtB,UAAuB,KAAK;QAC1B,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,EAAE,EAAC,KAAK,CAAC,MAAM,KAAK,WAAW,IAAI,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC,EAAC;YAChE,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,2CAAQ,GAAR;QACE,gGAAgG;QAChG,UAAU;QAFZ,iBAkCC;QA7BC,IAAI,MAAM,GAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,QAAQ,CAAC,EAAC;YAC7B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;YAEjC,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAE9E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,MAAe;gBAC9E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,iCAAiC;gBACjC,4BAA4B;gBAC5B,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;gBACxB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;oBAE5B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;oBAChC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;oBAC/B,IAAI,WAAW,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;oBAE5C,MAAM,CAAC,CAAC,WAAW,CAAC;gBAEtB,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAC1B,CAAC,EAAE,UAAC,GAAG;gBACH,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAEH,+BAAC;AAAD,CAAC;AApJY,wBAAwB;IANpC,gEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,SAAS,EAAC,CAAC,0FAAsB,EAAE,4EAAoB,CAAC;QACxD,0GAAiD;QACjD,yGAAgD;KACjD,CAAC;yDAiD6C,0FAAsB,oBAAtB,0FAAsB,sDAAc,gEAAiB,oBAAjB,gEAAiB,sDACjE,4EAAoB,oBAApB,4EAAoB;GAjD1C,wBAAwB,CAoJpC;AApJoC;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBM;AACE;AAGZ;AAO4B;AACA;AAM7D,IAAa,sBAAsB;IAqB/B,gCAAoB,qBAA+B;QACjD,qCAAqC;QACrC,2EAA2E;QAF7E,iBAqBC;QArBmB,0BAAqB,GAArB,qBAAqB,CAAU;QAnB3C,gBAAW,GAAG,8EAAW,CAAC,MAAM,CAAC;QAuBvC,mCAAmC;QACnC,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;QAChE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAG5D,qBAAqB;QACrB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAGnE,IAAI,CAAC,OAAO,GAAG,IAAI,2DAAU,CAAC,UAAC,QAAQ;YACnC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;IAClC,CAAC;IAIM,6CAAY,GAAnB,UAAoB,WAAmB,EAAE,QAAQ;QAAjD,iBAoCC;QAnCG,yBAAyB;QACzB,yCAAyC;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,yBAAyB;QACzB,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,uEAAuE;QACvE,IAAI,IAAI,GAAG,oCAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACjD,IAAI,KAAK,GAAG,oCAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,KAAK,GAAG,CAAC,oCAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QAEjD,qBAAqB;QACrB,sBAAsB;QACtB,sBAAsB;QAEtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACpB,KAAK,EAAE;gBACH,WAAW,EAAE;oBACX,GAAG,EAAE,IAAI;oBACT,GAAG,EAAE,KAAK;iBACX;gBACD,MAAM,EAAE,QAAQ;gBAChB,SAAS,EAAE,iBAAiB,CAAC,mBAAmB;aACnD;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAEb,mEAAmE;YACnE,2BAA2B;YAE3B,wCAAwC;YACxC,wBAAwB;YAExB,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;YAC/B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACxC,CAAC;IAGM,4CAAW,GAAlB,UAAmB,KAAK,EAAE,WAAW;QACnC,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,mCAAmC;QACnC,oBAAoB;QAEpB,IAAI,KAAK,GAAG,oCAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9B,sBAAsB;QACtB,sCAAsC;QACtC,0BAA0B;QAC1B,2BAA2B;QAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,EAAC,QAAQ,EAAE,WAAW,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,gBAAgB;YAC5G,kDAAkD;YAClD,iCAAiC;QACnC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACtC,CAAC;IAEO,yCAAQ,GAAhB,UAAiB,EAAU;QACvB,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QAEpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;gBACtC,UAAU,GAAG,CAAC,CAAC;YACnB,CAAC;QACL,CAAC;QAED,MAAM,CAAC,UAAU,CAAC;QAClB,YAAY;IAChB,CAAC;IAED;;MAEE;IACM,0CAAS,GAAjB,UAAkB,KAAU;QAExB,EAAE,EAAC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC;YAE9C;;;;cAIE;YAEF,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YAErB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9B,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAGhC,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC3C,2CAA2C;YAC3C,6CAA6C;YAE7C,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;gBAEvC,4CAA4C;gBAC5C,EAAE,EAAC,GAAG,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAC;oBAC/E,4CAA4C;oBAC5C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAClC,uBAAuB;oBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC;QAEH,CAAC;IAEL,CAAC;IAED;;MAEE;IACM,0CAAS,GAAjB,UAAkB,KAAY;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,EAAE,EAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAC;YACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;YAErC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC;IAEL,CAAC;IAID;;MAEE;IACM,0CAAS,GAAjB,UAAkB,KAAY;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,EAAE,EAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAC;YACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC;IAEL,CAAC;IAED;;MAEE;IAEM,0CAAS,GAAjB,UAAkB,KAAK;QAErB,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE9C,EAAE,EAAC,UAAU,IAAI,CAAC,CAAC,CAAC,EAAC;YAEnB,IAAI,aAAa,GAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAE1D,2CAA2C;YAC3C,EAAE,EAAC,aAAa,CAAC,MAAM,IAAG,WAAW,IAAI,KAAK,CAAC,MAAM,IAAI,WAAW,CAAC,EAAC;gBACpE,6EAA6E;gBAC7E,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC/C,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;QAC5C,CAAC;IAIH,CAAC;IAID;;MAEE;IACF,4CAAW,GAAX;QAEI,sBAAsB;QACtB,2BAA2B;QAC3B,6BAA6B;QAC7B,0DAA0D;IAC9D,CAAC;IAGM,sDAAqB,GAA5B,UAA6B,cAAc;QACzC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAGD,wDAAuB,GAAvB,UAAwB,QAAQ;QAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,cAAc,GAAG,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,QAAQ,GAAG,iCAAiC,CAC/F;IACH,CAAC;IAED,oBAAoB;IACd,iDAAgB,GAAxB,UAAyB,KAAK;QAC5B,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QAEpB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACnC,2BAA2B;QAE3B,MAAM,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YAChC,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAC;gBAE9C,UAAU,GAAG,KAAK,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH,6BAAC;AAAD,CAAC;AAvPY,sBAAsB;IADlC,iEAAU,EAAE;yDAsBkC,kFAAQ,oBAAR,kFAAQ;GArB1C,sBAAsB,CAuPlC;AAvPkC;;;;;;;;;AClBnC,kbAAkb,uUAAuU,eAAe,SAAS,gBAAgB,+FAA+F,mBAAmB,8sC;;;;;;;;;;;;;;;;;;;ACApyB;AAQ/G,IAAa,wBAAwB;IAJrC;QAQY,oBAAe,GAAG,IAAI,2DAAY,EAAE,CAAC;QAQxC,sBAAiB,GAAe,EAAE,CAAC;QAEnC,gBAAW,GAAY,KAAK,CAAC;QAE5B,UAAK,GAAO,EAAE,CAAC;QACf,eAAU,GAAU,GAAG,CAAC;QACxB,aAAQ,GAAW,KAAK,CAAC;IA0JnC,CAAC;IAxJC;;;;MAIE;IACF,8CAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;QAErD,EAAE,EAAC,IAAI,CAAC,SAAS,IAAE,IAAI,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,EAAC;YACvD,qFAAqF;YAErF,oCAAoC;YACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAEjE,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACxC;;;;;kBAKE;gBACF,IAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACnC,IAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;gBACrF,IAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;YACzF,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,IAAE,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;gBAClC,wBAAwB;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IAEH,CAAC;IAED;;MAEE;IACK,+CAAY,GAAnB;QAEE,IAAI,gBAAgB,GAAG,IAAI,CAAC;QAC5B,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;YAChD,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAC;gBACzB,6BAA6B;gBAC7B,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,sBAAsB;YACpE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,6DAA6D;QAC7D,iCAAiC;QACjC,mCAAmC;QACnC,qCAAqC;QAErC,mBAAmB;QACnB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAE/C,0CAA0C;QAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC9C,CAAC;IAED;;MAEE;IACK,2CAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAED;;MAEE;IACK,kDAAe,GAAtB;QACE,CAAC,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAEM,qDAAkB,GAAzB,UAA0B,aAAa;QACrC,yEAAyE;QACzE,+BAA+B;QAE/B,EAAE,EAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC9B,CAAC;QAGD,EAAE,EAAC,aAAa,IAAI,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,EAAC;YAClD,sDAAsD;YACtD,8BAA8B;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,6CAA6C;YAEjF,yBAAyB;YACzB,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACxC,IAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACnC,IAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;gBACrF,IAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;YACzF,CAAC,CAAC,CAAC;QACL,CAAC;QAED,+CAA+C;QAE/C,EAAE,EAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,EAAC;YAC7B,mCAAmC;YACnC,8BAA8B;YAC9B;;;;cAIE;YAEF,8DAA8D;YAC9D,eAAe;YACf,eAAe;YACf,iBAAiB;YACjB,IAAI;YACJ,EAAE;YACF,mCAAmC;YAE7B,IAAI,CAAC,QAAS,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAKD,sBAAY,+CAAS;QAHrB,6EAA6E;QAC7E,mCAAmC;aAEnC;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAsB,KAAY;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC;QAC1C,CAAC;;;OALA;IAMM,2CAAQ,GAAf,UAAgB,KAAS;QACvB,8CAA8C;IAChD,CAAC;IAEM,0CAAO,GAAd,UAAe,KAAS;QACtB,6CAA6C;IAC/C,CAAC;IAEM,wCAAK,GAAZ,UAAa,KAAS;QACpB,6CAA6C;IAC/C,CAAC;IAEM,+CAAY,GAAnB,UAAoB,KAAS;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACH,+BAAC;AAAD,CAAC;AA1KU;IAAR,4DAAK,EAAE;;iEAAsB;AACrB;IAAR,4DAAK,EAAE;;2DAAuB;AACrB;IAAT,6DAAM,EAAE;;iEAAsC;AAEb;IAAjC,gEAAS,CAAC,qBAAqB,CAAC;kDAAsB,yDAAU,oBAAV,yDAAU;qEAAC;AAC1C;IAAvB,gEAAS,CAAC,WAAW,CAAC;kDAAW,yDAAU,oBAAV,yDAAU;0DAAC;AAPlC,wBAAwB;IAJpC,gEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,wGAA0C;KAC3C,CAAC;GACW,wBAAwB,CA4KpC;AA5KoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRM;AACE;AAEN;AACN;AAY4B;AAGA;AAIb;AAER;AACb;AACsC;AAKjE,IAAa,kBAAkB;IAiB3B,4BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAfpC,gBAAW,GAAG,8EAAW,CAAC,MAAM,CAAC;IAiBzC,CAAC;IAED,2EAA2E;IAC3E,uBAAuB;IAEhB,oCAAO,GAAd,UAAe,EAAW;QAEtB,6DAA6D;QAFjE,iBA4CC;QAxCG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,MAAM,GAAG,8CAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEnC,IAAI,CAAC,WAAW,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4CAAK,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,+CAAU,CAAC,kCAAE,CAAC,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4DAAc,CAAC;YACxC,OAAO,EAAE,MAAM,CAAC,YAAY;SAC7B,CAAC,CAAC,CAAC;QAEJ,mCAAmC;QACnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE9D,qBAAqB;QACrB,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QACzE,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QACzE,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QACzE,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAGzE,IAAI,CAAC,OAAO,GAAG,IAAI,2DAAU,CAAC,UAAC,QAAQ;YACnC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;QAChC,IAAI,SAAS,GAAG,IAAI,CAAC;QAErB,SAAS,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;YAChC,yBAAyB;YACzB,sBAAsB;YACtB,SAAS,CAAC,IAAI,EAAE,CAAC;QAGnB,CAAC,CAAC,CAAC;QAEH,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC;IAEhB,CAAC;IAGD;;MAEE;IACM,uCAAU,GAAlB;QAEI,uCAAuC;QACvC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YACnC,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,KAAK;SACnB,CAAC,CAAC;IACP,CAAC;IAEM,yCAAY,GAAnB,UAAoB,EAAE;IAEtB,CAAC;IAEM,0CAAa,GAApB,UAAqB,EAAE;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,uCAAuC;QACvC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IAEM,yCAAY,GAAnB;QACI,kCAAkC;QAClC,mCAAmC;QACnC,0CAA0C;QAC1C,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAIhC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;IACpC,CAAC;IAED;;MAEE;IAEM,6CAAgB,GAAxB,UAAyB,KAAW;QAEhC,uIAAuI;QACvI,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW;QACnC,+HAA+H;QAC/H,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,6GAA6G;QAE7G,IAAI,QAAQ,GAAG,EAAC,OAAO,EAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAC,GAAG,GAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,SAAS,EAAC,KAAK,EAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAC,KAAK,CAAC,GAAG,EAAC,CAAC;QAG9K,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC;IAC9D,CAAC;IAGD,2EAA2E;IAC3E,sBAAsB;IAEf,uCAAU,GAAjB,UAAkB,KAAW,EAAE,gBAAgB;QAE3C,IAAI,QAAQ,GAAG,gBAAgB,CAAC;QAEhC,+DAA+D;QAC/D,IAAI,KAAK,GAAG,SAAS,CAAC;QAGtB,mDAAmD;QAEnD;;;UAGE;QACF,mDAAmD;QAEnD,wCAAwC;QACvC,IAAI,IAAI,GAAG,oCAAM,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,4FAA4F;QAE1I,sCAAsC;QACtC,8JAA8J;QAG9J,mDAAmD;QAGnD,kGAAkG;QAClG,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,qCAAqC;QAI1F,IAAI,UAAU,GAAG;YACf,WAAW,EAAE,KAAK;YAClB,OAAO,EAAE,UAAU;YACnB,MAAM,EAAC,IAAI,CAAC,QAAQ;YACpB,MAAM,EAAC,WAAW;YAClB,QAAQ,EAAE,QAAQ,CAAC,GAAG;SACvB;QAED,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU;YAC1D,8BAA8B;YAC9B,4BAA4B;YAC5B,oEAAoE;YACpE;;;cAGE;YACF,oEAAoE;QACtE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,4CAAe,GAAtB,UAAuB,KAAK;QAExB,IAAI,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;QACnB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,EAAC,aAAa,EAAC,cAAc,EAAC,SAAS,EAAC,UAAU,EAAC,CAAC,CAAC,IAAI,CAAC,UAAC,gBAAgB;QAC9G,CAAC,CAAC,CAAC;IACP,CAAC;IACM,6CAAgB,GAAvB,UAAwB,KAAK,EAAE,GAAG,EAAE,OAAO;QAEvC,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,UAAU,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QAC9B,IAAI,EAAE,GAAG,OAAO,CAAC;QACjB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,EAAC,aAAa,EAAC,cAAc,EAAC,SAAS,EAAC,UAAU,EAAC,CAAC,CAAC,IAAI,CAAC,UAAC,gBAAgB;QAC9G,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0CAAa,GAApB,UAAqB,OAAO;QACxB,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;QAChE,IAAI,EAAE,GAAG,OAAO,CAAC;QACjB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,cAAc;YACzD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACxC,CAAC;IAGM,iCAAI,GAAX;QAAA,iBA+BC;QA7BG,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxC,6BAA6B;QAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC1B,KAAK,EAAE;gBACH,cAAc;gBACd,MAAM,EAAE,QAAQ;aACnB;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAEX,oEAAoE;YACpE;;;cAGE;YACF,oEAAoE;YACpE,oCAAoC;YACpC,2BAA2B;YAC3B,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;YAE/B,kGAAkG;YAClG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;YAED,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACR,sBAAsB;YACtB,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qCAAQ,GAAhB,UAAiB,EAAU;QACvB,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QAEpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;gBACtC,UAAU,GAAG,CAAC,CAAC;YACnB,CAAC;QACL,CAAC;QAED,MAAM,CAAC,UAAU,CAAC;QAClB,YAAY;IAChB,CAAC;IAGD,2EAA2E;IAC3E,6CAA6C;IAE7C;;MAEE;IACM,sCAAS,GAAjB,UAAkB,KAAU;QACxB,mEAAmE;QACnE,0BAA0B;QAE1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,uBAAuB;QACvB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED;;MAEE;IACM,sCAAS,GAAjB,UAAkB,KAAY;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QAErC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED;;MAEE;IACM,sCAAS,GAAjB,UAAkB,KAAY;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,IAAI,iBAAiB,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAEpE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,cAAc,EAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,yDAAyD;IACtI,CAAC;IAED;;MAEE;IAEM,sCAAS,GAAjB,UAAkB,KAAK;QAEnB,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;QAEnB,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,cAAc,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,yDAAyD;QAChH,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACpC,CAAC;IAGD;;MAEE;IACF,wCAAW,GAAX;QAEI,sBAAsB;QACtB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QACzB,6BAA6B;QAC7B,uDAAuD;IAC3D,CAAC;IACL,yBAAC;AAAD,CAAC;AA/TY,kBAAkB;IAD9B,iEAAU,EAAE;yDAkBwB,iFAAW,oBAAX,iFAAW;GAjBnC,kBAAkB,CA+T9B;AA/T8B;;;;;;;;;AChC/B;AACA;;;AAGA;AACA,mCAAoC,8BAA8B,8BAA8B,GAAG;;AAEnG;;;AAGA;AACA,2C;;;;;;;ACXA,2JAA2J,2BAA2B,GAAG,6BAA6B,oEAAoE,6BAA6B,4MAA4M,2BAA2B,2V;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5e;AAM3B;AAE0B;AAC6E;AAE5F;AACe;AACU;AAE1B;AAK4B;AACK;AAEe;AAErC;AAW5C,IAAa,eAAe;IAsB1B,yBACE,KAAqB,EACb,aAA4B,EAC5B,eAA+B,EAC/B,gBAAkC,EAClC,mBAAwC,EACxC,2BAAyD,EACzD,MAAc,EACd,GAAsB;QANtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gCAA2B,GAA3B,2BAA2B,CAA8B;QACzD,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAmB;QApBhC,cAAS,GAAU,EAAE,CAAC;QAEtB,oBAAe,GAAQ,IAAI,CAAC;QAEpB,aAAQ,GAAY,KAAK,CAAC;QAC1B,WAAM,GAAY,KAAK,CAAC;QAKzB,mBAAc,GAAY,IAAI,CAAC;QAYpC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,mCAAmC;QAEnC,kCAAkC;QAClC,kBAAkB;QAClB,gBAAgB;QAChB,mBAAmB;QACnB,kBAAkB;QAClB,mBAAmB;QAEnB,MAAM,CAAC,MAAM;aAEZ,OAAO,CAAC,UAAC,KAAK;YAEb,OAAM,CAAC,EAAE,CAAC,QAAQ,EAAC,CAAC;gBAClB,2BAA2B;gBAC3B,UAAU,CAAC,cAAW,CAAC,EAAE,IAAI,CAAC,CAAC;YACjC,CAAC;YAED,uCAAuC;YACvC,uBAAuB;YAEvB,EAAE,EAAC,KAAK,YAAY,sEAAa,CAAC,EAAC;gBACjC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,OAAO,IAAI,QAAQ,CAAC,EAAC;oBACvB,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzC,2BAA2B;oBAE3B,EAAE,EAAC,EAAE,CAAC,mBAAoB,CAAC,EAAC;wBAC1B,EAAE,EAAC,EAAE,CAAC,MAAO,CAAC,EAAC;4BACb,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;4BAC5B,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;wBAC5B,CAAC;wBACD,IAAI,EAAC;4BACH,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;wBAC5B,CAAC;oBAEH,CAAC;oBACD,+BAA+B;oBAC/B,EAAE;oBACF,wCAAwC;oBACxC,sCAAsC;oBACtC,EAAE;oBACF,EAAE;oBACF,IAAI;oBAEJ,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEnB,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAiB,GAAjB;QAAA,iBAkBC;QAjBC;;;UAGE;QACF,EAAE,EAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAC;YAC9C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,SAAS;gBAE3F,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;gBAC5D,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE,CAAC;QAClD,CAAC;IACH,CAAC;IAED,yCAAe,GAAf;QACE,+DAA+D;QAC/D,+DAA+D;QAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAgB;QAE3B,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QAErC,0BAA0B;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,CAAC,CAAC,WAAW,CAAC;aACb,YAAY,CAAC;YACZ,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,qCAAqC;aAC7C;YACD,kBAAkB;YAClB,WAAW,EAAC,YAAY;YACxB,MAAM,EAAE,MAAM;YACd,iFAAiF;YACjF,UAAU,EAAC,KAAK;YAChB,YAAY,EAAE,KAAK;YACnB,YAAY,EAAC,UAAU;YACvB,OAAO,EAAC,UAAU;YAClB,OAAO,EAAC,UAAU;YAClB,mBAAmB;YACnB,EAAE;YACF,MAAM;YACN,mEAAmE;YACnE,qBAAqB;YACrB,kBAAkB;YAClB,MAAM;YACN,KAAK;YACL,qDAAqD;YACrD,sBAAsB;YACtB,mBAAmB;YACnB,SAAS;YACT,mEAAmE;YACnE,qBAAqB;YACrB,kBAAkB;YAClB,OAAO;YACP,uGAAuG;YACvG,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,UAAS,IAAI,EAAE,OAAO,EAAE,IAAI;gBACpC,gDAAgD;gBAChD,6BAA6B;gBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;oBACzB,sCAAsC;oBACtC,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,YAAY,EAAE,WAAW,6DAA4D,CAAC,CAAC;oBACnH,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC;gBAC/C,CAAC;gBAGD,iDAAiD;gBACjD,IAAI,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAC,cAAc,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB;gBAClH,oFAAoF;gBACpF,4BAA4B;gBAC5B,+BAA+B;gBAC/B,iDAAiD;gBAGjD,mDAAmD;gBAEnD,wCAAwC;gBACxC,IAAI,IAAI,GAAG,oCAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,4FAA4F;gBAC3H,mDAAmD;gBAEnD,uBAAuB;gBACvB,qBAAqB;gBACrB;;;;;;;;;;;;;;;;;kBAiBE;gBAEF,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAKzB,aAAa;gBACb,uEAAuE;gBAEvE,yHAAyH;gBAGzH,uBAAuB;gBAEvB,6DAA6D;gBAE7D,oBAAoB;gBACpB,MAAM;YAER,CAAC;YACD,SAAS,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,UAAU;gBAG1C,IAAI,QAAQ,GAAG,oCAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;gBACzC,IAAI,MAAM,GAAG,oCAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAErC,mDAAI,CAAC;oBACH,KAAK,EAAE,4CAA4C;oBACnD,+DAA+D;oBAC/D,IAAI,EAAE,SAAS;oBACf,gBAAgB,EAAE,IAAI;oBACtB,kBAAkB,EAAE,SAAS;oBAC7B,iBAAiB,EAAE,MAAM;oBACzB,iBAAiB,EAAE,gBAAgB;oBACnC,gBAAgB,EAAE,UAAU;iBAC7B,CAAC,CAAC,IAAI,CAAC;oBACN,iDAAiD;oBACjD,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;gBACvE,CAAC,EAAE,UAAS,OAAO;oBACjB,8DAA8D;oBAC9D,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACzB,UAAU,EAAE,CAAC;oBACf,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YACD,WAAW,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,UAAU;gBAE5C,IAAI,QAAQ,GAAG,oCAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;gBACzC,IAAI,MAAM,GAAG,oCAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAErC,mDAAI,CAAC;oBACH,KAAK,EAAE,6CAA6C;oBACpD,+DAA+D;oBAC/D,IAAI,EAAE,SAAS;oBACf,gBAAgB,EAAE,IAAI;oBACtB,kBAAkB,EAAE,SAAS;oBAC7B,iBAAiB,EAAE,MAAM;oBACzB,iBAAiB,EAAE,eAAe;oBAClC,gBAAgB,EAAE,UAAU;iBAC7B,CAAC,CAAC,IAAI,CAAC;oBACN,iDAAiD;oBAC/C,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzE,CAAC,EAAE,UAAS,OAAO;oBACjB,8DAA8D;oBAC9D,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACzB,UAAU,EAAE,CAAC;oBACf,CAAC;gBACH,CAAC,CAAC,CAAC;gBAGH,oDAAoD;gBACpD,KAAK;YACP,CAAC;YACD,UAAU,EAAE,UAAS,QAAQ,EAAC,KAAK,EAAC,IAAI;gBACtC,6EAA6E;gBAC7E,wFAAwF;gBACxF,+CAA+C;gBAE/C,EAAE,CAAC,iBAAiB,GAAG,QAAQ,CAAC;gBAChC,EAAE,CAAC,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACrD,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAEjC,SAAS;gBACT,0DAA0D;gBAC1D,oEAAoE;gBACpE,qBAAqB;gBACrB,4BAA4B;gBAC5B,mCAAmC;gBACnC,+BAA+B;gBAC/B,wCAAwC;gBACxC,iCAAiC;gBACjC,uBAAuB;gBACvB,mEAAmE;gBACnE,4IAA4I;gBAC5I,QAAQ;gBACR,EAAE;gBACF,oDAAoD;gBACpD,uBAAuB;YAIzB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAGD,iDAAiD;IACjD,8CAAoB,GAApB,UAAqB,mBAAmB,EAAC,iBAAiB,EAAE,eAAe,EAAE,MAAM;QACjF,uCAAuC;QACvC,qCAAqC;QAIrC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,YAAY,GAAG,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,WAAW,GAAG,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,IAAI,UAAU,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAGxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAEpD,IAAI,IAAI,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACxC,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAG,GAAG,CAAC,EAAC;gBACzC,IAAI,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACrF,yBAAyB;gBACzB,4CAA4C;YAC9C,CAAC;YACD,IAAI,KAAK,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACvC,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAG,GAAG,CAAC,EAAC;gBACvC,KAAK,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAClF,0CAA0C;YAC5C,CAAC;YACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,iCAAiC;gBACjC,kDAAkD;gBAChD,EAAE,EAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAC;oBAC1C,gCAAgC;oBAChC,yBAAyB;oBACzB,sCAAsC;oBACtC,8CAA8C;oBAC9C,0BAA0B;oBAC1B,oCAAoC;oBACpC,iCAAiC;oBAEjC,IAAI,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClD,IAAI,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnD,IAAI,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAGjD,EAAE,EAAC,CAAC,YAAY,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,UAAU,IAAI,aAAa,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,EAAC;wBACpI,OAAO,GAAG,IAAI,CAAC;wBAEf,yBAAyB;wBACzB,8BAA8B;wBAC9B,iCAAiC;wBACjC,8CAA8C;oBAChD,CAAC;oBACD,IAAI,EAAC;wBACH,2BAA2B;wBAC3B,qDAAqD;wBACrD,wBAAwB;wBACxB,mDAAmD;wBACnD,wBAAwB;wBACxB,+CAA+C;wBAC/C,wBAAwB;wBACxB,gDAAgD;wBAChD,wBAAwB;wBACxB,8CAA8C;wBAC9C,wBAAwB;wBACxB,EAAE,EAAC,CAAC,YAAY,IAAI,gBAAgB,CAAC,IAAI,CAAC,WAAW,IAAI,eAAe,CAAC,CAAC,EAAC;4BACzE,EAAE,EAAC,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,UAAU,IAAI,aAAa,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,EAAC;gCAC7F,OAAO,GAAG,IAAI,CAAC;4BACjB,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACL,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;QACZ,kBAAkB;IACpB,CAAC;IAED,yCAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,8CAAoB,GAApB,UAAqB,UAAU;QAC7B,gDAAgD;QAChD,+BAA+B;QAE/B,EAAE,EAAC,UAAU,IAAI,IAAI,CAAC,EAAC;YAErB,wBAAwB;YACxB,qCAAqC;YACrC,2BAA2B;YAC3B,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,QAAQ,GAAG,EAAE,GAAE,UAAU,CAAC,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC;YACjE,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,kBAAkB,CAAC;YAC3D,mDAAI,CAAC;gBACH,KAAK,EAAE,mCAAmC;gBAC1C,IAAI,EAAE,8CAA8C,GAAE,KAAK,GAAG,oBAAoB,GAAG,QAAQ,GAAG,IAAI;gBACpG,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,SAAS;gBAC7B,iBAAiB,EAAE,MAAM;gBACzB,iBAAiB,EAAE,YAAY;gBAC/B,gBAAgB,EAAE,eAAe;gBACjC,kBAAkB,EAAE,iBAAiB;gBACrC,iBAAiB,EAAE,gBAAgB;aAEpC,CAAC,CAAC,IAAI,CAAC;gBACN,mDAAI,CACF,eAAe,EACf,mCAAmC,EACnC,SAAS,CACV;oBACD,IAAE,CAAC,UAAU,CAAC,IAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;YAChD,CAAC,EAAE,UAAU,OAAO;gBAClB,sCAAsC;gBACtC,uBAAuB;gBACvB,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACzB,mDAAI,CACF,WAAW,EACX,yBAAyB,EACzB,OAAO,CACR;gBACH,CAAC;YACH,CAAC,CAAC;QAEJ,CAAC;IACH,CAAC;IAED,oCAAU,GAAV,UAAW,IAAI,EAAE,gBAAgB;QAE/B,IAAI,QAAQ,GAAG,gBAAgB,CAAC;QAEhC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;QAE7D,6BAA6B;QAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QAAvB,iBA2BC;QAzBC,iCAAiC;QACjC,2CAA2C;QAC3C,yBAAyB;QACzB,wCAAwC;QACxC,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QAGrC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,mBAAS;YACxD,4BAA4B;YAC5B,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;YAEzB,IAAI,UAAU,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAChC,UAAU,CAAC,YAAY,CAAE,cAAc,CAAE,CAAC;YAE1C,2CAA2C;YAC3C,sBAAsB;YACtB,EAAE,EAAC,KAAI,CAAC,mBAAmB,CAAC,EAAC;gBAE3B,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACnD,CAAC;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAGtC,CAAC;IAED,sCAAY,GAAZ;QAEE,6BAA6B;QAC7B,wEAAwE;QACxE,uBAAuB;QACvB,kCAAkC;IAEpC,CAAC;IAGD,sCAAY,GAAZ,UAAa,EAAE;QACb,IAAI,eAAe,GAAG,IAAI,CAAC;QAE3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAE1C,EAAE,EAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC;gBAC5B,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjC,oCAAoC;YACtC,CAAC;QAEL,CAAC;QACD,MAAM,CAAC,eAAe,CAAC;IACzB,CAAC;IAED,wCAAc,GAAd;QAAA,iBAQC;QAPC,IAAI,CAAC,eAAe;aACnB,WAAW,EAAE;aACb,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,GAAG,EAAE,KAAI,CAAC,QAAQ,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAY,GAAZ,UAAa,GAAG,EAAE,QAAQ;QACxB,gDAAgD;QAChD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAGD,kCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,MAAe;YAC7E,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC1B,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,kCAAkC;QAElC,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,4BAA4B;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,mBAAS;YAExD,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAK,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC;IAEpC,CAAC;IAED,+CAAqB,GAArB,UAAsB,QAAQ;QAC5B,8BAA8B;QAC9B,EAAE,EAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,EAAC;YAC7B,IAAI,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;gBACvC,EAAE,EAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,EAAC;oBACtB,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBACrC,8CAA8C;gBAChD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,qCAAW,GAAX;QACE,qDAAqD;QACrD,qCAAqC;QACrC,qDAAqD;QACrD,6BAA6B;QAC7B,IAAI,SAAS,GAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,SAAS,CAAC;QACtD,2BAA2B;QAC3B,6DAA6D;QAC7D,2BAA2B;QAC3B,kDAAkD;QAClD,kBAAkB;QAElB,6BAA6B;QAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAEH,sBAAC;AAAD,CAAC;AA9jBY,eAAe;IAP3B,gEAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,SAAS,EAAC,CAAC,kFAAkB,EAAE,sFAAgB,CAAC;QAChD,oFAAsC;QACtC,mFAAqC;KACtC,CAAC;yDAyBS,uEAAc,oBAAd,uEAAc,sDACE,sEAAa,oBAAb,sEAAa,sDACX,+EAAc,oBAAd,+EAAc,sDACb,sFAAgB,oBAAhB,sFAAgB,sDACZ,kFAAkB,oBAAlB,kFAAkB,sDACV,qGAA2B,oBAA3B,qGAA2B,sDACjD,+DAAM,oBAAN,+DAAM,sDACT,gEAAiB,oBAAjB,gEAAiB;GA9BrB,eAAe,CA8jB3B;AA9jB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCe;AACa;AAKK;AAE9B;AACE;AAGjC,IAAa,aAAa;IAKzB,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHtB,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACzD,cAAS,GAAG,8EAAW,CAAC,MAAM,GAAE,SAAS,CAAC,CAAE,iBAAiB;IAIxE,CAAC;IAGF,oBAAC;AAAD,CAAC;AAVY,aAAa;IADzB,iEAAU,EAAE;yDAMc,2DAAI,oBAAJ,2DAAI;GALlB,aAAa,CAUzB;AAVyB;;;;;;;;;ACZ1B,4aAA4a,0EAA0E,eAAe,SAAS,gBAAgB,4WAA4W,yBAAyB,IAAI,2BAA2B,uMAAuM,8BAA8B,iMAAiM,sBAAsB,iMAAiM,wBAAwB,gMAAgM,sCAAsC,qMAAqM,4BAA4B,yMAAyM,gCAAgC,gZAAgZ,oS;;;;;;;;;;;;;;;;;;;;;;;;;ACAxiF;AAItD;AAIK;AAElB;AACX;AAQjC,IAAa,iBAAiB;IAqB5B,2BACU,YAA0B,EAAS,mBAAwC;QAA3E,iBAAY,GAAZ,YAAY,CAAc;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAjB3E,gBAAW,GAAG,IAAI,2DAAY,EAAE,CAAC;QAI3C,yBAAyB;QACzB,qCAAqC;QAE9B,eAAU,GAAG,IAAI,CAAC;QAMlB,qBAAgB,GAAQ,IAAI,CAAC;IAOpC,CAAC;IAED;MACE;IACF,oCAAQ,GAAR;QACE,qCAAqC;QACrC,cAAc;QACd,wCAAwC;QACxC,0BAA0B;QAC1B,qFAAqF;QACrF,EAAE;QACF,kCAAkC;QAClC,MAAM;QACN,uCAAuC;QACvC,iCAAiC;IACnC,CAAC;IAED;MACE;IACF,uCAAW,GAAX,UAAY,OAAO;QACjB,qDAAqD;QACrD,sCAAsC;QACtC,2BAA2B;QAE3B,oCAAoC;QACpC,EAAE,EAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,EAAC;YACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC5C,gDAAgD;YAChD,IAAI,eAAe,GAAG,oCAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC;YAC3D,gCAAgC;YAChC,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC9D,CAAC;QAGD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAsB;IACxE,CAAC;IAGM,0CAAc,GAArB;QACE,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAEM,4CAAgB,GAAvB,UAAwB,eAAe;QACrC,EAAE,EAAC,eAAe,IAAI,IAAI,IAAI,eAAe,IAAI,SAAS,CAAC,EAAC;YAC1D,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAC1C,CAAC;IACH,CAAC;IACD;;MAEE;IACK,sCAAU,GAAjB;QACE,4CAA4C;QAC5C,uCAAuC;QAFzC,iBAkBC;QAdC,kCAAkC;QAClC,gCAAgC;QAEhC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC;aACrE,IAAI,CAAC,kBAAQ;YACZ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAGhC,yCAAyC;YACzC,6BAA6B;YAC7B,4BAA4B;YAC5B,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAE/C,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;IACtC,CAAC;IAGM,yCAAa,GAApB;QACE,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAI,CAAC;YACH,KAAK,EAAE,6CAA6C;YACpD,+DAA+D;YAC/D,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;YAClC,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC,IAAI,CAAC;YACN,iEAAiE;YACjE,0IAA0I;YAC1I,MAAM;YACN,OAAO,CAAC,GAAG,CAAC,6DAA6D,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzF,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrD,CAAC,EAAE,UAAS,OAAO;YACjB,qDAAqD;YACrD,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,KAAK,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAGD;;MAEE;IACK,oCAAQ,GAAf;QACE,qBAAqB;QACrB,kBAAkB;QAElB,mBAAmB;QACnB,4BAA4B;QAC5B,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC/C,CAAC;IAIH,wBAAC;AAAD,CAAC;AArIU;IAAR,4DAAK,EAAE;;+CAAW;AACV;IAAR,4DAAK,EAAE;;gDAAY;AACV;IAAT,6DAAM,EAAE;;sDAAkC;AAEX;IAA/B,gEAAS,CAAC,mBAAmB,CAAC;kDAAoB,yDAAU,oBAAV,yDAAU;4DAAC;AAPnD,iBAAiB;IAL7B,gEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kCAAkC;QAClC,qFAA8B;KAC/B,CAAC;yDAuBwB,0EAAY,oBAAZ,0EAAY,sDAA+B,kFAAkB,oBAAlB,kFAAkB;GAtB1E,iBAAiB,CAwI7B;AAxI6B;;;;;;;;;;;;;;;;;;;;;ACnBoB;AAelD,IAAa,eAAe;IAE1B;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAEH,sBAAC;AAAD,CAAC;AAPY,eAAe;IAb3B,gEAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAC,qVASR;KACF,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;ACf5B,mYAAmY,iBAAiB,4EAA4E,gBAAgB,4IAA4I,qBAAqB,yLAAyL,qFAAqF,kCAAkC,4NAA4N,8BAA8B,kCAAkC,kCAAkC,uGAAuG,kCAAkC,uGAAuG,kCAAkC,uGAAuG,kCAAkC,uGAAuG,kCAAkC,sJAAsJ,+BAA+B,mMAAmM,8BAA8B,uOAAuO,0BAA0B,0KAA0K,YAAY,GAAG,cAAc,kFAAkF,8BAA8B,4MAA4M,8BAA8B,kPAAkP,iCAAiC,iLAAiL,6BAA6B,8MAA8M,qCAAqC,8MAA8M,qCAAqC,gQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh3H;AACT;AACgB;AAEY;AACZ;AACK;AAGnC;AAEqC;AAGgB;AACI;AACR;AAY5E,IAAa,mBAAmB;IAW9B,6BACU,MAAc,EACd,iBAAoC,EACpC,cAA8B,EAC9B,YAA0B,EAC1B,gBAAkC,EAClC,WAAwB,EACxB,kBAA6C,EAC7C,gBAAyC,EACzC,oBAAiD;QARjD,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,yBAAoB,GAApB,oBAAoB,CAA6B;QAhBnD,YAAO,GAAa,EAAE,CAAC;IAmB/B,CAAC;IAED,6CAAe,GAAf;QACE,MAAM,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;QAEjC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,mBAAmB,CAAC,CAAC,UAAU,CAAC;gBACrC,MAAM,EAAE,MAAM;aACf,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAEtC,CAAC;IAED,wDAA0B,GAA1B;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAO;gBAE5E,qDAAqD;gBACrD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAA4B,GAA5B;QAAA,iBAWC;QAVC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,UAAC,SAAS;YACzD,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,SAAS;gBACpF,0BAA0B;gBAC1B,uDAAuD;gBACvD,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAwB,GAAxB;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;YACtC,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;gBACpE,sBAAsB;gBACtB,mDAAmD;gBACnD,2BAA2B;YAC7B,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,IAAI,kBAAkB,GAAG,KAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YAEhE,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;MAEE;IACM,wDAA0B,GAAlC,UAAmC,KAAK;QAEtC,IAAI,kBAAkB,GAAG,EAAE,CAAC;QAC5B,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC;QAEzB,KAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YAChC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,YAAY,CAAC,EAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,eAAe,GAAG,KAAK,CAAC;YAC1B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,kBAAkB,GAAG,KAAK,CAAC;QAE3B,iCAAiC;QACjC,EAAE,EAAC,eAAe,GAAG,CAAC,CAAC,CAAC,EAAC;YACvB,kBAAkB,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,CAAC,kBAAkB,CAAC;IAE5B,CAAC;IAED,yCAAW,GAAX,UAAY,SAAiB;QAC3B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAGD,wCAAU,GAAV;QAEE,6BAA6B;QAC7B,wCAAwC;QACxC,kBAAkB;QAClB,IAAI,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,0BAA0B;QAC1B,wBAAwB;QACxB,uCAAuC;QACvC,4BAA4B;QAC5B,EAAE,EAAC,OAAO,IAAE,SAAS,IAAI,OAAO,IAAI,IAAI,CAAC,EAAC;YAExC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,yDAAyD;YACzD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACxB,CAAC;QAED,sCAAsC;QACtC,cAAc;QACd,iCAAiC;QACjC,6CAA6C;QAC7C,KAAK;IACP,CAAC;IAEM,oDAAsB,GAA7B;QACE,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC1C,+BAA+B;YAC/B,qBAAqB;YACrB,qBAAqB;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAoB,GAApB;QACE,sDAAsD;QACtD,MAAM,CAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,6CAAe,GAAf;QAEE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,sCAAQ,GAAf;QAEE,IAAI,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,4BAA4B;QAC5B,EAAE,EAAC,OAAO,IAAE,SAAS,IAAI,OAAO,IAAI,IAAI,CAAC,EAAC;YAExC,oBAAoB;YACpB,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC1B,sCAAsC;YACtC,uCAAuC;YAEvC,MAAM,CAAC,KAAK,KAAK,QAAQ,CAAC;QAE5B,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEM,sCAAQ,GAAf;QAGE,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,mBAAmB;QACnB,yCAAyC;QACzC,uBAAuB;QACvB,UAAU;IAGZ,CAAC;IAEH,0BAAC;AAAD,CAAC;AAjMY,mBAAmB;IAL/B,gEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+FAAwC;KACzC,CAAC;yDAckB,+DAAM,oBAAN,+DAAM,sDACK,8EAAiB,oBAAjB,8EAAiB,sDACpB,+EAAc,oBAAd,+EAAc,sDAChB,0EAAY,oBAAZ,0EAAY,sDACR,sFAAgB,oBAAhB,sFAAgB,sDACrB,iFAAW,oBAAX,iFAAW,sDACJ,iGAAyB,oBAAzB,iGAAyB,sDAC3B,8FAAuB,oBAAvB,8FAAuB,sDACnB,qGAA2B,oBAA3B,qGAA2B;GApBhD,mBAAmB,CAiM/B;AAjM+B;;;;;;;;;;;;;;;;;;;;;;AC5BW;AACI;AAI/C,IAAa,iBAAiB;IAE5B,2BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAE9B,CAAC;IAEH,wBAAC;AAAD,CAAC;AANY,iBAAiB;IAD7B,iEAAU,EAAE;yDAGe,2DAAI,oBAAJ,2DAAI;GAFnB,iBAAiB,CAM7B;AAN6B;;;;;;;;;;;;;;;;;;;;;;;ACLY;AACO;AAEe;AAQhE,IAAa,kBAAkB;IAM7B,4BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAJjD,6CAAgB,GAAhB;QACE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC1C,0EAAY,EAAE,CAAC;IACjB,CAAC;IAGD,mCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,0BAA0B;QACzB,4BAA4B;IAC/B,CAAC;IAEH,yBAAC;AAAD,CAAC;AAdY,kBAAkB;IAJ9B,gEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,4FAAsC;KACvC,CAAC;yDAOiC,iFAAW,oBAAX,iFAAW;GANjC,kBAAkB,CAc9B;AAd8B;;;;;;;;;ACX/B,i0B;;;;;;;;ACAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,uBAAuB;CAChC,CAAC;;;;;;;;;;;;;;ACR6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qEAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;ACVpqE;;;;;;;;;;;;;;;ACtPA,e","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js??ref--4-1!../../node_modules/postcss-loader/index.js??postcss!@angular/material/prebuilt-themes/indigo-pink.css\"), \"\");\n\n// module\nexports.push([module.id, \"\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- Wrapper-->\\n<!-- <body *ngIf=\\\"estaLogueado()\\\" > -->\\n<!-- <div *ngIf=\\\"estaLogueado()\\\" id=\\\"wrapper\\\"> -->\\n<style>.barraDelCostado{\\n    margin: 0 0 0 0px !important;\\n    /*background-color: black;*/\\n}</style>\\n<div id=\\\"wrapper\\\">\\n\\n  <!-- Left navigation bar -->\\n  <navigation *ngIf=\\\"estaLogueado()\\\"></navigation>\\n\\n  <!-- Main page wrapper -->\\n  <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\" [ngClass]=\\\"{'barraDelCostado': !estaLogueado()}\\\">\\n\\n    <!-- Top navigation -->\\n    <topnavbar *ngIf=\\\"estaLogueado()\\\"></topnavbar>\\n\\n    <!-- Main view/routes wrapper-->\\n    <router-outlet></router-outlet>\\n\\n    <!-- Footer -->\\n    <footer *ngIf=\\\"estaLogueado()\\\"></footer>\\n\\n  </div>\\n  <!-- End page wrapper-->\\n\\n</div>\\n<!-- End wrapper-->\\n\\n<!--\\n<body *ngIf=\\\"!estaLogueado()\\\" class=\\\"gray-bg\\\">\\n   <router-outlet></router-outlet>\\n</body> -->\\n\\n<!-- <div *ngIf=\\\"!estaLogueado()\\\" class=\\\"gray-bg\\\">\\n   <router-outlet></router-outlet>\\n</div> -->\\n\\n<div class=\\\"loading-overlay\\\" *ngIf=\\\"loading\\\">\\n    <!-- show something fancy here, here with Angular 2 Material's loading bar or circle -->\\n    <md-progress-bar mode=\\\"indeterminate\\\"></md-progress-bar>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { FooterComponent } from './ui/footer.component';\nimport { detectBody } from './app.helpers';\n\n\nimport { AuthService } from './authentication/auth.service';\n\ndeclare var jQuery:any;\ndeclare var $: any;\n\nimport {\n  Router,\n  // import as RouterEvent to avoid confusion with the DOM Event\n  Event as RouterEvent,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError\n} from '@angular/router'\n\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\tconstructor(private auth: AuthService, private router: Router) {\n\t\trouter.events.subscribe((event: RouterEvent) => {\n      this.navigationInterceptor(event)\n    })\n\t}\n\n\t// Shows and hides the loading spinner during RouterEvent changes\nnavigationInterceptor(event: RouterEvent): void {\n\tif (event instanceof NavigationStart) {\n\n\t\t\tthis.loading = true\n\n\t}\n\tif (event instanceof NavigationEnd) {\n\t\tthis.loading = false\n\t}\n\n\t// Set loading state to false in both of the below events to hide the spinner in case a request fails\n\tif (event instanceof NavigationCancel) {\n\t\tthis.loading = false\n\t}\n\tif (event instanceof NavigationError) {\n\t\tthis.loading = false\n\t}\n}\n\n\tprivate logueadoCache: any = false;\n\n\t// Sets initial value to true to show loading spinner on first load\n loading = true\n\n\tpublic ngOnInit():any {\n\t\tdetectBody();\n\t\tthis.logueado();\n\t}\n\n\tpublic onResize(){\n\t\tdetectBody();\n\t}\n\n\testaLogueado(){\n\t\t//console.log('localStorage');\n\t\t//console.log(localStorage);\n\t\t//console.log('estaLogueado');\n\t\tlet token = localStorage.getItem('user');\n\t\treturn token;\n\t\t// return this.logueadoCache;\n\t}\n\n\tpublic logueado(){\n\t\t//console.log(\"#################################################\");\n\t\t//console.log(\"logueado method\");\n\n\t\tthis.auth\n\t\t.logIn()\n\t\t.then(() => {\n\t\t\t//console.log('TODO OK');\n\t\t\t//this.router.navigateByUrl('/');\n\t\t\tthis.logueadoCache = true;\n\t\t})\n\t\t.catch(() => {\n\t\t\t//console.log('No logueado');\n            localStorage.clear();\n\t\t\tthis.logueadoCache = false;\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/app.component.ts","/*\r\n * Inspinia js helpers:\r\n *\r\n * correctHeight() - fix the height of main wrapper\r\n * detectBody() - detect windows size\r\n * smoothlyMenu() - add smooth fade in/out on navigation show/ide\r\n *\r\n */\r\n\r\ndeclare var jQuery:any;\r\n\r\nexport function correctHeight() {\r\n\r\n  var pageWrapper = jQuery('#page-wrapper');\r\n  var navbarHeight = jQuery('nav.navbar-default').height();\r\n  var wrapperHeight = pageWrapper.height();\r\n\r\n  if (navbarHeight > wrapperHeight) {\r\n    pageWrapper.css(\"min-height\", navbarHeight + \"px\");\r\n  }\r\n\r\n  if (navbarHeight <= wrapperHeight) {\r\n    if (navbarHeight < jQuery(window).height()) {\r\n      pageWrapper.css(\"min-height\", jQuery(window).height() + \"px\");\r\n    } else {\r\n      pageWrapper.css(\"min-height\", navbarHeight + \"px\");\r\n    }\r\n  }\r\n\r\n  if (jQuery('body').hasClass('fixed-nav')) {\r\n    if (navbarHeight > wrapperHeight) {\r\n      pageWrapper.css(\"min-height\", navbarHeight + \"px\");\r\n    } else {\r\n      pageWrapper.css(\"min-height\", jQuery(window).height() - 60 + \"px\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function detectBody() {\r\n  if (jQuery(document).width() < 769) {\r\n    jQuery('body').addClass('body-small')\r\n  } else {\r\n    jQuery('body').removeClass('body-small')\r\n  }\r\n}\r\n\r\nexport function smoothlyMenu() {\r\n  if (!jQuery('body').hasClass('mini-navbar') || jQuery('body').hasClass('body-small')) {\r\n    // Hide menu in order to smoothly turn on when maximize menu\r\n    jQuery('#side-menu').hide();\r\n    // For smoothly turn on menu\r\n    setTimeout(\r\n      function () {\r\n        jQuery('#side-menu').fadeIn(400);\r\n      }, 200);\r\n  } else if (jQuery('body').hasClass('fixed-sidebar')) {\r\n    jQuery('#side-menu').hide();\r\n    setTimeout(\r\n      function () {\r\n        jQuery('#side-menu').fadeIn(400);\r\n      }, 100);\r\n  } else {\r\n    // Remove all inline style from jquery fadeIn function to reset menu state\r\n    jQuery('#side-menu').removeAttr('style');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/app.helpers.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { DataTableModule } from \"angular2-datatable\";\r\n\r\n\r\nimport 'hammerjs';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MdFormFieldModule} from '@angular/material';\r\n\r\nimport {\r\n  MdAutocompleteModule,\r\n  MdButtonModule,\r\n  MdButtonToggleModule,\r\n  MdCardModule,\r\n  MdCheckboxModule,\r\n  MdChipsModule,\r\n  MdCoreModule,\r\n  MdDatepickerModule,\r\n  MdDialogModule,\r\n  MdExpansionModule,\r\n  MdGridListModule,\r\n  MdIconModule,\r\n  MdInputModule,\r\n  MdListModule,\r\n  MdMenuModule,\r\n  MdNativeDateModule,\r\n  MdPaginatorModule,\r\n  MdProgressBarModule,\r\n  MdProgressSpinnerModule,\r\n  MdRadioModule,\r\n  MdRippleModule,\r\n  MdSelectModule,\r\n  MdSidenavModule,\r\n  MdSliderModule,\r\n  MdSlideToggleModule,\r\n  MdSnackBarModule,\r\n  MdSortModule,\r\n  MdTableModule,\r\n  MdTabsModule,\r\n  MdToolbarModule,\r\n  MdTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\n// Para usar cualquier modulo de ngx-bootstrap,\r\n// primero hay que importar el modulo, y luego\r\n// agregarlo al imports de @NgModule.\r\n// http://valor-software.com/ngx-bootstrap/\r\n\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport {MomentModule} from 'angular2-moment';\r\n\r\nimport { Select2Module } from 'ng2-select2';\r\nimport 'moment/locale/es';\r\n\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\n\r\nimport { DashboardService } from './dashboard/dashboard.service';\r\nimport { TurnosService } from './turnos/turnos.service';\r\nimport { MedicosService } from './medico/medicos.service';\r\nimport { NavigationService } from './ui/navigation/navigation.service';\r\nimport { PacientesService } from './pacientes/pacientes.service';\r\n\r\n\r\nimport { routing } from './app.routing';\r\nimport { FooterComponent } from './ui/footer.component';\r\nimport { NavigationComponent } from './ui/navigation/navigation.component';\r\nimport { TopnavbarComponent } from './ui/topnavbar/topnavbar.component';\r\nimport { TimeAgoPipe } from './time-ago.pipe';\r\nimport { TurnosComponent } from './turnos/turnos.component';\r\n\r\nimport { TurnoSocketService } from './turnos/turnos-socket.service';\r\n\r\nimport { PacientesComponent } from './pacientes/pacientes.component';\r\nimport { DataFilterPipe }   from './pacientes/pacientes-filter.pipe';\r\nimport { SolicitudesComponent } from './pedidos/solicitudes.component';\r\nimport { SolicitudesSocketService } from './pedidos/solicitudes-socket.service';\r\nimport { PacientesDelDiaComponent } from './pacientes-del-dia/pacientes-del-dia.component';\r\n\r\nimport { DataFilterPipe2 }   from './obras/obras-filter.pipe';\r\n\r\n\r\nimport {AsignarPacienteComponent} from './turnos/asignarPaciente/asignarPacienteTurno';\r\nimport {AgregarPacienteComponent} from './pacientes/agregarPaciente/agregarPaciente';\r\nimport {SelectModule} from 'ng2-select';\r\nimport { ObrasComponent } from './obras/obras.component';\r\n\r\nimport { ObrasService } from './obras/obras.service';\r\nimport { TurnosDelMedicoComponent } from './turnos-del-medico/turnos-del-medico.component';\r\nimport { ConfiguracionMedicoComponent } from './configuracion-medico/configuracion-medico.component';\r\nimport { ModalSemanaComponent } from './configuracion-medico/modal-semana/modal-semana.component';\r\nimport { EditarPacienteComponent } from './pacientes/editarPaciente/editarPaciente';\r\nimport { EditarObraComponent } from './obras/editarObra/editarObra';\r\nimport { TablaMedicosComponent } from './medico/tablaMedicos/tablaMedicos.component';\r\nimport { EditarMedicoComponent } from './medico/editarMedico/editarMedico';\r\n\r\n\r\nimport { AuthService } from './authentication/auth.service';\r\nimport { AuthGuard } from './authentication/auth.guard';\r\nimport { AdministrativoGuard } from './authentication/administrativo.guard';\r\nimport { MedicoGuard } from './authentication/medico.guard';\r\nimport { Feathers } from './authentication/feathers.service';\r\nimport { LoginComponent } from './authentication/login.component';\r\nimport { RegisterComponent } from './authentication/register.component';\r\nimport { TareasComponent } from './tareas/tareas.component';\r\nimport { VerTurnoComponent } from './turnos/verTurno/verTurno';\r\nimport { AgePipe } from './pacientes/edad.pipe';\r\n\r\nimport { AgregarMedicoComponent } from './medico/agregarMedico/agregarMedico';\r\n\r\nimport { MedicosCompartidosService } from './routerService/medicos.sistema';\r\nimport { PacientesCompartidosService } from './routerService/pacientes.sistema';\r\nimport { ObrasCompartidasService } from './routerService/obras.sistema';\r\n\r\nimport { TablaPacientesComponent } from './pacientes/tablaPacientes/tablaPacientes.component';\r\n\r\n\r\nimport { MyDatePickerModule } from 'mydatepicker';\r\n\r\nimport { AgregarObraComponent } from './obras/agregarObra/agregarObra';\r\nimport { TablaObrasComponent } from './obras/tablaObras/tablaObras.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    FooterComponent,\r\n    NavigationComponent,\r\n    TopnavbarComponent,\r\n    TimeAgoPipe,\r\n    TurnosComponent,\r\n    PacientesComponent,\r\n    DataFilterPipe,\r\n    DataFilterPipe2,\r\n    SolicitudesComponent,\r\n    PacientesDelDiaComponent,\r\n    AsignarPacienteComponent,\r\n    AgregarPacienteComponent,\r\n    ObrasComponent,\r\n    TurnosDelMedicoComponent,\r\n    EditarPacienteComponent,\r\n    EditarObraComponent,\r\n    TablaMedicosComponent,\r\n    EditarMedicoComponent,\r\n\r\n    LoginComponent,\r\n    RegisterComponent,\r\n\r\n    ConfiguracionMedicoComponent,\r\n    ModalSemanaComponent,\r\n    TareasComponent,\r\n    VerTurnoComponent,\r\n    AgePipe,\r\n    AgregarMedicoComponent,\r\n    TablaPacientesComponent,\r\n    AgregarObraComponent,\r\n    TablaObrasComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    DataTableModule,\r\n    MdButtonModule,\r\n    MdAutocompleteModule,\r\n    MdButtonToggleModule,\r\n    MdCardModule,\r\n    MdCheckboxModule,\r\n    MdChipsModule,\r\n    MdCoreModule,\r\n    MdDatepickerModule,\r\n    MdDialogModule,\r\n    MdExpansionModule,\r\n    MdGridListModule,\r\n    MdIconModule,\r\n    MdInputModule,\r\n    MdListModule,\r\n    MdMenuModule,\r\n    MdNativeDateModule,\r\n    MdPaginatorModule,\r\n    MdProgressBarModule,\r\n    MdProgressSpinnerModule,\r\n    MdRadioModule,\r\n    MdRippleModule,\r\n    MdSelectModule,\r\n    MdSidenavModule,\r\n    MdSliderModule,\r\n    MdSlideToggleModule,\r\n    MdSnackBarModule,\r\n    MdSortModule,\r\n    MdTableModule,\r\n    MdTabsModule,\r\n    MdToolbarModule,\r\n    MdTooltipModule,\r\n    BsDropdownModule.forRoot(),\r\n    MomentModule,\r\n    routing,\r\n    SelectModule,\r\n    Select2Module,\r\n    SimpleNotificationsModule.forRoot(),\r\n    MyDatePickerModule\r\n  ],\r\n  providers: [\r\n    DashboardService,\r\n    TurnosService,\r\n    PacientesService,\r\n    MedicosService,\r\n    NavigationService,\r\n    TurnoSocketService,\r\n    SolicitudesSocketService,\r\n    ObrasService,\r\n    Feathers,\r\n    AuthService,\r\n    AuthGuard,\r\n    AppComponent,\r\n    AdministrativoGuard,\r\n    MedicoGuard,\r\n    MedicosCompartidosService,\r\n    PacientesCompartidosService,\r\n    ObrasCompartidasService\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/app.module.ts","\nimport {ModuleWithProviders} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {TurnosComponent} from './turnos/turnos.component';\nimport {PacientesComponent} from './pacientes/pacientes.component';\nimport {ObrasComponent} from './obras/obras.component';\nimport {TurnosDelMedicoComponent} from './turnos-del-medico/turnos-del-medico.component'\n\nimport { AuthGuard } from './authentication/auth.guard';\nimport { AdministrativoGuard } from './authentication/administrativo.guard';\nimport { MedicoGuard } from './authentication/medico.guard';\n\n\nimport { LoginComponent }     from './authentication/login.component';\nimport { RegisterComponent } from './authentication/register.component';\n\nimport { ConfiguracionMedicoComponent } from './configuracion-medico/configuracion-medico.component';\n\nconst appRoutes: Routes =  [\n{\n\tpath:'',\n\tcomponent: DashboardComponent,\n    canActivate: [AuthGuard,AdministrativoGuard]\n},\n// {\n// \tpath:'turnos',\n// \tcomponent: TurnosComponent,\n//     canActivate: [AuthGuard]\n// },\n{\n\tpath:'turnos/:doctor/:idDoctor',\n\tcomponent: TurnosComponent,\n    canActivate: [AuthGuard]\n},\n{\n\tpath:'pacientes',\n\tcomponent: PacientesComponent,\n    canActivate: [AuthGuard]\n},\n{\n\tpath:'medico',\n\tcomponent: TurnosDelMedicoComponent,\n    canActivate: [AuthGuard,MedicoGuard]\n},\n{\n\tpath:'configuracion',\n\tcomponent: ConfiguracionMedicoComponent,\n\tcanActivate: [AuthGuard,AdministrativoGuard]\n},\n{\n\tpath:'obras',\n\tcomponent: ObrasComponent,\n\tcanActivate: [AuthGuard,AdministrativoGuard]\n},\n{\n\tpath:'configuracion/:idDoctor',\n\tcomponent: ConfiguracionMedicoComponent,\n\tcanActivate: [AuthGuard]\n},\n  { path: 'login', component: LoginComponent },\n\t{ path: 'registro', component: RegisterComponent }\n];\n\n\nexport const routing : ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/app.routing.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n//TRUCO PARA QUE NO LIME\nimport { AppComponent } from '../app.component';\n\n\n@Injectable()\nexport class AdministrativoGuard implements CanActivate {\n  constructor(private router: Router, private auth: AuthService,private app: AppComponent) {}\n\n  canActivate(next: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n                let token = JSON.parse(localStorage.getItem('user'));\n                if(token){\n                  if(token.clase){\n                    let clase = token.clase;\n                    // console.log(\"la clase es... \",clase);\n                    if(clase === 'medico'){\n                      // console.log(\"Soy medico!\");\n                      let doctor = token.nombre;\n                      let id = token._idMedico;\n                      this.router.navigate(['turnos/'+doctor+'/'+id]);\n                      return false;\n                    }\n                    // console.log(\"No soy medico!\");\n                    return true;\n                  }\n                }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/administrativo.guard.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n//TRUCO PARA QUE NO LIME\nimport { AppComponent } from '../app.component';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private auth: AuthService,private app: AppComponent) {}\n\n  canActivate(next: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    /* Try to auth with the server. If authed resolve to true, else resolve to false */\n    return this.auth\n      .logIn()\n      .then(() => {\n        ////console.log('TODO OK');\n        this.app.logueado();\n        return true;\n      })\n      .catch(() => {\n        ////console.log('ERROR GO TO LOGIN');\n        this.router.navigate(['login']);\n        return false;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { Feathers } from './feathers.service';\nimport { Router } from '@angular/router';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\n\n/**\n * Abstraction layer for auth. Nice to have when things get more complicated.\n */\n@Injectable()\nexport class AuthService {\n\n  constructor(private feathers: Feathers, private router: Router) {}\n\n  public singIn(nombre, email, password){\n\n  }\n\n  public logIn(credentials?): Promise<any> {\n    return this.feathers.authenticate(credentials);\n  }\n\n  public logOut() {\n    this.feathers.logout();\n    localStorage.removeItem('user');\n    this.router.navigate(['login']);\n    ////console.log('logOut');\n  };\n\n  public signup(nombre, apellido, email: string, password: string): Promise<any> {\n   return this.feathers.service('users')\n      .create({nombre, apellido, email, password})\n      .take(1)\n      .toPromise()\n      .then(res => {\n        // ////console.log('Lo cree!!');\n        // ////console.log(res);\n        return res as Promise<any>;\n      })\n      .catch(err =>  console.log(err))\n    ;\n  }\n\n\n  public jwt(): RequestOptions {\n\n    let currentUsuario = JSON.parse(localStorage.getItem('user'));\n    let token = localStorage.getItem('feathers-jwt');\n\n    if (currentUsuario && token) {\n      let headers2 = new Headers({ 'Authorization': token });\n      return new RequestOptions({ headers: headers2 });\n    }\n  }\n\n  public jwtContentType(){\n\t\tlet jwt = this.jwt();\n\t\tjwt.headers.append('Content-Type', 'application/json');\n    return jwt;\n\t}\n\n  public autenticarSocket(): Promise<any>{\n    return this.feathers.autenticarSocket();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/auth.service.ts","import { Injectable } from '@angular/core';\n\nimport * as feathers from 'feathers/client';\nimport * as feathersRx from 'feathers-reactive';\nimport * as io from 'socket.io-client';\nimport * as hooks from 'feathers-hooks';\nimport * as socketio from 'feathers-socketio/client';\nimport * as authentication from 'feathers-authentication-client';\nimport { environment } from '../../environments/environment';\n\n// TS Lint will complain here. Unfortunately feathers-reactive needs the entire Rx object passed on creation.\nimport * as Rx from 'rxjs';\n\n/**\n * Simple wrapper for feathers\n */\n@Injectable()\nexport class Feathers {\n  // There are no proper typings available for feathers, due to its plugin-heavy nature\n  private _feathers: any;\n  private _socket: any;\n\n  constructor() {\n    this._socket = io(environment.apiUrl);       // init socket.io\n\n    this._feathers = feathers();                      // init Feathers\n    this._feathers.configure(hooks());                // add hooks plugin\n    this._feathers.configure(feathersRx(Rx));         // add feathers-reactive plugin\n    this._feathers.configure(socketio(this._socket)); // add socket.io plugin\n    this._feathers.configure(authentication({         // add authentication plugin\n      storage: window.localStorage\n    }));\n  }\n\n  // expose services\n  public service(name: string) {\n    return this._feathers.service(name);\n  }\n\n  public devolverFeathers(){\n    return this._feathers;\n  }\n\n  // expose authentication\n  public authenticate(credentials?): Promise<any> {\n    return this._feathers.authenticate(credentials);\n  }\n\n  // expose logout\n  public logout() {\n    return this._feathers.logout();\n  }\n  public autenticarSocket(): Promise<any>{\n\n    // console.log(\"ENTRE AL AUTHENTICAR\");\n\n\n    let token = localStorage.getItem('feathers-jwt');\n    // console.log(token);\n    // this._feathers.authenticate({\n    //   strategy: \"jwt\",\n    //   accessToken: token\n    // }).then(respuesta => {\n    //   console.log(\"LA RESPUESTA DESDE EL SERVER AUTH ES\");\n    //   console.log(respuesta);\n    // }).catch(function(error){\n    //   console.error('Error authenticating!', error);\n    // });\n\n\n    return this._feathers.authenticate({\n      strategy: \"jwt\",\n      accessToken: token\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/feathers.service.ts","module.exports = \"<div class=\\\"gray-bg middle-box text-center loginscreen animated fadeInDown\\\">\\n    <div>\\n        <div>\\n\\n            <h1 class=\\\"logo-name\\\">CLV</h1>\\n\\n        </div>\\n        <h3>Bienvenido!!</h3>\\n        <!-- <p>Perfectly designed and precisely prepared admin theme with over 50 pages with extra new web app views.\\n\\n        </p> -->\\n        <p>Por favor, ingrese al sistema.</p>\\n        <form class=\\\"m-t\\\" role=\\\"form\\\" action=\\\"index.html\\\" (ngSubmit)='login(email.value, password.value)'>\\n            <div class=\\\"form-group\\\">\\n                <input #email class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"email\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <input #password class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"password\\\">\\n            </div>\\n\\n            <button type=\\\"submit\\\" id=\\\"login\\\" class=\\\"btn btn-primary block full-width m-b\\\" >\\n                Log in\\n              </button>\\n\\n          <span>{{messages}}</span>\\n        </form>\\n        <p class=\\\"text-muted text-center\\\"><small>No tiene una cuenta?</small></p>\\n         <a class=\\\"btn btn-sm btn-white btn-block\\\" (click)='irRegistro()'>Crear una cuenta</a>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/login.component.html\n// module id = ../../../../../src/app/authentication/login.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Feathers } from './feathers.service';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n  //styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  messages: string = \"\";\n\n  constructor(\n      private feathers: Feathers,\n      private router: Router,\n      private authService: AuthService) {}\n\n  public ngOnInit():any {\n      let token = localStorage.getItem('user');\n      if(token){\n          this.router.navigateByUrl('/');\n      }\n  }\n\n  login(email: string, password: string) {\n    if (!email || !password) {\n      this.messages='Falta usuario o contraseña!';\n      return;\n    }\n    //localStorage.clear();\n\n    email = email.toLowerCase();\n    //FIX CAMBIO EL username por el email\n    var username = email;\n    // try to authenticate with feathers\n    this.feathers.authenticate({\n      strategy: 'local',\n      username,\n      password\n    })\n      // navigate to base URL on success\n      .then((token) => {\n        // console.log(\"#################### TOKEN\");\n        // console.log(token);\n\n        let gilada = this.feathers.devolverFeathers().passport.verifyJWT(token.accessToken);\n        gilada.then((payload)=>{\n          let gilada2 = this.feathers.service(\"users\").get(payload.userId);\n\n          gilada2.then((user)=>{\n            ////console.log(\"USUARIO:\");\n            // console.log(user);\n            // localStorage.setItem('user',user);\n            if(user.clase === 'medico'){\n              localStorage.setItem('user',JSON.stringify(user));\n              this.router.navigate(['/medico']);\n            }\n            else{\n              if(user.clase === 'administrativo'){\n                localStorage.setItem('user',JSON.stringify(user));\n                this.router.navigate(['/']);\n              }else{\n                //console.log('LA CLASE');\n                //console.log(user.clase );\n                //localStorage.removeItem('feathers-jwt');\n                localStorage.clear();\n                this.messages = 'Error en el usuario o contraseña!';\n                this.authService.logOut();\n                // throw new Error(\"No existe esa cuenta en el sistema!\");\n              }\n\n            }\n          })\n        })\n\n      }).catch(err => {\n        this.messages = 'Error en el usuario o contraseña!';\n      });\n  }\n\n  public irRegistro(){\n    this.router.navigate(['/registro']);\n  }\n\n  signup(email: string, password: string) {\n    email = email.toLowerCase();\n    this.feathers.service('users')\n      .create({email, password})\n      .take(1)\n      .toPromise()\n      .then(() => this.messages='User created.')\n      .catch(err => this.messages='Could not create user!')\n    ;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/login.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n//TRUCO PARA QUE NO LIME\nimport { AppComponent } from '../app.component';\n\n\n@Injectable()\nexport class MedicoGuard implements CanActivate {\n  constructor(private router: Router, private auth: AuthService,private app: AppComponent) {}\n\n  canActivate(next: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n                let token = JSON.parse(localStorage.getItem('user'));\n                if(token && token.clase){\n                  let clase = token.clase;\n                  console.log(\"la clase es... \",clase);\n                  if(clase === 'administrativo'){\n                    console.log('Soy administrativo');\n                    this.router.navigate(['']);\n                    return false;\n                  }\n\n                  console.log(\"No soy administrativo\");\n                  return true;\n                }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/medico.guard.ts","module.exports = \"<div class=\\\"middle-box text-center loginscreen   animated fadeInDown\\\">\\n        <div>\\n            <div>\\n\\n                <h1 class=\\\"logo-name\\\">CLV</h1>\\n\\n            </div>\\n            <h3>Registrarse al sistema</h3>\\n            <p>Crea una cuenta.</p>\\n            <form class=\\\"m-t\\\" role=\\\"form\\\" >\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\" #nombre required=\\\"\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido\\\" #apellido required=\\\"\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" #email required=\\\"\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password required=\\\"\\\">\\n                </div>\\n                <button (click)='registrar(nombre.value, apellido.value, email.value, password.value)' type=\\\"submit\\\" class=\\\"btn btn-primary block full-width m-b\\\">Registrar</button>\\n\\n                <p class=\\\"text-muted text-center\\\"><small>Ya tienes una cuenta?</small></p>\\n                <a (click)='irLogin()' class=\\\"btn btn-sm btn-white btn-block\\\">Login</a>\\n            </form>\\n        </div>\\n    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/register.component.html\n// module id = ../../../../../src/app/authentication/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n  //styleUrls: ['./login.component.css']\n})\nexport class RegisterComponent {\n\n\n\n    constructor(\n      private authService: AuthService,\n      private router: Router\n    ) {}\n\n    public registrar(nombre, apellido, email, password){\n      email = email.toLowerCase();\n      this.authService.signup(nombre, apellido, email, password).then(nuevo =>{\n\n        this.irLogin();\n\n      });\n    }\n\n    public irLogin(){\n      this.router.navigate(['login']);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/authentication/register.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.component.css\n// module id = ../../../../../src/app/configuracion-medico/configuracion-medico.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"row \\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-body\\\">\\n          <app-tabla-medicos>\\n          </app-tabla-medicos>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.component.html\n// module id = ../../../../../src/app/configuracion-medico/configuracion-medico.component.html\n// module chunks = main","import { Component, OnInit, ElementRef, ViewChild} from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport {ConfiguracionMedicoService} from './configuracion-medico.service';\nimport { Medico } from '../medico/medico.tipo';\n\nimport { Obra } from '../obras/obra.tipo';\nimport { ObrasService } from '../obras/obras.service';\nimport { ObrasCompartidasService } from '../routerService/obras.sistema';\n\nimport {default as swal} from 'sweetalert2';\ndeclare var $: any;\n\n\nimport { Select2OptionData } from 'ng2-select2';\n\nimport { MedicosCompartidosService } from '../routerService/medicos.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n\n@Component({\n  selector: 'app-configuracion-medico',\n  providers:[ConfiguracionMedicoService],\n  templateUrl: './configuracion-medico.component.html',\n  styleUrls: ['./configuracion-medico.component.css']\n})\nexport class ConfiguracionMedicoComponent implements OnInit {\n  //@ViewChild('formDatosBasicos') formDatosBasicos: ElementRef;\n  public formDatosBasicos;\n  public medicos = [];\n  public medicoSeleccionado = null;\n\n  public modeloMedico = null;\n  private esMedico: boolean = false;\n\n  public obrasSelector2: Array<any> = [];\n  public actualizado: boolean = false;\n  //  private value:any = {};\n  private _disabledV:string = '0';\n  private disabled:boolean = false;\n\n  public obras: Obra[];\n  private obraSelected: Obra = null;\n\n  // public modeloMedico = {};\n\n\n  // public obrasSelector: Array<Select2OptionData>;\n  public obrasSelector: Array<any> = [];\n  public options: Select2Options;\n  public value: any[] = [];\n  public current: string;\n  private subscription: Subscription;\n  private obrasSubscription: Subscription;\n  constructor(\n    private route: ActivatedRoute,\n    private medicosCompartidos: MedicosCompartidosService,\n    private obrasCompartidas: ObrasCompartidasService,\n    private http: Http, private configuracionMedicoService: ConfiguracionMedicoService, private obraService: ObrasService) {\n      this.modeloMedico = {\n        nombre: '',\n        apellido: '',\n        duracion: 0\n      }\n\n      this.observarMedicos();\n\n      /*\n        Vemos si el usuario logueado es un DOCTOR => no tenemos que buscar todo\n      */\n      let idMedico = route.snapshot.params['idDoctor'];\n      if(idMedico != null){\n        this.esMedico = true;\n        this.configuracionMedicoService.buscarMedico(idMedico).then(\n          medico => {\n            if(medico){\n              //****************************************************************\n              //FIX TEMPORAL para cuando viene 1 OBRA, por lo que (por algun motivo), no lo entiende como lista\n              //feathers al volverlo, posiblemente con un populate\n              //****************************************************************\n\n              if(!medico.obras.length){\n                  let aux = Object.assign({}, medico.obras);\n                  medico.obras = [];\n                  medico.obras.push(aux);\n              }\n              this.medicos.push(medico);\n              console.log('El medico seleccionado es ');\n              console.log(medico);\n            }\n          }\n        )\n      }\n      this.formDatosBasicos = $('#formDatosBasicos');\n    }\n\n    observarMedicos(){\n      /*\n        Subscribimos a los medicos, para que tengan una correspondencia\n        con los medicos del navigator\n      */\n      let idMedico = this.route.snapshot.params['idDoctor'];\n\n      if(this.medicosCompartidos.medicos$){\n        this.subscription = this.medicosCompartidos.medicos$.subscribe((medicos) => {\n\n          // console.log('ENTRE A LA SUBSCRIPCION desde configuracion medico');\n          if(idMedico != null){\n            //Este if controla que si yo soy un medico, y estoy en mi vista, no vea todos los medicos.\n            for (let i = 0; i < medicos.length; i++) {\n                if(medicos[i]._id === idMedico){\n                  this.medicos = []; //Limpio el medico viejo sin editar;\n                  this.medicos.push(medicos[i]); //Agregamos el medico editado a la lista.\n                }\n            }\n          }\n          else{\n            this.medicos = medicos;\n          }\n\n          // this.ref.markForCheck();\n        }, (err) => {\n          console.error(err);\n        });\n      }\n    }\n\n    observarObras(){\n      /*\n        Subscribimos a los obras, para que tengan una correspondencia\n        con los obras del navigator\n      */\n      if(this.obrasCompartidas.obras$){\n        this.obrasSubscription = this.obrasCompartidas.obras$.subscribe((obras) => {\n\n            this.obras = obras;\n            this.actualizarSelector();\n          // this.ref.markForCheck();\n        }, (err) => {\n          console.log('Error en observarObras de tablaObras');\n          console.error(err);\n        });\n\n        // Obtenemos los pacientes compartidos\n        this.obrasCompartidas.getObras();\n      }\n    }\n\n    submitForm(form){\n      console.log('ESTE ES EL FORM');\n      console.log(form);\n    }\n    ngOnInit() {\n      if(this.esMedico){\n        // console.log('Exito!!!!!');\n      }\n      else{\n        this.getAllMedicos();\n      }\n\n      let yo = this;\n\n      this.observarObras();\n\n      // this.obraService.getObras().then(obras => {\n      //   this.obras = obras;\n      //   yo.actualizarSelector();\n      //\n      //\n      // }).catch(error => {console.log(error)})\n    }\n\n    public actualizarSelector(){\n      if(this.obras!=null){\n        ////console.log('Entre a Ng on Changes del modal configurar semana');\n\n\n        let yo = this;\n        this.obras.forEach(function(elem,index){\n          /*\n          Dado que estamos usando el componente ng2-select,\n          debemos tener un arreglo en el que cada objeto TENGA:\n          un atributo 'id'\n          un atributo 'text'\n          */\n          yo.obrasSelector[index] = elem;\n          yo.obrasSelector[index].id = elem._id;\n          yo.obrasSelector[index].text = elem.nombre;\n        });\n        this.iniciarSelectorObras();\n\n        if(yo.obrasSelector.length > 0){\n          ////console.log('TRUE');\n          this.actualizado = true;\n        }\n      }\n    }\n\n    private iniciarSelectorObras(){\n\n\n\n\n      this.options = {\n        multiple: true\n      }\n\n      this.current = this.value.join(' | ');\n    }\n\n\n\n    getAllMedicos(): void{\n\n      /*\n        Pedimos al servicio compartido que nos actualice sus medicos.\n      */\n      this.medicosCompartidos.getMedicos();\n\n      // this.configuracionMedicoService.getMedicos().then(medics => {\n      //   this.medicos = medics;\n      //   ////console.log(medics);\n      // });\n    }\n\n    actualizarDatos(nombre,apellido,email,duracionTurno){\n      let id = this.medicoSeleccionado._id;\n      let idUsuario = this.medicoSeleccionado._idUsuario;\n      let emailMedico = email.toLowerCase();\n\n      let yo = this;\n\n      let obrasAsignadas = this.asignarObras();\n\n      this.configuracionMedicoService.actualizarMedico(id,nombre,apellido,emailMedico, duracionTurno,obrasAsignadas, idUsuario).then(medicoNuevo =>{\n\n        // let id = medicoNuevo._id;\n        // let index = this.getIndex();\n\n        yo.medicoSeleccionado.nombre = nombre;\n        yo.medicoSeleccionado.apellido = apellido;\n        yo.medicoSeleccionado.duracion = medicoNuevo.duracion;\n        yo.medicoSeleccionado.email = medicoNuevo.email;\n        // console.log(medicoNuevo.obras);\n        yo.medicoSeleccionado.obras = medicoNuevo.obras;\n\n        //Actualizamos los medicos compartidos (para el navigator)\n        this.medicosCompartidos.updateMedico(medicoNuevo);\n\n      });\n\n      //Cerramos el modal\n      $('#formDatosBasicos').modal('hide');\n    }\n\n\n    public asignarObras(){\n\n      let obrasAsignadas = [];\n      let yo = this;\n\n      // console.log('yo.value');\n      // console.log(yo.value);\n\n      this.obrasSelector.forEach(function(elem,index){\n        for (let i = 0; i < yo.value.length; i++) {\n\n          if(elem.id.toString() == yo.value[i]){\n            // console.log('****************************************');\n            // console.log('encontre!');\n            obrasAsignadas.push(elem._id); //clonamos el elemento\n          }\n        }\n\n      });\n\n      //Quitamos los atributos agregados para el selector del clone\n      // delete pacienteAsignado['id'];\n      // delete pacienteAsignado['text'];\n      // ////console.log(pacienteAsignado);\n\n      return obrasAsignadas;\n    }\n\n\n    configurarSemana(medico){\n      this.medicoSeleccionado = medico;\n      let semanaGuardada;\n      this.configuracionMedicoService.getSemanaModelo(medico).then(semana =>{\n        //Abrimos el modal...\n        semanaGuardada = semana;\n\n        $('#formConfigSemana').modal('show');\n        ////console.log(\"LA SEMANA Q LE LLEGA AL COMPONENT ES....\");\n        ////console.log(semana);\n      });\n    }\n\n    public abrirModal(medico){\n      this.medicoSeleccionado = medico;\n\n      let yo = this;\n      let listaAux = [];\n\n      // Si el emdico tiene obras, entonces se las asignamos al editar\n      if(this.medicoSeleccionado.obras){\n        // console.log('ESTOY ACA');\n        // console.log(this.medicoSeleccionado);\n        this.modeloMedico = Object.assign({}, medico);\n        // console.log(this.medicoSeleccionado.obras);\n        this.medicoSeleccionado.obras.forEach(function(elem,index){\n          listaAux.push(elem._id);\n        });\n        this.value = listaAux;\n      }\n\n\n      // this.value = [this.obrasSelector[2].id, this.obrasSelector[1].id];\n\n\n\n\n      $('#formDatosBasicos').modal('show');\n    }\n    public cancelar(){\n      //Cerramos el modal\n      $('#formDatosBasicos').modal('hide');\n\n\n      this.medicoSeleccionado = null;\n    }\n\n    onIntervalosGuardados(medicoCambiado){\n      // console.log('on intervalos guardados');\n      //\n      //\n      // console.log(medicoCambiado);\n\n      /*\n        OBS: el medico viene SIN los datos de usuario.\n        Es decir, no tenemos el nombre, apellido, etc.\n        Solo debemos actualizar los datos de la semanaEsquema del medico\n      */\n\n\n      //Actualizamos el medico modificado\n      let i = -1;\n      this.medicos.forEach(function(med,index){\n        if(med._id.toString() == medicoCambiado._id){\n          i = index;\n        }\n      });\n      if(i > -1){\n        this.medicos[i].semanaEsquema = medicoCambiado.semanaEsquema;\n      }\n\n      //Sacamos la seleccion del medico, para que dsps no haya inconsistencias\n      this.medicoSeleccionado = {};\n\n\n\n    }\n\n    public formAgregarMedico(){\n      $('#formAgregarMedico').modal('show');\n    }\n\n    //---------------------------------------------------------------------------\n    //Metodos originales del componente\n\n\n    changed(data: {value: string[]}) {\n      this.current = data.value.join(' | ');\n      this.value = data.value;\n      //console.log(this.current);\n    }\n\n\n    private get disabledV():string {\n      return this._disabledV;\n    }\n\n    private set disabledV(value:string) {\n      this._disabledV = value;\n      this.disabled = this._disabledV === '1';\n    }\n    public selected(value:any):void {\n      ////console.log('Selected value is: ', value);\n    }\n\n    public removed(value:any):void {\n      ////console.log('Removed value is: ', value);\n    }\n\n    public typed(value:any):void {\n      ////console.log('New search input: ', value);\n    }\n\n    public refreshValue(value:any):void {\n      this.value = value;\n    }\n\n  }\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\n\n\nimport { Medico } from '../medico/medico.tipo';\n\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\nimport { environment } from '../../environments/environment';\nimport { AuthService } from '../authentication/auth.service';\n\n@Injectable()\nexport class ConfiguracionMedicoService {\n\n\tprivate headers = new Headers({'Content-Type': 'application/json'});\n\tprivate medicosURL = environment.apiUrl +'/medicos';  // URL to web api\n\n\n\n\tconstructor(private http: Http,private authService: AuthService) {\n\n\t}//Al ser promise (y no Observable), no le quita reactividad?\n\tgetMedicos(): Promise<any[]>{\n\t\treturn this.http.get(this.medicosURL,this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\treturn response.json() as any[];\n\t\t})\n\t\t.catch(this.handleError);\n\t}\n\n\n\tprivate handleError(error: any): Promise<any> {\n\t\tconsole.error('Ocurrio un error en servicio de anys: ', error);\n\t\t// alert(error.json().error);\n\t\treturn Promise.reject(error.message || error);\n\t}\n\n\tbuscarMedico(id): Promise<any>{\n\t\treturn this.http.get(this.medicosURL+'/'+id,this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\t//console.log(response.json());\n\t\t\treturn response.json() as any;\n\t\t})\n\t\t.catch(this.handleError);\n\t}\n\n\tactualizarMedico(id,nombre,apellido,emailMedico, duracion,obras, idUsuario): Promise<any>{\n\t\treturn this.http.patch(this.medicosURL+'/'+id,{nombre: nombre, apellido: apellido, email:emailMedico, duracion:duracion,obras:obras, _idUsuario:idUsuario},this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\treturn response.json() as any;\n\t\t})\n\t\t.catch(this.handleError);\n\t}\n\n\teliminarMedico(id): Promise<any[]>{\n\t\treturn this.http.patch(this.medicosURL+'/'+id,{eliminado:true},this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\t//console.log(\"RESPUESTA DESDE EL PATCH\");\n\t\t\t//console.log(response.json());\n\t\t\treturn response.json() as any[];\n\t\t})\n\t\t.catch(this.handleError);\n\t}\n\n  getSemanaModelo(medico): Promise<any[]> {\n    let id = medico._id;\n\n    let medicoService = environment.apiUrl + '/medicos';\n\n\t\treturn this.http.get(medicoService+'?_id='+id,this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(res => {\n\t\t\tlet medico = res.json();\n\n\t\t\treturn medico.semanaEsquema;\n\t\t})\n\t\t.catch(this.handleError);\n\n\n    // return this.http.get(urlSemanas+'?medico='+id)\n\t\t// .toPromise()\n\t\t// .then(response => {\n\t\t// \tconsole.log('ENTRE ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n    //   //Filtramos....\n    //    var arr = response.json();\n\t\t//\n\t\t// \t //console.log(arr);\n\t\t//\n    //    var result = [];\n    //    for (var i = 0; i < arr.length; i++) {\n\t\t// \t\t //console.log(arr[i]);\n    //      if(arr[i].medico._id === id){\n    //        result.push(arr[i]);\n    //        ////console.log(\"LALALA\");\n    //      }\n    //    }\n\t\t//\n\t\t// \treturn result as any[];\n\t\t// })\n\t\t// .catch(this.handleError);\n\n\n\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/configuracion-medico.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".h-120-vcenter{\\n  min-height: 120px;\\n  line-height: 60px;\\n}\\n.h-60-vcenter{\\n  min-height: 60px;\\n  line-height: 30px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/modal-semana/modal-semana.component.css\n// module id = ../../../../../src/app/configuracion-medico/modal-semana/modal-semana.component.css\n// module chunks = main","module.exports = \"<!-- Modal Formulario Configuracion Semana -->\\n<!-- tabindex=\\\"-1\\\" seria para que cierre con escape  -->\\n<div class=\\\"modal fade\\\" id=\\\"formConfigSemana\\\" tabindex=\\\"-1\\\" #formConfigSemana role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormConfigSemana (click)='cancelar()'>&times;</button>\\n                <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Configuración Semana</h3>\\n\\n            </div>\\n\\n            <!-- <div class=\\\"modal-body\\\" > -->\\n            <div class=\\\"modal-body\\\">\\n                <!-- ACA VA LA POSTA -->\\n\\n                <div class=\\\"row\\\">\\n\\n                    <div>\\n                        <!-- <div class=\\\"ibox-title\\\">\\n                <h5>Configuración de Semana</h5>\\n\\n              </div> -->\\n\\n                        <div class=\\\"row m-sm\\\">\\n                            <div class=\\\"col-xs-8\\\">\\n                                <h3>Intervalos Semanales</h3></div>\\n                            <div class=\\\"col-xs-4 pull-right\\\">\\n                                <button (click)=\\\"agregarIntervalo()\\\" class=\\\"btn btn-sm btn-primary pull-right\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                            </div>\\n\\n                        </div>\\n                        <hr>\\n                        <div class=\\\"row m-l-none m-r-none no-paddings m-t-sm border-bottom\\\" *ngFor=\\\"let intervalo of intervalos; let intervaloIndex = index; trackBy: trackByIndex\\\">\\n                          <div class=\\\"col-xs-10\\\">\\n\\n\\n                            <div class=\\\"col-lg-6 col-xs-12\\\">\\n                                <div class=\\\"col-xs-1\\\">\\n                                    L\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input #diaLunes (click)=\\\"actualizarDiaIntervalo(intervalo,1)\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-1\\\">\\n                                    M\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input #diaMartes (click)=\\\"actualizarDiaIntervalo(intervalo,2)\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-1\\\">\\n                                    M\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input #diaMiercoles (click)=\\\"actualizarDiaIntervalo(intervalo,3)\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-1\\\">\\n                                    J\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input #diaJueves (click)=\\\"actualizarDiaIntervalo(intervalo,4)\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-1\\\">\\n                                    V\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input #diaViernes (click)=\\\"actualizarDiaIntervalo(intervalo,5)\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-1\\\">\\n                                    S\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input #diaSabado (click)=\\\"actualizarDiaIntervalo(intervalo,6)\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                        </label>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n\\n                            <div class=\\\"col-md-3 col-xs-5\\\">\\n                                <!--  TIME PICKER -->\\n                                <p class=\\\"small no-margins\\\">\\n                                    Desde\\n                                </p>\\n\\n                                    <input #inputHoraInicial id='input-horaInicial'\\n                                     style=\\\"width:100%\\\" class='p-xxs m-xs claseHoraInicial form-control' type=\\\"text\\\" [(ngModel)]=\\\"intervalos[intervaloIndex].horaInicial\\\"\\n                                     (click)='horaInicial(intervalo)'\\n                                     >\\n\\n                                    <!-- <button type=\\\"button\\\" id=\\\"button-a\\\">Check the  minutes</button>\\n                                    <button type=\\\"button\\\" id=\\\"button-b\\\">Check the  hours</button> -->\\n\\n                            </div>\\n                            <div class=\\\"col-md-3 col-xs-5\\\">\\n                                <!-- TIME PICKER -->\\n                                <p class=\\\"small no-margins\\\">\\n                                    Hasta\\n                                </p>\\n                                <input #inputHoraFin id='input-horaFin'\\n                                 style=\\\"width:100%\\\" class='p-xxs m-xs claseHoraFin form-control' type=\\\"text\\\" [(ngModel)]=\\\"intervalos[intervaloIndex].horaFin\\\"\\n                                 (click)='horaFin(intervalo)'\\n                                 >\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col-xs-1\\\">\\n                            <div class=\\\"col-md-1 col-xs-2 m-t-md \\\">\\n                                <!-- VACIOOOO  -->\\n                                <!-- AGREGAR X ROJA PARA ELIMINAR EL INTERVALO -->\\n                                <button (click)=\\\"eliminarIntervalo(intervaloIndex)\\\" class=\\\"btn btn-xs btn-danger\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                            </div>\\n\\n                          </div>\\n\\n                            <!-- <button (click)=\\\"abrirModal(medico)\\\" class=\\\"btn btn-success\\\">Actualizar Datos Basicos</button>\\n  <button (click)=\\\"configurarSemana(medico)\\\" class=\\\"btn btn-primary\\\">Configurar Semana</button> -->\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"m-b-lg\\\"></div>\\n                    <div class=\\\"row m-sm\\\">\\n                        <div class=\\\"col-xs-8\\\">\\n                            <h3>Turnos por obra social</h3></div>\\n                        <div class=\\\"col-xs-4 pull-right\\\" *ngIf=\\\"obrasSelector.length > 0\\\">\\n                            <button (click)=\\\"agregarObra()\\\" class=\\\"btn btn-sm btn-primary pull-right\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row m-sm\\\">\\n\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div>\\n\\n                            </div>\\n                            <hr>\\n                            <br>\\n                            <div class=\\\"row\\\" *ngFor=\\\"let parObra of turnosPorObra; let parObraIndex = index; trackBy: trackByIndex\\\">\\n                                <!-- Selector de obra -->\\n                                <div>\\n                                    <div class=\\\"col-sm-8 m-b-sm \\\">\\n                                        <ng-select #selector *ngIf='actualizado == true' [allowClear]=\\\"true\\\" [items]=\\\"obrasSelector\\\" [disabled]=\\\"disabled\\\" (data)=\\\"refreshValue($event)\\\" (selected)=\\\"selected($event,parObraIndex)\\\" (removed)=\\\"removed($event)\\\" (typed)=\\\"typed($event)\\\" placeholder=\\\"buscar\\\">\\n                                        </ng-select>\\n                                    </div>\\n                                    <!-- input de cantidad -->\\n                                    <div class=\\\"col-sm-3 col-xs-8 m-b-sm \\\">\\n                                        <input class=\\\"form-control\\\" style=\\\"width:100px\\\" type=\\\"number\\\" [(ngModel)]=\\\"turnosPorObra[parObraIndex].cantDisponible\\\">\\n\\n                                    </div>\\n                                    <div class=\\\"col-sm-1 col-xs-4 h-60-vcenter\\\">\\n                                      <button (click)=\\\"eliminarSelectorObra(parObraIndex)\\\" class=\\\"btn btn-xs btn-danger pull-right \\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"m-b-l\\\"></div>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n\\n                <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n                    Cancelar\\n                </button>\\n\\n                <button class=\\\"btn btn-primary\\\" (click)='guardarIntervalos()'>\\n                    Guardar Configuración\\n                </button>\\n\\n            </div>\\n        </div>\\n        <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/modal-semana/modal-semana.component.html\n// module id = ../../../../../src/app/configuracion-medico/modal-semana/modal-semana.component.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\nimport { ViewChildren, QueryList, ChangeDetectorRef } from '@angular/core';\n\nimport { Obra } from '../../obras/obra.tipo';\nimport { ObrasService } from '../../obras/obras.service';\n\nimport {default as swal} from 'sweetalert2';\nimport {MedicosService} from '../../medico/medicos.service';\n\n\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-modal-semana',\n  templateUrl: './modal-semana.component.html',\n  styleUrls: ['./modal-semana.component.css']\n})\nexport class ModalSemanaComponent implements OnInit,OnChanges {\n\n  @Output() semenaCambiada = new EventEmitter();\n  @Input() medico: any;\n  @Input() obrasDispTotales: any[];\n\n  @ViewChild('closeFormConfigSemana') closeFormConfigSemana: ElementRef;\n  // @ViewChild('selector') selector: ElementRef;\n\n  @ViewChildren('diaLunes') diasLunes: QueryList<ElementRef>;\n  @ViewChildren('diaMartes') diasMartes: QueryList<ElementRef>;\n  @ViewChildren('diaMiercoles') diasMiercoles: QueryList<ElementRef>;\n  @ViewChildren('diaJueves') diasJueves: QueryList<ElementRef>;\n  @ViewChildren('diaViernes') diasViernes: QueryList<ElementRef>;\n  @ViewChildren('diaSabado') diasSabado: QueryList<ElementRef>;\n\n  @ViewChildren('selector') selectoresObras: QueryList<ElementRef>;\n\n  public intervalos: any[] = [];\n  private obras: Obra[];\n  private obraSelected: Obra = null;\n\n  public turnosPorObra: any[] = [];\n\n\n  public obrasSelector: Array<any> = [];\n  public actualizado: boolean = false;\n  private value:any = {};\n  private _disabledV:string = '0';\n  private disabled:boolean = false;\n\n  private primeraVez: boolean = true;\n\n  constructor(private obraService: ObrasService, private medicosService: MedicosService, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if(this.medico != null){\n      //this.obras = this.medico.obras;\n      this.reiniciarConfiguracion();\n\n      // this.intervalos = this.medico.semanaEsquema.intervalos;\n      // if(this.intervalos == undefined || this.intervalos == null){\n      //   this.agregarIntervalo();\n      // }\n      this.iniciarTurnosPorObras();\n      this.iniciarIntervalos();\n      this.obras = this.obrasDispTotales;\n      this.actualizarSelector();\n    }\n  }\n\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n    this.reiniciarConfiguracion();\n\n    if(!this.primeraVez){\n      // this.obrasSelector = [];\n      this.turnosPorObra = [];\n      this.resetearSelectoresObras();\n      this.resetearCheckBoxs();\n\n    }\n\n\n\n    if(this.medico != null){\n      //this.obras = this.medico.obras;\n      this.iniciarTurnosPorObras();\n      this.iniciarIntervalos();\n      this.obras = this.obrasDispTotales;\n      this.actualizarSelector();\n\n    }\n\n    if(!(this.obrasSelector.length > 0)){\n      //Este if es para que si existia una asignacion de cantidad de turnos por obra social, y\n      // se eliminaron todas las obras por las cuales el medico trabaja, tambien se elimienn los intervalos\n      // ya que sino queda un selector bugeado con un input numerico colgado del aire.\n\n\n      // Ver metodo iniciarTurnosPorObras() , que tiene un if que hace esto mismo en algunas situaciones particulares.\n      this.turnosPorObra = [];\n    }\n  }\n\n  ngAfterViewInit() {\n    this.primeraVez = false;\n    // this.actualizarCheckBoxs();\n  }\n  ngAfterViewChecked(){\n    this.iniciarSelectoresObras();\n    this.actualizarCheckBoxs();\n\n\n\n    /*\n      Estamos evitando problemas con los cambios de ciclos de los hooks de los componentes. Para entender este fix:\n      https://blog.angularindepth.com/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error-e3fd9ce7dbb4\n    */\n\n    this.cd.detectChanges();\n\n    // if(!this.primeraVez){\n    //    this.actualizarCheckBoxs();\n    // }\n  }\n\n  public reiniciarConfiguracion(){\n    this.intervalos = [];\n    // this.obras=[];\n    this.obraSelected = null;\n    this.turnosPorObra =[];\n\n  }\n\n  public iniciarTurnosPorObras(){\n    if(this.medico.semanaEsquema){\n      if(this.medico.semanaEsquema && this.medico.semanaEsquema.obrasDisponibles){\n\n        this.turnosPorObra = this.medico.semanaEsquema.obrasDisponibles;\n        if(this.obrasSelector.length <= 0){\n          /* Metodo auxiliar de comprobacion para no mostrar intervalos de obras socailes q ya no son trabajadas. */\n          this.turnosPorObra = [];\n        }\n      }else{\n\n        this.turnosPorObra = [];\n      }\n    }\n    if(this.turnosPorObra == undefined || this.turnosPorObra == null){\n      this.agregarObra();\n    }\n    else{\n\n    }\n    // this.actualizarCheckBoxs();\n  }\n\n  public actualizarCheckBoxs(){\n\n    let diaAux = -1;\n    let diasArray = [];\n    if(this.intervalos != null && this.intervalos != undefined){\n      for (let i = 0; i < this.intervalos.length; i++) {\n        for (let j = 0; j < this.intervalos[i].dias.length; j++) {\n\n          let diaAux = this.intervalos[i].dias[j];\n\n          if(diaAux == 1){\n            diasArray = this.diasLunes.toArray();\n            diasArray[i].nativeElement.checked = true;\n          }\n          if(diaAux == 2){\n            diasArray = this.diasMartes.toArray();\n            diasArray[i].nativeElement.checked = true;\n            // this.diaMartes.nativeElement.checked = true;\n          }\n          if(diaAux == 3){\n            diasArray = this.diasMiercoles.toArray();\n            diasArray[i].nativeElement.checked = true;\n            // this.diaMiercoles.nativeElement.checked = true;\n          }\n          if(diaAux == 4){\n            diasArray = this.diasJueves.toArray();\n            diasArray[i].nativeElement.checked = true;\n            // this.diaJueves.nativeElement.checked = true;\n          }\n          if(diaAux == 5){\n            diasArray = this.diasViernes.toArray();\n            diasArray[i].nativeElement.checked = true;\n            // this.diaViernes.nativeElement.checked = true;\n          }\n          if(diaAux == 6){\n            diasArray = this.diasSabado.toArray();\n            diasArray[i].nativeElement.checked = true;\n            // this.diaSabado.nativeElement.checked = true;\n          }\n        }\n      }\n    }\n    this.primeraVez = false;\n  }\n\n  public resetearCheckBoxs(){\n\n\n      let diasArray = this.diasLunes.toArray();\n      diasArray.forEach(function(elem,index){\n          elem.nativeElement.checked=false;\n      });\n      diasArray = this.diasMartes.toArray();\n      diasArray.forEach(function(elem,index){\n          elem.nativeElement.checked=false;\n      });\n       diasArray = this.diasMiercoles.toArray();\n      diasArray.forEach(function(elem,index){\n          elem.nativeElement.checked=false;\n      });\n       diasArray = this.diasJueves.toArray();\n      diasArray.forEach(function(elem,index){\n          elem.nativeElement.checked=false;\n      });\n       diasArray = this.diasViernes.toArray();\n      diasArray.forEach(function(elem,index){\n          elem.nativeElement.checked=false;\n      });\n       diasArray = this.diasSabado.toArray();\n      diasArray.forEach(function(elem,index){\n          elem.nativeElement.checked=false;\n      });\n  }\n\n  /*\n    Este metodo INICIA CADA selector de obras, con el valor que tenia.\n  */\n  public iniciarSelectoresObras(){\n\n    let yo = this;\n    let selectoresAux :any[] = this.selectoresObras.toArray();\n    for (let index = 0; index < this.turnosPorObra.length; index++) {\n        let elem = this.turnosPorObra[index];\n\n        for (let i = 0; i < yo.obras.length; i++) {\n          if(yo.obras[i]._id.toString() == elem.obraSocial.toString()){\n\n            var aux = yo.obras[i]; //Este es el que tiene el id y el text\n            // console.log(selectoresAux[index]);\n            // selectoresAux[index].active.push(aux);\n            selectoresAux[index].active = [aux];\n          }\n        }\n    }\n  }\n\n  public resetearSelectoresObras(){\n\n    let selectoresAux :any[] = this.selectoresObras.toArray();\n    selectoresAux.forEach(function(elem,index){\n      elem.active = [];\n    });\n  }\n\n  public iniciarIntervalos(){\n    if(this.medico.semanaEsquema){\n\n      if(this.medico.semanaEsquema && this.medico.semanaEsquema.intervalos){\n\n        this.intervalos = this.medico.semanaEsquema.intervalos;\n\n        /*\n          HoraInicialReal mantendra la hora + minutos convetidos a minutos.\n          HoraInical tendra un string con formato hh:mm para la visual.\n        */\n        this.intervalos.forEach(function(elem,index){\n\n          if(!elem.horaInicialReal && (elem.horaInicialReal != 0)){\n            elem.horaInicialReal = elem.horaInicial;\n\n            let horasAux = (Math.floor(elem.horaInicial / 60)).toString();\n            let minutosAux = (elem.horaInicial % 60).toString();\n\n            // Le debemos agregar un 0 antes por si es 1 minuto o 1 hora => 01\n            if(horasAux.length == 1){\n              horasAux = '0' + horasAux;\n            }\n            if(minutosAux.length == 1){\n              minutosAux = '0' + minutosAux;\n            }\n            // Asignamos el string creado\n            elem.horaInicial = horasAux +\":\"+ minutosAux;\n          }\n\n          if(!elem.horaFinReal && (elem.horaFinReal != 0)){\n            elem.horaFinReal = elem.horaFin;\n\n            let horasAux = (Math.floor(elem.horaFin / 60)).toString();\n            let minutosAux = (elem.horaFin % 60).toString();\n\n            // Le debemos agregar un 0 antes por si es 1 minuto o 1 hora => 01\n            if(horasAux.length == 1){\n              horasAux = '0' + horasAux;\n            }\n            if(minutosAux.length == 1){\n              minutosAux = '0' + minutosAux;\n            }\n            // Asignamos el string creado\n            elem.horaFin = horasAux +\":\"+ minutosAux;\n          }\n\n        });\n        // console.log('FIN FOR EACH');\n      }else{\n        this.intervalos = [];\n      }\n    }\n    // console.log(\"INTERVALOS\");\n    // console.log(this.intervalos);\n    if(this.intervalos == undefined || this.intervalos == null){\n\n      let inter = {\n        dias : [],\n        horaInicial: \"\",\n        horaFin: \"\",\n        horaInicialReal: \"\"\n      };\n      this.intervalos.push(inter);\n    }\n    else{\n      // console.log(\"dias\");\n      // console.log(this.diaLunes.nativeElement.value);\n    }\n    // this.actualizarCheckBoxs();\n  }\n\n\n\n  public actualizarSelector(){\n    if(this.obras!=null){\n      let yo = this;\n      this.obras.forEach(function(elem,index){\n        /*\n        Dado que estamos usando el componente ng2-select,\n        debemos tener un arreglo en el que cada objeto TENGA:\n        un atributo 'id'\n        un atributo 'text'\n        */\n\n        yo.obrasSelector[index] = elem;\n        yo.obrasSelector[index].id = elem._id;\n        yo.obrasSelector[index].text = elem.nombre;\n        yo.obrasSelector[index]._id = elem._id;\n\n        // yo.selectoresObras[0].nativeElement;\n\n      });\n      if(yo.obrasSelector.length > 0){\n        this.actualizado = true;\n      }\n    }\n  }\n\n\n  public agregarPaciente(){\n    let obraId = this.obraSelected._id;\n  }\n\n\n  public agregarIntervalo(){\n\n    console.log('ENTRE ACA');\n    let inter = {\n      dias : [],\n      horaInicial: \"\",\n      horaFin: \"\"\n    };\n\n    this.intervalos.push(inter);\n  }\n\n  public agregarObra(){\n    let obra = {\n      obraSocial: \"\",\n      cantDisponible: 0\n    }\n    this.turnosPorObra.push(obra);\n  }\n\n\n\n  public actualizarDiaIntervalo(intervalo,dia){\n    let bandera = false;\n    let index = -1;\n    for (let i = 0; i < intervalo.dias.length; i++) {\n      if(intervalo.dias[i] == dia){\n        index = i;\n        bandera = true;\n      }\n    }\n    if(!bandera){\n      intervalo.dias.push(dia);\n    }\n    else{\n      intervalo.dias.splice(index,1);\n    }\n    intervalo.dias.sort(function(a, b){return a - b});\n    // console.log(intervalo);\n  }\n\n  public eliminarIntervalo(index){\n    this.intervalos.splice(index,1);\n  }\n\n  public eliminarSelectorObra(index){\n    this.turnosPorObra.splice(index,1);\n  }\n\n  public trackByIndex(index: number, item) {\n    return index;\n  }\n\n  private parsearObras(){\n    let result = [];\n    for (let i = 0; i < this.turnosPorObra.length; i++) {\n      this.turnosPorObra[i];\n      result[i] = {obraSocial: this.turnosPorObra[i].obraSocial, cantDisponible:this.turnosPorObra[i].cantDisponible}\n    }\n    return result;\n  }\n\n  public guardarIntervalos(){\n\n    this.closeFormConfigSemana.nativeElement.click();\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres actualizar el intervalo?',\n      //text: 'You will not be able to recover this imaginary file!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, actualizar!',\n      cancelButtonText: 'Cancelar'\n    }).then(function() {\n\n      /*\n        HoraInicialReal tenia la hora + minutos convetidos a minutos.\n        HoraInical tenia un string con formato hh:mm para la visual.\n        Lo mismo sucede con HoraFin y HoraFinReal.\n\n        Ahora, para guardar en la base debemos intercambiar los valores (pues necesitamos guardarlo en minutos)\n      */\n\n      yo.intervalos.forEach(function(elem,index){\n          elem.horaInicial = elem.horaInicialReal;\n          elem.horaFin = elem.horaFinReal;\n      });\n\n\n      let obras = yo.parsearObras();\n      let semana = {\n        intervalos: yo.intervalos,\n        obrasDisponibles: obras\n      }\n      yo.medicosService.actualizarSemana(yo.medico._id,semana).then(resultado => {\n        yo.semenaCambiada.next(resultado);\n      }).catch(error => {console.log(error)});\n      yo.intervalos = [];\n      yo.turnosPorObra = [];\n      yo.closeFormConfigSemana.nativeElement.click();\n\n    }, function(dismiss){\n      $('#formConfigSemana').modal('show');\n    });\n\n\n\n  }\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n    // this.intervalos = [];\n    // this.turnosPorObra = [];\n\n\n\n    //Cerramos el modal\n    // this.obraSelected = null;\n    this.closeFormConfigSemana.nativeElement.click();\n\n    // this.agregarIntervalo();\n    // this.agregarObra();\n  }\n\n\n\n  // ***************************************************************************\n\n  // Metodos para obtener el horario del timePicker\n  public horaInicial(intervalo){\n\n    /*\n      OBS: Se debe hacer al estilo de 'JQuery', pues el componente timepicker\n      maneja una variable interna que NO actualiza al modelo asociado al input.\n      Es decir, al seleccionar un valor con el timepicker,\n      el modelo no se esta actualizando por mas de que tenemos [(ngModel)]=\"intervalos[intervaloIndex].horaInicial\n    */\n\n    let indexIntervalo = -1;\n    this.intervalos.forEach(function(elem,index){\n      if(elem._id == intervalo._id){\n        indexIntervalo = index;\n      }\n    });\n\n    let inputsHoraInicial = $('.claseHoraInicial');\n\n\n    inputsHoraInicial.clockpicker({\n      autoclose: true,\n      afterDone: function() {\n\n        /*\n\n          Debemos convertir el string que obtenemos con el timepicker, a minutos\n          para manejarlo en la base de datos. Asi, tendremos:\n\n          HoraInicialReal : la hora + minutos convetidos a minutos.\n          HoraInical : un string con formato hh:mm para la visual. [desactualizado, pues el timepicker maneja su variable local]\n\n        */\n\n        let nuevoValorString: String = (<any>inputsHoraInicial)[indexIntervalo].value;\n        let valores =  nuevoValorString.split(\":\");\n\n        let horas = parseInt(valores[0]);\n        let minutos = 0;\n        if(valores.length > 1){\n          minutos = parseInt(valores[1]);\n        }\n\n        let minutosDeHora = horas * 60;\n        let horaInicialMinutos = minutos + minutosDeHora;\n\n        intervalo.horaInicialReal = horaInicialMinutos;\n\n        // FIX : Debemos removerlo para que se reinicie el constructor de clockPicker\n        inputsHoraInicial.clockpicker('remove');\n      }\n    });\n\n    // Obligamos a que la cada vez que se toque se abra\n    inputsHoraInicial.clockpicker('show');\n  }\n  public horaFin(intervalo){\n\n    /*\n      OBS: Se debe hacer al estilo de 'JQuery', pues el componente timepicker\n      maneja una variable interna que NO actualiza al modelo asociado al input.\n      Es decir, al seleccionar un valor con el timepicker,\n      el modelo no se esta actualizando por mas de que tenemos [(ngModel)]=\"intervalos[intervaloIndex].horaInicial\n    */\n\n    let indexIntervalo = -1;\n    this.intervalos.forEach(function(elem,index){\n      if(elem._id == intervalo._id){\n        indexIntervalo = index;\n      }\n    });\n\n    let inputsHoraFin = $('.claseHoraFin');\n\n    inputsHoraFin.clockpicker({\n      autoclose: true,\n      afterDone: function() {\n\n        /*\n\n          Debemos convertir el string que obtenemos con el timepicker, a minutos\n          para manejarlo en la base de datos. Asi, tendremos:\n\n          horaFinReal : la hora + minutos convetidos a minutos.\n          horaFin : un string con formato hh:mm para la visual. [desactualizado, pues el timepicker maneja su variable local]\n\n        */\n\n        let nuevoValorString: String = (<any>inputsHoraFin)[indexIntervalo].value;\n        let valores =  nuevoValorString.split(\":\");\n\n        let horas = parseInt(valores[0]);\n        let minutos = 0;\n        if(valores.length > 1){\n          minutos = parseInt(valores[1]);\n        }\n\n        let minutosDeHora = horas * 60;\n        let horaFinMinutos = minutos + minutosDeHora;\n\n\n        intervalo.horaFinReal = horaFinMinutos;\n\n        // FIX : Debemos removerlo para que se reinicie el constructor de clockPicker\n        inputsHoraFin.clockpicker('remove');\n      }\n    });\n\n    // Obligamos a que la cada vez que se toque se abra\n    inputsHoraFin.clockpicker('show');\n  }\n\n\n\n  //---------------------------------------------------------------------------\n  //Metodos originales del componente\n\n  private get disabledV():string {\n    return this._disabledV;\n  }\n\n  private set disabledV(value:string) {\n    this._disabledV = value;\n    this.disabled = this._disabledV === '1';\n  }\n  public selected(value:any,pos:number):void {\n    this.turnosPorObra[pos].obraSocial = value.id;\n\n  }\n\n  public removed(value:any):void {\n  }\n\n  public typed(value:any):void {\n  }\n\n  public refreshValue(value:any):void {\n    this.value = value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/configuracion-medico/modal-semana/modal-semana.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <app-solicitudes></app-solicitudes>\\r\\n\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n\\r\\n      <app-pacientes-del-dia [notificaciones]='_service'></app-pacientes-del-dia>\\r\\n      <app-tareas></app-tareas>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<simple-notifications [options]=\\\"options\\\"></simple-notifications>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DashboardService } from './dashboard.service';\r\nimport * as moment from 'moment';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n\r\ndeclare var jQuery:any;\r\n\r\n\r\nimport { NotificationsService } from 'angular2-notifications';\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  providers:[NotificationsService],\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnDestroy, OnInit {\r\n\r\n  public nav:any;\r\n  todos: string[];\r\n  citas: string[];\r\n  mensajes: string[];\r\n  estadosCitas: any;\r\n  whatTime: any;\r\n\r\n\r\n  //Opciones de las notificiones\r\n  public options = {\r\n       position: [\"top\", \"right\"],\r\n      //  timeOut: 5000,\r\n       showProgressBar: false,\r\n       animate: \"fromRight\",\r\n       lastOnBottom: false,\r\n   };\r\n\r\n  constructor(private dashboardService: DashboardService,\r\n    public _service: NotificationsService){\r\n    this.nav = document.querySelector('nav.navbar');\r\n    this.whatTime = Observable.interval(1000)\r\n    .map(x => moment()).share();\r\n  }\r\n  aDate(turno){\r\n    var momentDate = moment(turno);\r\n    var fecha = momentDate.toDate();\r\n    return fecha\r\n  }\r\n  claseEstadoCita(status){\r\n    var clase = \"btn-default\";\r\n    for (var i in this.estadosCitas) {\r\n      if (status == this.estadosCitas[i].nombre){\r\n        clase = \"btn-\" + this.estadosCitas[i].clase;\r\n      }\r\n    }\r\n\r\n    return clase\r\n  }\r\n\r\n\r\n  // create() {\r\n  //         this._service.success(\r\n  //           'Some Title',\r\n  //           'Some Content'\r\n  //       )\r\n  //   }\r\n\r\n\r\n  public ngOnInit():any {\r\n\r\n  //  this.getAllCitas();\r\n    //this.getAllMensajes();\r\n    //this.getAllEstadosCitas();\r\n    this.nav.className += \" white-bg\";\r\n  }\r\n\r\n\r\n  public ngOnDestroy():any {\r\n    this.nav.classList.remove(\"white-bg\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n\r\n  constructor(private http: Http) {\r\n\r\n  }\r\n\t\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/dashboard/dashboard.service.ts","module.exports = \"<!-- Modal Formulario Crear Turno -->\\n<div class=\\\"modal fade\\\" id=\\\"formAgregarMedico\\\" #formAgregarMedico tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormAgregarMedico >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Agregar nuevo paciente</h3>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\" >\\n        <!-- <div class=\\\"modal-body\\\" *ngIf = 'horaNuevoTurno != null && diaNuevoTurno != null && pacientes != null' > -->\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Nombre</label>\\n          <div class=\\\"input-group\\\"><input  #nombreMedico placeholder=\\\"Ej: Jorge\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Apellido</label>\\n          <div class=\\\"input-group\\\"><input  #apellidoMedico placeholder=\\\"Ej: Perez\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <div class=\\\"input-group\\\"><input  #emailMedico placeholder=\\\"Ej: ejemplo@gmail.com\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Fecha de Nacimiento</label>\\n          <div class=\\\"input-group\\\"><input  #nacimientoMedico placeholder=\\\"Ej: 1994-07-21\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Matricula</label>\\n          <div class=\\\"input-group\\\"><input  #matriculaMedico placeholder=\\\"Ej: Perez\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Duracion del turno</label>\\n          <div class=\\\"input-group\\\"><input type=\\\"text\\\"#duracionTurno class=\\\"form-control\\\"></div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <label for=\\\"\\\">Obras sociales que el medico acepta</label>\\n          <div id=\\\"divSelector\\\" class=\\\"\\\">\\n\\n            <select2\\n            *ngIf = 'actualizado == true'\\n            [data]=\\\"obrasSelectorMedico\\\"\\n            [options]=\\\"options\\\"\\n            [width]=\\\"300\\\"\\n            [value]=\\\"value\\\"\\n            [cssImport]=\\\"true\\\"\\n\\n            (valueChanged)=\\\"changedObraMedico($event)\\\"\\n            ></select2>\\n\\n        </div>\\n      </div>\\n\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n          Cancelar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\"\\n        (click)='agregarMedico(nombreMedico.value,apellidoMedico.value,\\n        emailMedico.value, matriculaMedico.value, nacimientoMedico.value, duracionTurno.value);\\n        nombreMedico.value = null;\\n        apellidoMedico.value = null;\\n        emailMedico.value = null;\\n        duracionTurno.value = null;\\n        matriculaMedico.value = null;\\n        nacimientoMedico.value = null;\\n\\n        '>\\n        Agregar\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/agregarMedico/agregarMedico.html\n// module id = ../../../../../src/app/medico/agregarMedico/agregarMedico.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\nimport { Medico } from '../medico.tipo';\nimport { MedicosService } from '../medicos.service';\n\nimport { Obra } from '../../obras/obra.tipo';\nimport { ObrasService } from '../../obras/obras.service';\n\nimport {default as swal} from 'sweetalert2';\n\n@Component({\n  selector: 'agregar-medico',\n  templateUrl: './agregarMedico.html'\n})\nexport class AgregarMedicoComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  // @Input() pacientes: Array<any>;\n  @Input() obras: Obra[];\n  @Output() medicoAgregado = new EventEmitter();\n\n  @ViewChild('closeFormAgregarMedico') closeFormAgregarMedico: ElementRef;\n\n  // private obras: Obra[];\n  private obrasSelected: Obra[] = null;\n\n  //Para el selector de obras\n  public obrasSelectorMedico: Array<any> = [];\n  public options: Select2Options;\n  public value: any[] = [];\n  public current: string;\n  public actualizado: boolean = false;\n\n  constructor(\n    private medicosService: MedicosService,\n    private obrasService: ObrasService\n  ){\n\n  }\n\n  /*\n  */\n  ngOnInit() {\n    console.log(' $$$$  ENTRE!!!!!!!!');\n    this.actualizarSelector();\n    // this.obrasService.getObras().then(\n    //   obras =>{\n    //     this.obras = obras;\n    //     this.actualizarSelector();\n    //   }\n    // ).catch(error=>{console.log(error)})\n  }\n\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n\n  }\n\n  /*\n\n  */\n  public agregarMedico(nombreMedico,apellidoMedico, emailMedico, matriculaMedico,\n    nacimientoMedico, duracionMedico){\n      ////console.log('Entre a agregar Paciente');\n\n\n      //let obraId = this.obraSelected._id;\n      let obrasAsignadas = this.asignarObras();\n\n      let nuevoMedico = {\n        matricula: matriculaMedico,\n        email: emailMedico,\n        nombre: nombreMedico,\n        apellido: apellidoMedico,\n        duracion: duracionMedico,\n        obras: obrasAsignadas,\n        fechaNacimiento: nacimientoMedico\n      }\n\n      // console.log('Estoy enviando el siguiente medico ', nuevoMedico);\n\n      this.medicosService.createMedico(nuevoMedico).then().catch(err => {\n        console.log('Ha ocurrido un error en el componente AgregarMedico');\n        console.log(err);\n      })\n      /*\n      this.medicosService.createPaciente(nombrePaciente,apellidoPaciente, dniPaciente,\n        emailPaciente, nacimientoPaciente, telefonoPaciente, obraId, ocupacion, observaciones)\n        .then(pacienteNuevo => {\n\n          ////console.log('Se creo el paciente con exito');\n          ////console.log(paciente);\n\n          //Enviamos la eleccion al componente padre\n          this.medicoAgregado.next(pacienteNuevo);\n\n          //Cerramos el modal\n          this.obraSelected = null;\n          this.actualizado = false;\n          this.closeFormAgregarMedico.nativeElement.click();\n\n\n        });\n      */\n\n\n\n\n  }\n\n\n      /*\n\n      */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    this.obrasSelected = null;\n    this.actualizado = false;\n    this.closeFormAgregarMedico.nativeElement.click();\n  }\n\n  //****************************************************************************\n  //Metodos del selector\n\n\n  public actualizarSelector(){\n    if(this.obras!=null){\n      ////console.log('Entre a Ng on Changes del modal configurar semana');\n\n\n      let yo = this;\n      this.obras.forEach(function(elem,index){\n        /*\n        Dado que estamos usando el componente ng2-select,\n        debemos tener un arreglo en el que cada objeto TENGA:\n        un atributo 'id'\n        un atributo 'text'\n        */\n        yo.obrasSelectorMedico[index] = elem;\n        yo.obrasSelectorMedico[index].id = elem._id;\n        yo.obrasSelectorMedico[index].text = elem.nombre;\n      });\n      // console.log('Lo logre');\n      // console.log(this.obrasSelectorMedico);\n      this.iniciarSelectorObras();\n\n      if(yo.obrasSelectorMedico.length > 0){\n        ////console.log('TRUE');\n        this.actualizado = true;\n      }\n    }\n  }\n\n  private iniciarSelectorObras(){\n\n\n\n\n    this.options = {\n      multiple: true\n    }\n\n    this.current = this.value.join(' | ');\n  }\n\n  public asignarObras(){\n\n    let obrasAsignadas = [];\n    let yo = this;\n\n    // console.log('yo.value');\n    // console.log(yo.value);\n\n    if(this.obrasSelectorMedico.length > 0){\n      this.obrasSelectorMedico.forEach(function(elem,index){\n        for (let i = 0; i < yo.value.length; i++) {\n\n          if(elem.id.toString() == yo.value[i]){\n            // console.log('****************************************');\n            // console.log('encontre!');\n            obrasAsignadas.push(elem._id); //clonamos el elemento\n          }\n        }\n\n      });\n    }\n\n\n\n    //Quitamos los atributos agregados para el selector del clone\n    // delete pacienteAsignado['id'];\n    // delete pacienteAsignado['text'];\n    // ////console.log(pacienteAsignado);\n\n    return obrasAsignadas;\n  }\n\n  //---------------------------------------------------------------------------\n  //Metodos originales del componente\n\n\n  changedObraMedico(data: {value: string[]}) {\n    this.current = data.value.join(' | ');\n    this.value = data.value;\n    //console.log(this.current);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/agregarMedico/agregarMedico.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n\\n.ng-invalid.ng-touched {\\n  border-left: 5px solid #a94442 !important; /* red */\\n  border-color:  #a94442 !important; /* red */\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(169,68,66,.6) !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/editarMedico/editarMedico.css\n// module id = ../../../../../src/app/medico/editarMedico/editarMedico.css\n// module chunks = main","module.exports = \"<!-- Modal Formulario Editar Medicos -->\\n<div class=\\\"modal fade\\\" id=\\\"formEditarMedico\\\" #formEditarMedico tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormEditarMedico >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Actualizar Medico</h3>\\n      </div>\\n\\n      <!-- <div class=\\\"modal-body\\\" > -->\\n      <div class=\\\"modal-body\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label>Nombre</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoNombre=\\\"ngModel\\\" minlength=\\\"1\\\" required #nombreMedico [(ngModel)]=\\\"modeloMedico.nombre\\\" placeholder=\\\"Ej: Martin\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoNombre.invalid && (estadoNombre.dirty || estadoNombre.touched)\\\" class=\\\"alert alert-danger\\\">\\n              El nombre es obligatorio\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Apellido</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoApellido=\\\"ngModel\\\" minlength=\\\"1\\\" required  #apellidoMedico [(ngModel)]=\\\"modeloMedico.apellido\\\" placeholder=\\\"Ej: Martin\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoApellido.invalid && (estadoApellido.dirty || estadoApellido.touched)\\\" class=\\\"alert alert-danger\\\">\\n              El apellido es obligatorio\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoEmail=\\\"ngModel\\\" minlength=\\\"1\\\" required #emailMedico [(ngModel)]=\\\"modeloMedico.email\\\" placeholder=\\\"Ej: medico@gmail.com\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoEmail.invalid && (estadoEmail.dirty || estadoEmail.touched)\\\" class=\\\"alert alert-danger\\\">\\n              El email es obligatorio\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Duracion del turno</label>\\n          <div class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"modeloMedico.duracion\\\" #duracionTurno class=\\\"form-control\\\"></div>\\n        </div>\\n\\n        <label for=\\\"\\\">Obras sociales aceptadas</label>\\n        <div class=\\\"form-group\\\">\\n\\n\\n          <div id=\\\"divSelector\\\" class=\\\"\\\">\\n\\n            <select2\\n            *ngIf = 'actualizado == true'\\n            [data]=\\\"obrasSelector\\\"\\n            [options]=\\\"options\\\"\\n            [width]=\\\"500\\\"\\n            [value]=\\\"value\\\"\\n            [cssImport]=\\\"true\\\"\\n\\n            (valueChanged)=\\\"changed($event)\\\"\\n            ></select2>\\n\\n\\n\\n            <!--\\n            [cssImport]=\\\"false\\\"\\n\\n            <ng-select  *ngIf = 'actualizado == true'\\n            [multiple]=\\\"true\\\"\\n            [allowClear]=\\\"true\\\"\\n            [items]=\\\"obrasSelector\\\"\\n            [disabled]=\\\"disabled\\\"\\n            (data)=\\\"refreshValue($event)\\\"\\n            (selected)=\\\"selected($event)\\\"\\n            (removed)=\\\"removed($event)\\\"\\n            (typed)=\\\"typed($event)\\\"\\n            placeholder=\\\"Obras sociales\\\">\\n          </ng-select> -->\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n\\n      <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n        Cancelar\\n      </button>\\n\\n      <button class=\\\"btn btn-primary\\\"  [disabled]=\\\"estadoNombre.invalid || estadoApellido.invalid\\\" (click)='actualizarDatos(modeloMedico.nombre,modeloMedico.apellido,modeloMedico.email,modeloMedico.duracion)'>\\n        Guardar\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/editarMedico/editarMedico.html\n// module id = ../../../../../src/app/medico/editarMedico/editarMedico.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\n// import { Paciente } from '../paciente.tipo';\n// import { PacientesService } from '../pacientes.service';\n\nimport { Obra } from '../../obras/obra.tipo';\nimport {ConfiguracionMedicoService} from '../../configuracion-medico/configuracion-medico.service';\n\nimport { ObrasCompartidasService } from '../../routerService/obras.sistema';\nimport { MedicosCompartidosService } from '../../routerService/medicos.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\n// import { ObrasService } from '../../obras/obras.service';\n\nimport {default as swal} from 'sweetalert2';\ndeclare var $: any;\n@Component({\n  selector: 'editar-medico',\n  templateUrl: './editarMedico.html',\n  styleUrls: ['./editarMedico.css']\n})\nexport class EditarMedicoComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  @Input() medicoSeleccionado: any;\n  @Output() medicoEditado = new EventEmitter();\n  @Output() medicoEliminado = new EventEmitter();\n\n  @ViewChild('closeFormEditarMedico') closeFormEditarMedico: ElementRef;\n\n  public obraSelected: Obra = null;\n  public obras: Obra[];\n\n  public modeloMedico = null;\n\n  private medicosSubscription: Subscription;\n  private obrasSubscription: Subscription;\n\n  public actualizado: boolean = false;\n  public obrasSelector: Array<any> = [];\n  public options: Select2Options;\n  public value: any[] = [];\n  public current: string;\n\n  private _disabledV:string = '0';\n  private disabled:boolean = false;\n  constructor(\n    private configuracionMedicoService: ConfiguracionMedicoService,\n    private medicosCompartidos: MedicosCompartidosService,\n    private obrasCompartidas: ObrasCompartidasService\n  ){\n    this.modeloMedico = {};\n  }\n\n\n  /*\n  */\n  ngOnInit() {\n    this.modeloMedico = Object.assign({}, this.medicoSeleccionado); //clonamos el medico\n    this.observarObras();\n  }\n\n  observarObras(){\n    /*\n      Subscribimos a los obras, para que tengan una correspondencia\n      con los obras del navigator\n    */\n    if(this.obrasCompartidas.obras$){\n      this.obrasSubscription = this.obrasCompartidas.obras$.subscribe((obras) => {\n\n          this.obras = obras;\n          this.actualizarSelector();\n        // this.ref.markForCheck();\n      }, (err) => {\n        console.log('Error en observarObras de tablaObras');\n        console.error(err);\n      });\n\n      // Obtenemos los pacientes compartidos\n      this.obrasCompartidas.getObras();\n    }\n  }\n\n  public actualizarSelector(){\n    if(this.obras!=null){\n      ////console.log('Entre a Ng on Changes del modal configurar semana');\n\n\n      let yo = this;\n\n      // Actualizamos las obras posibles\n      this.obras.forEach(function(elem,index){\n        /*\n        Dado que estamos usando el componente ng2-select,\n        debemos tener un arreglo en el que cada objeto TENGA:\n        un atributo 'id'\n        un atributo 'text'\n        */\n        yo.obrasSelector[index] = elem;\n        yo.obrasSelector[index].id = elem._id;\n        yo.obrasSelector[index].text = elem.nombre;\n      });\n\n      this.iniciarSelectorObras();\n\n\n      if(yo.obrasSelector.length > 0){\n        ////console.log('TRUE');\n        this.actualizado = true;\n      }\n    }\n  }\n\n  private iniciarSelectorObras(){\n\n    this.options = {\n      multiple: true\n    }\n\n    this.current = this.value.join(' | ');\n\n    // Hacemos que el selector empiece con las obras del medico seleccionadas\n    let listaAux = [];\n    if(this.medicoSeleccionado.obras){\n      // console.log(this.medicoSeleccionado.obras);\n      this.medicoSeleccionado.obras.forEach(function(elem,index){\n        listaAux.push(elem._id);\n      });\n      this.value = listaAux;\n    }\n  }\n\n  public actualizarDatos(nombre,apellido,email,duracionTurno){\n    let id = this.medicoSeleccionado._id;\n    let idUsuario = this.medicoSeleccionado._idUsuario;\n    let emailMedico = email.toLowerCase();\n\n    let yo = this;\n\n    let obrasAsignadas = this.asignarObras();\n\n    this.configuracionMedicoService.actualizarMedico(id,nombre,apellido,emailMedico, duracionTurno,obrasAsignadas, idUsuario).then(medicoNuevo =>{\n\n      // let id = medicoNuevo._id;\n      // let index = this.getIndex();\n\n      yo.medicoSeleccionado.nombre = nombre;\n      yo.medicoSeleccionado.apellido = apellido;\n      yo.medicoSeleccionado.duracion = medicoNuevo.duracion;\n      yo.medicoSeleccionado.email = medicoNuevo.email;\n      // console.log(medicoNuevo.obras);\n      yo.medicoSeleccionado.obras = medicoNuevo.obras;\n\n      //Actualizamos los medicos compartidos (para el navigator)\n      yo.medicosCompartidos.updateMedico(medicoNuevo);\n\n      yo.closeFormEditarMedico.nativeElement.click();\n      yo.medicoEditado.next(medicoNuevo);\n\n    });\n  }\n\n  public asignarObras(){\n\n    let obrasAsignadas = [];\n    let yo = this;\n\n    // console.log('yo.value');\n    // console.log(yo.value);\n\n    this.obrasSelector.forEach(function(elem,index){\n      for (let i = 0; i < yo.value.length; i++) {\n\n        if(elem.id.toString() == yo.value[i]){\n          // console.log('****************************************');\n          // console.log('encontre!');\n          obrasAsignadas.push(elem._id); //clonamos el elemento\n        }\n      }\n\n    });\n\n    //Quitamos los atributos agregados para el selector del clone\n    // delete pacienteAsignado['id'];\n    // delete pacienteAsignado['text'];\n    // ////console.log(pacienteAsignado);\n\n    return obrasAsignadas;\n  }\n\n\n\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n    this.iniciarSelectorObras();\n    this.modeloMedico = Object.assign({}, this.medicoSeleccionado); //clonamos el medico\n  }\n\n\n\n\n  // eliminar(paciente){\n  //   let yo = this;\n  //   swal({\n  //     title: '¿Estas seguro que queres habilitar al paciente?',\n  //     //text: \"No seras capaz de revertir esta accion!\",\n  //     type: 'warning',\n  //     showCancelButton: true,\n  //     confirmButtonColor: '#3085d6',\n  //     cancelButtonColor: '#d33',\n  //     confirmButtonText: 'Si, Eliminar!',\n  //     cancelButtonText: 'Cancelar',\n  //   }).then(function () {\n  //     console.log('paciente');\n  //     console.log(paciente);\n  //     yo.pacientesService.eliminarPaciente(paciente._id).then(pac => {\n  //       // ////console.log(\"Paciente eliminado\");\n  //       // ////console.log(pac);\n  //       yo.pacienteEliminado.next(pac);\n  //\n  //       yo.obraSelected = null;\n  //       yo.closeFormEditarPaciente.nativeElement.click();\n  //     }).catch(err => console.error(err))\n  //   }).catch(swal.noop);\n  // }\n\n\n  /*\n\n  */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    this.obraSelected = null;\n    this.closeFormEditarMedico.nativeElement.click();\n  }\n\n\n  //---------------------------------------------------------------------------\n  //Metodos originales del componente\n\n\n  changed(data: {value: string[]}) {\n    this.current = data.value.join(' | ');\n    this.value = data.value;\n    //console.log(this.current);\n  }\n\n\n  private get disabledV():string {\n    return this._disabledV;\n  }\n\n  private set disabledV(value:string) {\n    this._disabledV = value;\n    this.disabled = this._disabledV === '1';\n  }\n  public selected(value:any):void {\n    ////console.log('Selected value is: ', value);\n  }\n\n  public removed(value:any):void {\n    ////console.log('Removed value is: ', value);\n  }\n\n  public typed(value:any):void {\n    ////console.log('New search input: ', value);\n  }\n\n  public refreshValue(value:any):void {\n    this.value = value;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/editarMedico/editarMedico.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers} from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { Medico } from './medico.tipo';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { AuthService } from '../authentication/auth.service';\r\n\r\n@Injectable()\r\nexport class MedicosService {\r\n\r\n\tprivate headers = new Headers({'Content-Type': 'application/json'});\r\n    private medicosURL = environment.apiUrl +'/medicos';  // URL to web api\r\n\r\n\tconstructor(private http: Http, private authService: AuthService) {\r\n\r\n\t}//Al ser promise (y no Observable), no le quita reactividad?\r\n\tgetDoctores(): Promise<Medico[]>{\r\n        return this.http.get(this.medicosURL,this.authService.jwt())\r\n        .toPromise()\r\n        .then(response => {\r\n\t\t\t// ////console.log(response.json());\r\n\t\t\treturn response.json() as Medico[];\r\n\t\t})\r\n        .catch(this.handleError);\r\n    }\r\n\r\n\t\tpublic createMedico(nuevoMedico): Promise <any>{\r\n\t\t\treturn this.http.post(this.medicosURL, nuevoMedico, this.authService.jwtContentType()).toPromise().\r\n\t\t\tthen(res => {\r\n\t\t\t\t// console.log('Se ha creado el siguiente medico:');\r\n\t\t\t\t// console.log(res.json());\r\n\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.catch(err => this.handleError);\r\n\t\t}\r\n\r\n\tpublic actualizarSemana(id,semana): Promise<any[]>{\r\n\t\treturn this.http.patch(this.medicosURL+'/'+id,{semanaEsquema:semana},this.authService.jwt()).toPromise().then(respuesta => {\r\n\t\t\t//console.log(\"Semana actualizada\");\r\n\t\t\t//console.log(respuesta);\r\n\t\t\treturn respuesta.json();\r\n\t\t}).catch(err => this.handleError);\r\n\t}\r\n\r\n\tprivate handleError(error: any): Promise<any> {\r\n        console.error('Ocurrio un error en servicio de Medicos: ', error);\r\n        // alert(error.json().error);\r\n        return Promise.reject(error.message || error);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/medicos.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Structure */\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding-left: 24px;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: baseline;\\n      -ms-flex-align: baseline;\\n          align-items: baseline;\\n  padding: 8px 24px 0;\\n  font-size: 20px;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1;\\n  margin-left: 32px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\nmd-cell {\\n  /* 20%  =  5 columnas ; */\\n  max-width: 20%;\\n   white-space: nowrap;\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n  /*word-wrap:break-word*/\\n}\\nmd-header-cell {\\n  /* 20%  =  5 columnas ; 16 = 6 columnas */\\n  max-width: 20%;\\n   white-space: nowrap;\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n  /*word-wrap:break-word*/\\n}\\n\\n/* Define the hover highlight color for the table row */\\n.hoverTable md-row:hover {\\n      background-color: #f5f5f5;\\n}\\n.hoverTable md-row:active  {\\n      background-color: #ddd;\\n}\\n.isSpecial{\\n  background-color: #f5f5f5;\\n}\\n\\n.hoverTable {\\n  /*font-family: arial, sans-serif;*/\\n  /*border-collapse: collapse;*/\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-top: 1px solid #ddd;\\n}\\n\\nmd-paginator {\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-bottom: 1px solid #ddd;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/tablaMedicos/tablaMedicos.component.css\n// module id = ../../../../../src/app/medico/tablaMedicos/tablaMedicos.component.css\n// module chunks = main","module.exports = \"<div class=\\\" example-container \\\">\\n  <!-- <h4>Seleccione el trabajo deseado</h4> -->\\n  <!-- <h2 class=\\\"col-xs-6\\\">Pacientes</h2> -->\\n  <!-- <h2 class=\\\"col-lg-6\\\">Pacientes</h2> -->\\n\\n\\n  <div class=\\\"\\\">\\n    <h2 class=\\\"col-lg-8\\\">Medicos</h2>\\n    <div class=\\\"col-lg-4\\\">\\n          <style media=\\\"screen\\\">\\n          #agregarObra{\\n              margin-top: 5%;\\n              margin-bottom: 2%;\\n            }\\n\\t.mouse-pointer{\\n\\n            cursor: pointer;\\n          }\\n          </style>\\n           <div id='agregarObra' class=\\\"row\\\">\\n               <button class=\\\"btn btn-s btn-primary pull-right\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#formAgregarMedico\\\" ><i class=\\\"fa fa-plus\\\"></i></button>\\n           </div>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"example-header\\\">\\n\\n    <md-form-field floatPlaceholder=\\\"never\\\">\\n      <input mdInput #filter placeholder=\\\"Buscar Medicos\\\">\\n    </md-form-field>\\n\\n\\n  </div>\\n  <md-table class='hoverTable col-lg-12 mouse-pointer'\\n  selectable-rows=\\\"true\\\"\\n  table-card=\\\"{title: Nutrition, actionIcons: true}\\\"\\n  #table [dataSource]=\\\"dataSource\\\" mdSort>\\n\\n  <!-- Matricula Column -->\\n  <ng-container mdColumnDef=\\\"matricula\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Matricula </md-header-cell>\\n    <md-cell  (click)=\\\"editarMedico(row)\\\" *mdCellDef=\\\"let row\\\"> {{row.matricula}} </md-cell>\\n  </ng-container>\\n\\n  <!-- Nombre Column -->\\n  <ng-container mdColumnDef=\\\"nombre\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Nombre </md-header-cell>\\n    <md-cell (click)=\\\"editarMedico(row)\\\" *mdCellDef=\\\"let row\\\"> {{row.nombre}} </md-cell>\\n  </ng-container>\\n\\n  <!-- Apellido Column -->\\n  <ng-container mdColumnDef=\\\"apellido\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Apellido </md-header-cell>\\n    <md-cell (click)=\\\"editarMedico(row)\\\" *mdCellDef=\\\"let row\\\"> {{row.apellido}} </md-cell>\\n  </ng-container>\\n\\n  <!-- Duracion Turnos Column -->\\n  <ng-container mdColumnDef=\\\"duracion\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Duracion Turnos </md-header-cell>\\n    <md-cell (click)=\\\"editarMedico(row)\\\" *mdCellDef=\\\"let row\\\"> {{row.duracion}} </md-cell>\\n  </ng-container>\\n\\n  <!-- Duracion Turnos Column -->\\n  <ng-container mdColumnDef=\\\"acciones\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Semana </md-header-cell>\\n    <md-cell *mdCellDef=\\\"let row\\\">\\n      <button (click)=\\\"configurarSemana(row)\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-cog\\\" aria-hidden=\\\"true\\\"></i></button>\\n    </md-cell>\\n  </ng-container>\\n\\n\\n  <!-- Acciones  -->\\n  <!-- <ng-container mdColumnDef=\\\"acciones\\\">\\n    <md-header-cell *mdHeaderCellDef> Acciones </md-header-cell>\\n    <md-cell *mdCellDef=\\\"let row\\\">\\n\\n\\n      <button *ngIf=\\\"!row.sancion\\\" (click)=\\\"sancionar(row)\\\" class=\\\"btn btn-warning\\\">Sancionar</button>\\n      <button *ngIf=\\\"row.sancion\\\" (click)=\\\"habilitar(row)\\\" class=\\\"btn btn-primary\\\">Habilitar</button>\\n      <button (click)=\\\"eliminar(row)\\\" class=\\\"btn btn-danger\\\">Eliminar</button>\\n\\n    </md-cell>\\n  </ng-container> -->\\n\\n\\n  <md-header-row  *mdHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\n  <md-row  [ngClass]=\\\"{'isSpecial':  row._id == medicoSeleccionado._id}\\\" *mdRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"rowClick(row)\\\"></md-row>\\n\\n</md-table>\\n\\n<div class=\\\"example-no-results\\\"\\n[style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\nNo se encuentran medicos que coincidan con la búsqueda!\\n</div>\\n\\n<md-paginator #paginator\\n[length]=\\\"exampleDatabase.data.length\\\"\\n[pageIndex]=\\\"0\\\"\\n[pageSize]=\\\"5\\\"\\n[pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n</md-paginator>\\n\\n</div>\\n<br>\\n\\n\\n<editar-medico *ngIf = 'medicoSeleccionado._id'\\n[medicoSeleccionado]='medicoSeleccionado'\\n(medicoEditado)='onMedicoEditado($event)'\\n>\\n</editar-medico>\\n\\n<app-modal-semana *ngIf=\\\"medicoSeleccionado != null && medicoSeleccionado.obras\\\" [obrasDispTotales]=\\\"medicoSeleccionado.obras\\\" [medico]=\\\"medicoSeleccionado\\\"\\n(semenaCambiada)='onIntervalosGuardados($event)'\\n></app-modal-semana>\\n\\n<agregar-medico  *ngIf=\\\"obras && obras.length > 0\\\"\\n[obras]='obras'\\n(medicoAgregado)='onMedicoAgregado($event)'\\n></agregar-medico>\\n<!-- <editar-obra *ngIf = 'medicoSeleccionado._id'\\n  [obra]='medicoSeleccionado'\\n  (obraEditada)='onObraEditada($event)'\\n  (obraEliminada)='onObraEliminada($event)'\\n></editar-obra>\\n<agregar-obra\\n  (obraAgregada)='onObraAgregada($event)'\\n></agregar-obra> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/tablaMedicos/tablaMedicos.component.html\n// module id = ../../../../../src/app/medico/tablaMedicos/tablaMedicos.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n//Para el data table\nimport { ElementRef, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/fromEvent';\n\nimport {SelectionModel} from '@angular/cdk/collections';\n\n//Para ordenar la tabla\nimport {MdSort} from '@angular/material';\n\n//Para paginar la tabla\nimport {MdPaginator} from '@angular/material';\n\nimport {ConfiguracionMedicoService} from '../../configuracion-medico/configuracion-medico.service';\nimport { Obra } from '../../obras/obra.tipo';\n\nimport { MedicosCompartidosService } from '../../routerService/medicos.sistema';\nimport { ObrasCompartidasService } from '../../routerService/obras.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\n//\nimport {default as swal} from 'sweetalert2';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-tabla-medicos',\n  templateUrl: './tablaMedicos.component.html',\n  styleUrls: ['./tablaMedicos.component.css']\n})\nexport class TablaMedicosComponent implements OnInit {\n\n  @Output() medicoSeleccionadoEvento = new EventEmitter();\n\n  displayedColumns = ['matricula', 'nombre', 'apellido', 'duracion', 'acciones'];\n  exampleDatabase : ExampleDatabase;\n  dataSource: ExampleDataSource | null;\n\n  selection = new SelectionModel<string>(true, []);\n\n  public obras: Obra[];\n  private obrasSubscription: Subscription;\n\n  medicoSeleccionado = {\n    'id' : ''\n  };\n\n  constructor(\n    private medicosCompartidos: MedicosCompartidosService,\n    private obrasCompartidas: ObrasCompartidasService,\n    private configuracionMedicoService: ConfiguracionMedicoService\n  ){\n    this.exampleDatabase = new ExampleDatabase(medicosCompartidos);\n  }\n\n  @ViewChild('filter') filter: ElementRef;\n  @ViewChild(MdSort) sort: MdSort;\n  @ViewChild(MdPaginator) paginator: MdPaginator;\n\n  rowClick(row){\n    row.seleccionada = !row.seleccionada;\n    this.medicoSeleccionado = row;\n  }\n\n  siguiente(){\n    this.medicoSeleccionadoEvento.next(this.medicoSeleccionado);\n  }\n\n  ngOnInit() {\n\n\n    this.observarObras();\n\n    this.medicoSeleccionado = {\n      'id' : ''\n    };\n\n    // LABEL de items per page de la tabla\n    this.paginator._intl.itemsPerPageLabel = 'Obras por página';\n\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.sort, this.paginator);\n\n    Observable.fromEvent(this.filter.nativeElement, 'keyup')\n    .debounceTime(150)\n    .distinctUntilChanged()\n    .subscribe(() => {\n      if (!this.dataSource) {\n        return; }\n        else{\n\n          let valorFiltro = this.filter.nativeElement.value;\n          this.dataSource.filter = valorFiltro;\n        }\n      });\n    }\n\n    observarObras(){\n      /*\n        Subscribimos a los obras, para que tengan una correspondencia\n        con los obras del navigator\n      */\n      if(this.obrasCompartidas.obras$){\n        this.obrasSubscription = this.obrasCompartidas.obras$.subscribe((obras) => {\n\n            this.obras = obras;\n          // this.ref.markForCheck();\n        }, (err) => {\n          console.log('Error en observarObras de tablaMedicos');\n          console.error(err);\n        });\n\n        // Obtenemos los pacientes compartidos\n        this.obrasCompartidas.getObras();\n      }\n    }\n\n    onMedicoAgregado(medico){\n      this.exampleDatabase.addMedico(medico);\n    }\n\n    onMedicoEditado(medico){\n      this.exampleDatabase.editMedico(medico);\n    }\n\n\n    editarMedico(medico){\n\n      this. medicoSeleccionado = medico;\n      /*\n      FIX TEMPORAL: El timeout es para obligar a que el ngIf que proteje el modal,\n      alcance a hacerse true.\n      */\n      setTimeout(()=> {\n        $('#formEditarMedico').modal('show');\n      },\n      200);\n    }\n\n\n    onMedicoEliminados(medico){\n      this.exampleDatabase.removeMedico(medico);\n    }\n\n    // Metodos de configurar semana\n    configurarSemana(medico){\n      console.log('########################## Configurar Semana');\n      console.log(medico);\n      this.medicoSeleccionado = medico;\n      let semanaGuardada;\n      this.configuracionMedicoService.getSemanaModelo(medico).then(semana =>{\n        //Abrimos el modal...\n        semanaGuardada = semana;\n\n        console.log('########################## Configurar Semana');\n        $('#formConfigSemana').modal('show');\n        ////console.log(\"LA SEMANA Q LE LLEGA AL COMPONENT ES....\");\n        ////console.log(semana);\n      });\n    }\n\n    onIntervalosGuardados(medicoCambiado){\n\n      /*\n        OBS: el medico viene SIN los datos de usuario.\n        Es decir, no tenemos el nombre, apellido, etc.\n        Solo debemos actualizar los datos de la semanaEsquema del medico\n      */\n\n\n      //Actualizamos el medico modificado\n      this.exampleDatabase.actualizarSemana(medicoCambiado);\n\n      //Sacamos la seleccion del medico, para que dsps no haya inconsistencias\n      this.medicoSeleccionado = {\n        'id' : ''\n      };\n\n\n\n\n    }\n\n  }\n\n\n  //****************************************************************************\n\n  /**\n  Base de datos para la tabla.\n  */\n  export class ExampleDatabase {\n    /** Stream that emits whenever the data has been modified. */\n    dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n    get data(): any[] { return this.dataChange.value; }\n    private medicosSubscription: Subscription;\n\n    constructor(private medicosCompartidos: MedicosCompartidosService) {\n      this.observarMedicos();\n    }\n\n    observarMedicos(){\n      /*\n      Subscribimos a los medicos, para que tengan una correspondencia\n      con los medicos del navigator\n      */\n      if(this.medicosCompartidos.medicos$){\n        this.medicosSubscription = this.medicosCompartidos.medicos$.subscribe((medicos) => {\n\n          console.log('ENTRE A LA SUBSCRIPCION desde tabla Medicos');\n          this.setMedicos(medicos);\n          // this.ref.markForCheck();\n        }, (err) => {\n          console.error(err);\n        });\n      }\n    }\n\n\n    /**\n    Pasamos nuestros medicos al observer\n    */\n    setMedicos(medicos: any[]) {\n      let copiedData = medicos;\n      this.dataChange.next(medicos);\n    }\n\n\n    addMedico(medico) {\n\n      this.medicosCompartidos.addMedico(medico);\n\n    }\n\n    editMedico(medicoEditado){\n      this.medicosCompartidos.updateMedico(medicoEditado);\n    }\n\n    removeMedico(medico){\n\n      this.medicosCompartidos.deleteMedico(medico);\n\n    }\n\n    actualizarSemana(medicoCambiado){\n\n\n      this.medicosCompartidos.actualizarSemana(medicoCambiado);\n\n    }\n\n\n\n  }\n\n\n  //****************************************************************************\n\n  /**\n  Esta clase solo se encarga de hacer el renderizado de la tabla,\n  basandose en los datos de ExampleDatabase.\n  */\n  export class ExampleDataSource extends DataSource<any> {\n    _filterChange = new BehaviorSubject('');\n    get filter(): string { return this._filterChange.value; }\n    set filter(filter: string) { this._filterChange.next(filter); }\n\n\n    filteredData: any[] = [];\n    renderedData: any[] = [];\n\n    constructor(private _exampleDatabase: ExampleDatabase,  private _sort: MdSort,  private _paginator: MdPaginator) {\n      super();\n    }\n\n    /**\n    Esta funcion es llamada por la tabla para buscar el stream de datos para renderizar.\n    */\n    connect(): Observable<any[]> {\n      const displayDataChanges = [\n        this._exampleDatabase.dataChange,\n        this._filterChange,\n        this._sort.mdSortChange,\n        this._paginator.page\n      ];\n\n      return Observable.merge(...displayDataChanges).map(() => {\n        // console.log(displayDataChanges);\n\n        //Preparamos el FILTRO de la tabla\n        this.filteredData =   this._exampleDatabase.data.slice().filter((item: any) => {\n\n          // Concatenamos los filtros para armar el string de busqueda\n          let searchStr = (item.matricula + item.nombre + item.apellido + item.duracion + item.acciones).toLowerCase();\n\n          return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n        });\n\n        // Ordenamiento de datos\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n\n\n        return this.renderedData;\n      });\n    }\n\n    disconnect() {}\n\n    /**\n    Retorna una copia ordenada de los datos.\n    */\n    sortData(data: any[]): any[] {\n      if (!this._sort.active || this._sort.direction == '') { return data; }\n\n      return data.sort((a, b) => {\n        let propertyA: number|string = '';\n        let propertyB: number|string = '';\n\n        switch (this._sort.active) {\n          case 'matricula': [propertyA, propertyB] = [a.matricula, b.matricula]; break;\n          case 'nombre': [propertyA, propertyB] = [a.nombre, b.nombre]; break;\n          case 'apellido': [propertyA, propertyB] = [a.apellido, b.apellido]; break;\n          case 'duracion': [propertyA, propertyB] = [a.duracion, b.duracion]; break;\n        }\n\n        let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n        let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n        return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n      });\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/medico/tablaMedicos/tablaMedicos.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n\\n.ng-invalid.ng-touched {\\n  border-left: 5px solid #a94442 !important; /* red */\\n  border-color:  #a94442 !important; /* red */\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(169,68,66,.6) !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/agregarObra/agregarObra.css\n// module id = ../../../../../src/app/obras/agregarObra/agregarObra.css\n// module chunks = main","module.exports = \"<!-- Modal Formulario Crear Obra -->\\n<div class=\\\"modal fade\\\" id=\\\"formCrearObra\\\" #formCrearObra tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" (click)=\\\"reiniciarFormulario(formulario)\\\" #closeformCrearObra >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Crear Obra Social</h3>\\n      </div>\\n\\n\\n      <form #formulario=\\\"ngForm\\\">\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Iniciales</label>\\n            <div class=\\\"input-group\\\">\\n              <input #estadoIniciales=\\\"ngModel\\\" minlength=\\\"1\\\" required  name=\\\"inicialesObra\\\" [(ngModel)]='obraNueva.iniciales' #inicialesObra type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div *ngIf=\\\"estadoIniciales.invalid && (estadoIniciales.dirty || estadoIniciales.touched)\\\" class=\\\"alert alert-danger\\\">\\n                Debe tener al menos 1 inicial.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Nombre</label>\\n            <div class=\\\"input-group\\\">\\n              <input #estadoNombre=\\\"ngModel\\\" minlength=\\\"1\\\" required   [(ngModel)]='obraNueva.nombre'  name=\\\"nombreObra\\\" #nombreObra type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div *ngIf=\\\"estadoNombre.invalid && (estadoNombre.dirty || estadoNombre.touched)\\\" class=\\\"alert alert-danger\\\">\\n                El nombre es obligatorio\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n\\n\\n      <div class=\\\"modal-footer\\\">\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelarModalCrear()'>\\n          Cancelar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"estadoNombre.invalid || estadoIniciales.invalid\\\"\\n        (click)='crearObra(inicialesObra.value,nombreObra.value);\\n\\n        '>\\n        Guardar\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/agregarObra/agregarObra.html\n// module id = ../../../../../src/app/obras/agregarObra/agregarObra.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\nimport { Obra } from '../obra.tipo';\nimport { ObrasService } from '../obras.service';\n\nimport {default as swal} from 'sweetalert2';\nimport { NgForm } from '@angular/forms';\n\nimport {IMyDpOptions} from 'mydatepicker';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'agregar-obra',\n  templateUrl: './agregarObra.html',\n  styleUrls: ['./agregarObra.css']\n})\nexport class AgregarObraComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  // @Input() pacientes: Array<any>;\n  @Output() obraAgregada = new EventEmitter();\n\n  @ViewChild('closeformCrearObra') closeformCrearObra: ElementRef;\n\n  public obraNueva: Obra;\n\n  constructor(\n    private obrasService: ObrasService\n  ){\n    this.obraNueva = new Obra();\n  }\n\n  /*\n  */\n  ngOnInit() {\n\n  }\n\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n\n  }\n/* Este metodo se encarga de reiniciar el formulario, asi evita errores en las validaciones que quedan guardads.*/\n  public reiniciarFormulario(formulario:NgForm){\n    formulario.resetForm();\n    //this.fechaPaciente.nativeElement.value = null; //Reinicio el input de fecha para evitar errores.\n  }\n      /*\n\n      */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    this.closeformCrearObra.nativeElement.click();\n  }\n\n  crearObra(iniciales,nombre){\n    this.obrasService.crearObra(iniciales,nombre).then((obraCreada)=>{\n    //   console.log(\"OBRA CREADAAAAAAAAAAAAAAAAAA\");\n    //   console.log(obraCreada);\n\n    // Limpiamos variables\n    this.obraNueva = new Obra();\n\n    // Enviamos la eleccion al componente padre\n    this.obraAgregada.next(obraCreada);\n    this.closeformCrearObra.nativeElement.click();\n\n\n    swal({\n      title: 'Éxito!',\n      text: 'Nueva obra registrada!',\n      type: 'success',\n      timer: 2000\n    }).then(\n      function () {},\n      // handling the promise rejection\n      function (dismiss) {\n        if (dismiss === 'timer') {\n\n        }\n      }\n    )\n    })\n  }\n\n  abrirFormularioCrear(){\n    setTimeout(()=> {\n      $('#formCrearObra').modal('show');\n    },\n    200);\n  }\n\n  cancelarModalCrear(){\n    this.closeformCrearObra.nativeElement.click();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/agregarObra/agregarObra.ts","module.exports = \"<!-- Modal Formulario Editar Obra -->\\n<div class=\\\"modal fade\\\" id=\\\"formEditarObra\\\" #formEditarObra tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormEditarObra >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Editar Obra Social</h3>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <!-- <div class=\\\"modal-body\\\" *ngIf = 'horaNuevoTurno != null && diaNuevoTurno != null && Obras != null' > -->\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Iniciales</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoIniciales=\\\"ngModel\\\" minlength=\\\"1\\\" required  [(ngModel)]='modeloObra.iniciales'  #inicialesObra type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoIniciales.invalid && (estadoIniciales.dirty || estadoIniciales.touched)\\\" class=\\\"alert alert-danger\\\">\\n              Debe tener al menos 1 inicial.\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Nombre</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoNombre=\\\"ngModel\\\" minlength=\\\"1\\\" required  [(ngModel)]='modeloObra.nombre'  #nombreObra type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoNombre.invalid && (estadoNombre.dirty || estadoNombre.touched)\\\" class=\\\"alert alert-danger\\\">\\n              El nombre es obligatorio\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Acciones</label>\\n          <div class=\\\"input-group\\\">\\n              <button (click)=\\\"eliminar(modeloObra)\\\" class=\\\"btn btn-danger\\\">Eliminar</button>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n          Cancelar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"estadoNombre.invalid || estadoIniciales.invalid\\\"\\n        (click)='editarObra();\\n\\n        '>\\n        Guardar\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/editarObra/editarObra.html\n// module id = ../../../../../src/app/obras/editarObra/editarObra.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\n\nimport { Obra } from '../obra.tipo';\nimport { ObrasService } from '../obras.service';\n\nimport {default as swal} from 'sweetalert2';\n\n@Component({\n  selector: 'editar-obra',\n  templateUrl: './editarObra.html',\n  styleUrls: ['../obras.component.css']\n})\nexport class EditarObraComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  @Input() obra: any;\n  @Output() obraEditada = new EventEmitter();\n  @Output() obraEliminada = new EventEmitter();\n\n  @ViewChild('closeFormEditarObra') closeFormEditarObra: ElementRef;\n\n  // private obras: Obra[];\n  // private obraSelected: Obra = null;\n\n  public modeloObra = null;\n\n  constructor(\n    private obrasService: ObrasService\n  ){\n\n  }\n\n  /*\n  */\n  ngOnInit() {\n    // this.obrasService.getObras().then(\n    //   obras =>{\n    //     console.log('Tengo las obras!!');\n    //     this.obras = obras;\n    //     this.modeloPaciente = Object.assign({}, this.paciente); //clonamos el paciente\n    //\n    //     console.log(this.paciente);\n    //   }\n    // ).catch(error=>{console.log(error)})\n  }\n\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n    this.modeloObra = Object.assign({}, this.obra); //clonamos el paciente\n  }\n\n  /*\n\n  */\n  public editarObra(){\n    ////console.log('Entre a agregar Paciente');\n    //  let obraId = this.obraSelected._id;\n\n    console.log('this.modeloObra');\n    console.log(this.modeloObra);\n\n    this.obrasService.actualizarObra(this.modeloObra._id, this.modeloObra)\n    .then(obraEdit => {\n      this.obraEditada.next(obraEdit);\n\n\n      //Cerramos el modal y limpiamos variables\n      //this.modeloPaciente = null;\n      // this.obraSelected = null;\n      this.closeFormEditarObra.nativeElement.click();\n\n    }).catch(err => {console.log(err);})\n  }\n\n\n  /*\n\n  */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    // this.obraSelected = null;\n    this.closeFormEditarObra.nativeElement.click();\n  }\n\n  eliminar(obra){\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres eliminar a la obra social?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.obrasService.eliminarObra(obra._id).then(obraEliminada => {\n        // ////console.log(\"Paciente eliminado\");\n        // ////console.log(pac);\n        yo.obraEliminada.next(obraEliminada);\n\n\n        //Cerramos el modal y limpiamos variables\n        // this.modeloPaciente = null;\n        // this.obraSelected = null;\n        yo.closeFormEditarObra.nativeElement.click();\n\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/editarObra/editarObra.ts","export class Obra{\n\t_id: string;\n\tnombre: string;\n\tiniciales: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/obra.tipo.ts","import * as _ from \"lodash\";\nimport {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n    name: \"dataFilter2\"\n})\nexport class DataFilterPipe2 implements PipeTransform {\n\n    transform(array: any[], query: string): any {\n        if (query) {\n            return _.filter(array, row=>{\n              let filas = false;\n              if (row.nombre.toLowerCase().indexOf(query.toLowerCase()) > -1){\n                filas = true;\n              }\n              else{\n                if (row.iniciales.toLowerCase().indexOf(query.toLowerCase()) > -1){\n                  filas = true;\n                }\n              }\n              return filas;\n            });\n        }\n        return array;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/obras-filter.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n\\n.ng-invalid.ng-touched {\\n  border-left: 5px solid #a94442 !important; /* red */\\n  border-color:  #a94442 !important; /* red */\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(169,68,66,.6) !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.component.css\n// module id = ../../../../../src/app/obras/obras.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"row \\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-body\\\">\\n          <app-tabla-obras>\\n          </app-tabla-obras>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.component.html\n// module id = ../../../../../src/app/obras/obras.component.html\n// module chunks = main","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport {DataFilterPipe2} from './obras-filter.pipe';\nimport {ObrasService} from './obras.service';\n\nimport { Obra } from './obra.tipo';\nimport {default as swal} from 'sweetalert2';\nimport { NgForm } from '@angular/forms';\n\n\ndeclare var $: any;\n@Component({\n  selector: 'app-obras',\n  providers:[ObrasService],\n  templateUrl: './obras.component.html',\n  styleUrls: ['./obras.component.css']\n})\nexport class ObrasComponent implements OnInit {\n  @ViewChild('closeformCrearObra') closeformCrearObra: ElementRef;\n  public data;\n  public filterQuery = \"\";\n  public rowsOnPage = 10;\n  public sortBy = \"email\";\n  public sortOrder = \"asc\";\n\n  public obraSelected = null;\n\n  obraNueva: Obra;\n  obras: Obra[];\n  constructor(private obrasService: ObrasService) {\n    this.obraNueva = new Obra();\n  }\n\n  ngOnInit() {\n    // this.getAllObras();\n  }\n\n  /* Este metodo se encarga de reiniciar el formulario, asi evita errores en las validaciones que quedan guardads.*/\n    public reiniciarFormulario(formulario:NgForm){\n      formulario.resetForm();\n    }\n\n  private getAllObras(): void{\n    this.obrasService\n    .getObras()\n    .then(obrasObtenidas => {\n        this.obras = obrasObtenidas;\n        this.data = obrasObtenidas;\n        ////console.log(obras);\n    });\n  }\n\n  editar(obra){\n\n    this.obraSelected = obra;\n    /*\n      FIX TEMPORAL: El timeout es para obligar a que el ngIf que proteje el modal,\n      alcance a hacerse true.\n    */\n    setTimeout(()=> {\n      $('#formEditarObra').modal('show');\n    },\n    200);\n  }\n\n  eliminar(obra){\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres eliminar a la obra social?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.obrasService.eliminarObra(obra._id).then(obraNueva => {\n        // ////console.log(\"Paciente eliminado\");\n        // ////console.log(pac);\n        var index = yo.data.indexOf(obra);\n        if (index > -1) {\n          yo.data.splice(index, 1);\n        }\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n  }\n\n\n\n\n  abrirFormularioCrear(){\n    setTimeout(()=> {\n      $('#formCrearObra').modal('show');\n    },\n    200);\n  }\n\n  cancelarModalCrear(){\n    this.closeformCrearObra.nativeElement.click();\n  }\n\n  crearObra(iniciales,nombre){\n    this.obrasService.crearObra(iniciales,nombre).then((obraCreada)=>{\n      console.log(\"OBRA CREADAAAAAAAAAAAAAAAAAA\");\n      console.log(obraCreada);\n      this.obras.push(obraCreada);\n      // this.data.push(obraCreada);\n      this.closeformCrearObra.nativeElement.click();\n    })\n  }\n\n  onObraEditado(obraEditado){\n    console.log('on obra Editado');\n    console.log(obraEditado);\n\n    let encontrado = -1;\n    this.obras.forEach(function(elem, index){\n      //console.log(elem);\n      if(elem._id == obraEditado._id){\n        encontrado = index;\n      }\n    });\n\n    if(encontrado >= 0){\n      this.obras[encontrado] = Object.assign({}, obraEditado);\n    }\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { Obra } from './obra.tipo';\nimport { environment } from '../../environments/environment';\n\nimport { AuthService } from '../authentication/auth.service';\n\n@Injectable()\nexport class ObrasService {\n\n  private headers = new Headers({'Content-Type': 'application/json'});\n  private obrasURL = environment.apiUrl +'/obras';  // URL to web api\n\n\n  constructor(private http: Http,private authService: AuthService) { }\n\n  getObras(): Promise<Obra[]>{\n    return this.http.get(this.obrasURL,this.authService.jwt())\n    .toPromise()\n    .then(response => {\n      ////console.log(response.json());\n      return response.json() as Obra[];\n    })\n    .catch(this.handleError);\n  }\n\n  actualizarObra(id,datos): Promise<Obra[]>{\n    return this.http.put(this.obrasURL+'/'+id,datos,this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\t// ////console.log(\"RESPUESTA DESDE EL PUT\");\n\t\t\t// ////console.log(response.json());\n\t\t\treturn response.json() as Obra[];\n\t\t})\n\t\t.catch(this.handleError);\n  }\n\n  crearObra(iniciales,nombre): Promise<Obra>{\n    return this.http.post(this.obrasURL,{iniciales: iniciales,nombre:nombre},this.authService.jwtContentType())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\t// ////console.log(\"RESPUESTA DESDE EL PUT\");\n\t\t\t// ////console.log(response.json());\n\t\t\treturn response.json() as Obra;\n\t\t})\n\t\t.catch(this.handleError);\n  }\n\n  eliminarObra(_id):Promise<Obra[]>{\n    return this.http.delete(this.obrasURL+'/'+_id,this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\t//console.log(\"RESPUESTA DESDE EL PATCH\");\n\t\t\t//console.log(response.json());\n\t\t\treturn response.json() as Obra[];\n\t\t})\n\t\t.catch(this.handleError);\n\n  }\n\n\n\n  //---------------------------------------------------------------------------\n  private handleError(error: any): Promise<any> {\n    console.error('Ocurrio un error en servicio de Pacientes: ', error);\n    // alert(error.json().error);\n    return Promise.reject(error.message || error);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/obras.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Structure */\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding-left: 24px;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: baseline;\\n      -ms-flex-align: baseline;\\n          align-items: baseline;\\n  padding: 8px 24px 0;\\n  font-size: 20px;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1;\\n  margin-left: 32px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\nmd-cell {\\n  /* 50%  =  2 columnas ; */\\n  max-width: 50%;\\n   white-space: nowrap;\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n  /*word-wrap:break-word*/\\n}\\nmd-header-cell {\\n  /* 20%  =  5 columnas ; 16 = 6 columnas */\\n  max-width: 16%;\\n   white-space: nowrap;\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n  /*word-wrap:break-word*/\\n}\\n\\n/* Define the hover highlight color for the table row */\\n.hoverTable md-row:hover {\\n      background-color: #f5f5f5;\\n}\\n.hoverTable md-row:active  {\\n      background-color: #ddd;\\n}\\n.isSpecial{\\n  background-color: #f5f5f5;\\n}\\n\\n.hoverTable {\\n  /*font-family: arial, sans-serif;*/\\n  /*border-collapse: collapse;*/\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-top: 1px solid #ddd;\\n}\\n\\nmd-paginator {\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-bottom: 1px solid #ddd;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/tablaObras/tablaObras.component.css\n// module id = ../../../../../src/app/obras/tablaObras/tablaObras.component.css\n// module chunks = main","module.exports = \"<div class=\\\" example-container \\\">\\n  <!-- <h4>Seleccione el trabajo deseado</h4> -->\\n  <!-- <h2 class=\\\"col-xs-6\\\">Pacientes</h2> -->\\n  <!-- <h2 class=\\\"col-lg-6\\\">Pacientes</h2> -->\\n\\n  <div class=\\\"row m-b-sm\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Obras Sociales<button class=\\\"btn btn-s btn-primary pull-right\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#formCrearObra\\\" ><i class=\\\"fa fa-plus\\\"></i></button></h2>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"example-header\\\">\\n\\n    <md-form-field floatPlaceholder=\\\"never\\\">\\n      <input mdInput #filter placeholder=\\\"Buscar Obras Sociales\\\">\\n    </md-form-field>\\n\\n\\n  </div>\\n  <md-table class='hoverTable col-lg-12'\\n  selectable-rows=\\\"true\\\"\\n  table-card=\\\"{title: Nutrition, actionIcons: true}\\\"\\n  #table [dataSource]=\\\"dataSource\\\" mdSort>\\n\\n  <!-- Iniciales Column -->\\n  <ng-container mdColumnDef=\\\"iniciales\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Iniciales </md-header-cell>\\n    <md-cell *mdCellDef=\\\"let row\\\"> {{row.iniciales}} </md-cell>\\n  </ng-container>\\n\\n  <!-- Nombre Column -->\\n  <ng-container mdColumnDef=\\\"nombre\\\">\\n    <md-header-cell *mdHeaderCellDef md-sort-header> Nombre </md-header-cell>\\n    <md-cell *mdCellDef=\\\"let row\\\"> {{row.nombre}} </md-cell>\\n  </ng-container>\\n\\n\\n  <!-- Acciones  -->\\n  <!-- <ng-container mdColumnDef=\\\"acciones\\\">\\n    <md-header-cell *mdHeaderCellDef> Acciones </md-header-cell>\\n    <md-cell *mdCellDef=\\\"let row\\\">\\n\\n\\n      <button *ngIf=\\\"!row.sancion\\\" (click)=\\\"sancionar(row)\\\" class=\\\"btn btn-warning\\\">Sancionar</button>\\n      <button *ngIf=\\\"row.sancion\\\" (click)=\\\"habilitar(row)\\\" class=\\\"btn btn-primary\\\">Habilitar</button>\\n      <button (click)=\\\"eliminar(row)\\\" class=\\\"btn btn-danger\\\">Eliminar</button>\\n\\n    </md-cell>\\n  </ng-container> -->\\n\\n\\n  <md-header-row  *mdHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\n  <md-row (click)=\\\"editar(row)\\\" [ngClass]=\\\"{'isSpecial':  row._id == seleccionado._id}\\\" *mdRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"rowClick(row)\\\"></md-row>\\n\\n</md-table>\\n\\n<div class=\\\"example-no-results\\\"\\n[style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\nNo se encuentran obras que coincidan con la búsqueda!\\n</div>\\n\\n<md-paginator #paginator\\n[length]=\\\"exampleDatabase.data.length\\\"\\n[pageIndex]=\\\"0\\\"\\n[pageSize]=\\\"5\\\"\\n[pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n</md-paginator>\\n\\n</div>\\n<br>\\n\\n<editar-obra *ngIf = 'seleccionado._id'\\n  [obra]='seleccionado'\\n  (obraEditada)='onObraEditada($event)'\\n  (obraEliminada)='onObraEliminada($event)'\\n></editar-obra>\\n<agregar-obra\\n  (obraAgregada)='onObraAgregada($event)'\\n></agregar-obra>\\n\\n<!-- <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success pull-right\\\" (click)='siguiente()'[disabled]=\\\"seleccionado._id =='' \\\" >Siguiente</button> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/tablaObras/tablaObras.component.html\n// module id = ../../../../../src/app/obras/tablaObras/tablaObras.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n//Para el data table\nimport { ElementRef, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/fromEvent';\n\nimport {SelectionModel} from '@angular/cdk/collections';\n\n//Para ordenar la tabla\nimport {MdSort} from '@angular/material';\n\n//Para paginar la tabla\nimport {MdPaginator} from '@angular/material';\n\n\nimport { ObrasService } from '../obras.service';\nimport { Obra } from '../obra.tipo';\n\nimport { ObrasCompartidasService } from '../../routerService/obras.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\n//\nimport {default as swal} from 'sweetalert2';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-tabla-obras',\n  templateUrl: './tablaObras.component.html',\n  styleUrls: ['./tablaObras.component.css']\n})\nexport class TablaObrasComponent implements OnInit {\n\n  @Output() obraSeleccionada = new EventEmitter();\n\n  displayedColumns = ['nombre', 'iniciales'];\n  exampleDatabase : ExampleDatabase;\n  dataSource: ExampleDataSource | null;\n\n  selection = new SelectionModel<string>(true, []);\n\n  seleccionado = {\n    'id' : '',\n    '_id' : ''\n  };\n\n  constructor(private obrasService: ObrasService, private obrasCompartidasService: ObrasCompartidasService){\n    this.exampleDatabase = new ExampleDatabase(obrasService, obrasCompartidasService);\n  }\n\n  @ViewChild('filter') filter: ElementRef;\n  @ViewChild(MdSort) sort: MdSort;\n  @ViewChild(MdPaginator) paginator: MdPaginator;\n\n  rowClick(row){\n    row.seleccionada = !row.seleccionada;\n    this.seleccionado = row;\n  }\n\n  siguiente(){\n    this.obraSeleccionada.next(this.seleccionado);\n  }\n\n  ngOnInit() {\n\n\n    this.seleccionado = {\n      'id' : '',\n      '_id' : ''\n    };\n\n    // LABEL de items per page de la tabla\n    this.paginator._intl.itemsPerPageLabel = 'Obras por página';\n\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.sort, this.paginator);\n\n    Observable.fromEvent(this.filter.nativeElement, 'keyup')\n    .debounceTime(150)\n    .distinctUntilChanged()\n    .subscribe(() => {\n      if (!this.dataSource) {\n        return; }\n        else{\n\n          let valorFiltro = this.filter.nativeElement.value;\n          this.dataSource.filter = valorFiltro;\n        }\n      });\n    }\n\n    onObraAgregada(obra){\n      this.exampleDatabase.addObra(obra);\n    }\n\n    onObraEditada(obra){\n      this.exampleDatabase.editObra(obra);\n    }\n\n\n    editar(obra){\n\n      this.seleccionado = obra;\n      /*\n      FIX TEMPORAL: El timeout es para obligar a que el ngIf que proteje el modal,\n      alcance a hacerse true.\n      */\n      setTimeout(()=> {\n        $('#formEditarObra').modal('show');\n      },\n      200);\n\n      // let yo = this;\n      // swal({\n      //   title: '¿Estas seguro que queres editar al paciente?',\n      //   text: \"No seras capaz de revertir esta accion!\",\n      //   type: 'warning',\n      //   showCancelButton: true,\n      //   confirmButtonColor: '#3085d6',\n      //   cancelButtonColor: '#d33',\n      //   confirmButtonText: 'Si, Editar!',\n      //   cancelButtonText: 'Cancelar',\n      // }).then(function () {\n      //   yo.pacientesService.actualizarPaciente(paciente._id,paciente).then(pac => {\n      //       // ////console.log(\"el nuevo paciente quedo..\");\n      //       // ////console.log(pac);\n      //       paciente = pac;\n      //     }).catch(err => console.error(err))\n      // }).catch(swal.noop);\n\n    }\n\n\n  onObraEliminada(obra){\n    this.exampleDatabase.removeObra(obra);\n  }\n\n  }\n\n\n  //****************************************************************************\n\n  /**\n  Base de datos para la tabla.\n  */\n  export class ExampleDatabase {\n    /** Stream that emits whenever the data has been modified. */\n    dataChange: BehaviorSubject<Obra[]> = new BehaviorSubject<Obra[]>([]);\n    get data(): Obra[] { return this.dataChange.value; }\n    private obrasSubscription: Subscription;\n\n    constructor(private obrasService: ObrasService, private obrasCompartidasService: ObrasCompartidasService) {\n      this.observarObras();\n    }\n\n    observarObras(){\n      /*\n        Subscribimos a los obras, para que tengan una correspondencia\n        con los obras del navigator\n      */\n      if(this.obrasCompartidasService.obras$){\n        this.obrasSubscription = this.obrasCompartidasService.obras$.subscribe((obras) => {\n\n          this.setObras(obras);\n          // this.ref.markForCheck();\n        }, (err) => {\n          console.log('Error en observarObras de tablaObras');\n          console.error(err);\n        });\n\n        // Obtenemos los pacientes compartidos\n        this.obrasCompartidasService.getObras();\n      }\n    }\n\n\n    /**\n    Pasamos nuestros trabajos al observer\n    */\n    setObras(pacientes: Obra[]) {\n      let copiedData = pacientes;\n      this.dataChange.next(pacientes);\n\n    }\n\n\n    addObra(obra) {\n\n      this.obrasCompartidasService.addObra(obra);\n\n      // const copiedData = this.data.slice();\n      // copiedData.push(obra);\n      // this.dataChange.next(copiedData);\n    }\n\n    editObra(obraEditada){\n      this.obrasCompartidasService.updateObra(obraEditada);\n\n      // let encontrado = -1;\n      // const copiedData = this.data.slice();\n      //\n      // copiedData.forEach(function(elem, index){\n      //   if(elem._id === obraEditada._id){\n      //     encontrado = index;\n      //   }\n      // });\n      // if(encontrado >= 0){\n      //   copiedData[encontrado] = Object.assign({}, obraEditada);\n      //   this.dataChange.next(copiedData);\n      // }\n    }\n\n    removeObra(obra){\n\n      this.obrasCompartidasService.deleteObra(obra);\n\n      // const copiedData = this.data.slice();\n      //\n      // let indice = -1;\n      // copiedData.forEach(function(elem,index){\n      //   if(elem._id == obra._id){\n      //     indice = index;\n      //   }\n      // });\n      // if (indice > -1) {\n      //   copiedData.splice(indice, 1);\n      //   this.dataChange.next(copiedData);\n      // }\n    }\n\n\n\n  }\n\n\n  //****************************************************************************\n\n  /**\n  Esta clase solo se encarga de hacer el renderizado de la tabla,\n  basandose en los datos de ExampleDatabase.\n  */\n  export class ExampleDataSource extends DataSource<any> {\n    _filterChange = new BehaviorSubject('');\n    get filter(): string { return this._filterChange.value; }\n    set filter(filter: string) { this._filterChange.next(filter); }\n\n\n    filteredData: Obra[] = [];\n    renderedData: Obra[] = [];\n\n    constructor(private _exampleDatabase: ExampleDatabase,  private _sort: MdSort,  private _paginator: MdPaginator) {\n      super();\n    }\n\n    /**\n    Esta funcion es llamada por la tabla para buscar el stream de datos para renderizar.\n    */\n    connect(): Observable<Obra[]> {\n      const displayDataChanges = [\n        this._exampleDatabase.dataChange,\n        this._filterChange,\n        this._sort.mdSortChange,\n        this._paginator.page\n      ];\n\n      return Observable.merge(...displayDataChanges).map(() => {\n        // console.log(displayDataChanges);\n\n        //Preparamos el FILTRO de la tabla\n        this.filteredData =   this._exampleDatabase.data.slice().filter((item: Obra) => {\n\n          // Filtro de la fecha\n          // let dia = item.fechaRealizacion.getDate();\n          // let diaString = dia.toString();\n          // if(dia < 10){\n          //   diaString = '0'+ dia.toString();\n          // }\n          // let mes = item.fechaRealizacion.getMonth()+1;\n          // let mesString = mes.toString();\n          // if(mes < 10){\n          //   mesString = '0'+ mes.toString();\n          // }\n          //\n          // let filtroFecha = diaString + '/' + mesString +  '/' + item.fechaRealizacion.getFullYear();\n\n          // Concatenamos los filtros para armar el string de busqueda\n          let searchStr = (item.nombre + item.iniciales).toLowerCase();\n\n          return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n        });\n\n        // Ordenamiento de datos\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n\n\n        return this.renderedData;\n      });\n    }\n\n    disconnect() {}\n\n    /**\n    Retorna una copia ordenada de los datos.\n    */\n    sortData(data: Obra[]): Obra[] {\n      if (!this._sort.active || this._sort.direction == '') { return data; }\n\n      return data.sort((a, b) => {\n        let propertyA: number|string = '';\n        let propertyB: number|string = '';\n\n        switch (this._sort.active) {\n          case 'nombre': [propertyA, propertyB] = [a.nombre, b.nombre]; break;\n          case 'iniciales': [propertyA, propertyB] = [a.iniciales, b.iniciales]; break;\n        }\n\n        let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n        let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n        return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n      });\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/obras/tablaObras/tablaObras.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.component.css\n// module id = ../../../../../src/app/pacientes-del-dia/pacientes-del-dia.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-title\\\">\\n        <h5>Pacientes del día</h5>\\n         <!--<iboxtools></iboxtools>  {{whatTime | async | amDateFormat:'hh:mm'}}  -->\\n      </div>\\n      <div class=\\\"ibox-content\\\">\\n        <table class=\\\"table table-hover no-margins\\\">\\n          <thead>\\n          <tr>\\n            <th>Estado</th>\\n            <th>Horario</th>\\n            <th>Paciente</th>\\n            <th>Tiempo de espera</th>\\n            <th>Doctor<th>\\n          </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"ordenados\\\">\\n          <tr *ngFor=\\\"let turno of turnos\\\">\\n          <!--\\n          {\\n            \\\"id\\\": 12,\\n            \\\"dia\\\": \\\"01-06-2017\\\",\\n            \\\"hora\\\": \\\"12:30\\\",\\n            \\\"status\\\": \\\"Pendiente\\\",\\n            \\\"paciente\\\": \\\"Raul\\\",\\n            \\\"doctor\\\": \\\"Dra. Manzazno\\\"\\n          }\\n          -->\\n            <td >\\n            <div class=\\\"dropdown\\\">\\n              <button [ngClass]=\\\"claseEstadoTurno(turno.estado)\\\" class=\\\"btn btn-xs dropdown-toggle\\\" type=\\\"button\\\" id=\\\"estadoturno\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n                {{turno.estado}}\\n                <span class=\\\"caret\\\"></span>\\n              </button>\\n              <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"estadoturno\\\">\\n                <li *ngFor=\\\"let estado of estadosTurnos\\\"><a (click)=\\\"updateTurno(turno, estado.nombre)\\\">{{estado.nombre}}</a></li>\\n              </ul>\\n            </div>\\n\\n            </td>\\n            <td><i class=\\\"fa fa-calendar-o\\\"></i> {{turno.horaInicial | amUtc | amDateFormat:'HH:mm'}}</td>\\n            <td>{{turno.paciente.nombre}} {{turno.paciente.apellido}}</td>\\n            <td><span *ngIf=\\\"turno.estado == 'en espera'\\\" class=\\\"text-warning\\\"><i class=\\\"fa fa-clock-o\\\"></i> Hace {{ aDate(turno.horaUltimoCambio)  | timeAgo }}</span></td>\\n            <td>{{turno.medico.apellido}}</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.component.html\n// module id = ../../../../../src/app/pacientes-del-dia/pacientes-del-dia.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { PacientesDelDiaService} from './pacientes-del-dia.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport {Turno} from '../turnos/turno.tipo';\nimport {\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    OnDestroy,\n} from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-pacientes-del-dia',\n  providers:[PacientesDelDiaService],\n  templateUrl: './pacientes-del-dia.component.html',\n  styleUrls: ['./pacientes-del-dia.component.css']\n})\nexport class PacientesDelDiaComponent implements OnInit {\n\n  @Input() notificaciones: any;\n  private subscription: Subscription;\n  public ordenados: boolean = false;\n  estadosTurnos:any[] =  [\n    {\n      \"id\": 1,\n      \"nombre\": \"en espera\",\n      \"clase\": \"warning\"\n    },\n    {\n      \"id\": 2,\n      \"nombre\": \"pendiente\",\n      \"clase\": \"default\"\n    },\n    {\n      \"id\": 3,\n      \"nombre\": \"finalizado\",\n      \"clase\": \"danger\"\n    },\n    {\n      \"id\": 4,\n      \"nombre\": \"activo\",\n      \"clase\": \"success\"\n    },\n    {\n      \"id\": 5,\n      \"nombre\": \"otro\",\n      \"clase\": \"info\"\n    },\n    {\n        \"id\": 6,\n        \"nombre\": \"en estudio\",\n        \"clase\": \"info\"\n    }\n  ];\n  turnos: Turno[];\n  constructor(private pacienteDelDiaService : PacientesDelDiaService,private ref: ChangeDetectorRef) { }\n\n  claseEstadoTurno(status){\n    // ////console.log(\"### ESTADO TURNO ###\")\n    // ////console.log(status);\n    var clase = \"btn-default\";\n    for (var i in this.estadosTurnos) {\n      if (status == this.estadosTurnos[i].nombre){\n        clase = \"btn-\" + this.estadosTurnos[i].clase;\n      }\n    }\n\n    return clase\n  }\n\n  aDate(turno){\n    ////console.log(turno);\n\n    //En Windows:\n    //var momentDate = moment(turno);\n\n    //En Linux: UTC\n    var momentDate = moment(turno,'YYYY-MM-DDTHH:mm:ss');\n    var fecha = momentDate.toDate();\n    return fecha\n  }\n\n  updateTurno(turno,estado){\n    // ////console.log(turno);\n    // ////console.log(estado);\n    turno.estado=estado;\n\n    this.pacienteDelDiaService.updateTurno(turno,estado);\n    // this.dashboardService.updateCita(cita).subscribe(\n    //   data => {\n    //     this.getAllTodos();\n    // });\n\n  }\n\n  ngOnInit() {\n\n    this.pacienteDelDiaService.asignarNotificaciones(this.notificaciones);\n    this.subscription = this.pacienteDelDiaService.turnos$.subscribe((turnos: Turno[]) => {\n        this.ordenados = false;\n        this.turnos = turnos;\n        this.ref.markForCheck();\n        this.turnos.sort(function(a, b){\n\n          let c = new Date(a.horaInicial);\n          let d = new Date(b.horaInicial)\n          let comparacion = c.getTime() - d.getTime();\n\n          return (comparacion)\n\n        });\n        this.ordenados = true;\n    }, (err) => {\n        console.error(err);\n    });\n\n    this.pacienteDelDiaService.buscarTurnos();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport * as io from 'socket.io-client';\nimport * as moment from 'moment';\nimport { environment } from '../../environments/environment';\nimport { Feathers } from '../authentication/feathers.service'\n//import * as feathers from 'feathers-client';\n\ndeclare var feathers:any;\n\n\nimport { Turno } from '../turnos/turno.tipo';\n\ndeclare var $: any;\n\nimport { NotificationsService } from 'angular2-notifications';\n\n\n@Injectable()\nexport class PacientesDelDiaService {\n\n  private urlServidor = environment.apiUrl;\n\n  public turnos$: Observable<Turno[]>;\n  private turnosObserver: Observer<Turno[]>;\n\n  private pacientesDelDiaService: any;\n\n  private notificaciones:any;\n\n  private dataStore: {\n    turnos: Turno[]\n  };\n\n  //private matricula: string;\n  private feathersService;\n  private socket;\n  constructor(private FeathersCambiarNombre: Feathers) {\n    // this.socket = io(this.urlServidor);\n    // const feathersApp = feathers().configure(feathers.socketio(this.socket));\n\n    //Estamos usando el Service de Feathers, pues el que tiene la autenticacion del login\n    this.feathersService = FeathersCambiarNombre.devolverFeathers();\n    //Obtenemos el service que queremos\n    this.pacientesDelDiaService =   this.feathersService.service('turnos');\n\n\n    //Registramos eventos\n    this.pacientesDelDiaService.on('created', (turno) => this.onCreated(turno));\n    this.pacientesDelDiaService.on('updated', (turno) => this.onUpdated(turno));\n    this.pacientesDelDiaService.on('removed', (turno) => this.onRemoved(turno));\n    this.pacientesDelDiaService.on('patched', (turno) => this.onPatched(turno));\n\n\n    this.turnos$ = new Observable((observer) => {\n      this.turnosObserver = observer;\n    });\n\n    this.dataStore = { turnos: [] };\n  }\n\n  public buscarTurnos() {\n    //let m = this.matricula;\n    let fechaHoy = new Date();\n    let temp = moment(fechaHoy).format('YYYY-MM-DD');\n    // ////console.log(\"########################### FECHAS ####################\");\n    // ////console.log(temp);\n    let temp2 = moment(temp, \"YYYY-MM-DD\").add(1, 'days');\n    let temp3 = (moment(temp2).format('YYYY-MM-DD'));\n    this.pacientesDelDiaService.find({\n      query: {\n        horaInicial: {\n          $gt: temp,\n          $lt: temp3\n        }\n        , $populate: 'paciente medico' //'paciente medico'\n      }\n    }).then((turnos) => {\n\n      // ////console.log(\"ENTRE AL BUSCAR TURNOS DEL PACIENTES DEL DIA\");\n      // ////console.log(turnos);\n\n      ////console.log('ENTRE ACA');\n      ////console.log(turnos);\n\n      this.dataStore.turnos = turnos;\n      this.turnosObserver.next(this.dataStore.turnos);\n    }).catch(err => console.error(err));\n  }\n\n\n\n  public updateTurno(turno, nuevoEstado){\n    var now = new Date();\n    // var now_utc = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(),  now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());\n    this.pacientesDelDiaService.patch(turno._id,{\"estado\": nuevoEstado}).then((turnoActualizado) => {\n      ////console.log(\"Turno actualizado correctamente\");\n    }).catch(err => console.error(err));\n  }\n\n  private getIndex(id: string): number {\n    let foundIndex = -1;\n\n    for (let i = 0; i < this.dataStore.turnos.length; i++) {\n      if (this.dataStore.turnos[i]._id === id) {\n        foundIndex = i;\n      }\n    }\n\n    return foundIndex;\n    // return 0;\n  }\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onCreated'\n  */\n  private onCreated(turno: any) { //REMPLAZR EL ANY CON TURNO!\n    ////console.log('On created de Angular con Socket de Feathers');\n    ////console.log(turno);\n\n    /*\n      IMPORTANTE:\n      Por el momento, la variable hoy es la correcta, pero la pasamos a local para\n      poder compararla con diaTurno. Es decir, ambos horarios estan en -3 horas.\n    */\n\n    let hoy = new Date();\n\n    hoy.setUTCDate(hoy.getDate());\n    hoy.setUTCHours(hoy.getHours());\n\n\n    let diaTurno = new Date(turno.horaInicial);\n    // diaTurno.setUTCDate(diaTurno.getDate());\n    // diaTurno.setUTCHours(diaTurno.getHours());\n\n    if( diaTurno.getTime() >= hoy.getTime()){\n\n      // No aseguramos que SI O SI pertenezca a hoy\n      if(hoy.getDate() == diaTurno.getDate() && hoy.getMonth() == diaTurno.getMonth()){\n        // console.log('Esto es lo que queriamos!');\n\n        this.dataStore.turnos.push(turno);\n        // Lo pusheo al componente\n        this.turnosObserver.next(this.dataStore.turnos);\n      }\n    }\n\n\n\n  }\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'\n  */\n  private onUpdated(turno: Turno) {\n    // const index = this.getIndex(turno._id);\n    //\n    // this.dataStore.turnos[index] = turno;\n    //\n    // this.turnosObserver.next(this.dataStore.turnos);\n  }\n\n\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onRemoved'\n  */\n  private onRemoved(turno: Turno) {\n    const index = this.getIndex(turno._id);\n\n    this.dataStore.turnos.splice(index, 1);\n\n    this.turnosObserver.next(this.dataStore.turnos);\n  }\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'\n  */\n\n  private onPatched(turno){\n\n    let indexTurno = this.buscarIndexTurno(turno);\n\n    if(indexTurno > -1){\n\n      let turnoAnterior:any = this.dataStore.turnos[indexTurno];\n      //El medico esta llamando un nuevo paciente\n      if(turnoAnterior.estado=='en espera' && turno.estado == 'activo'){\n        console.log('Estaba en espera y ahora lo llamo el medico');\n        this.notificarLlamado(turno.medico, turno.paciente);\n      }else{\n        // Esta puesto en otro IF por si queremos cambiar el mensaje que se usa de la notificacion\n        if(turnoAnterior.estado=='en estudio' && turno.estado == 'activo'){\n          this.notificarLlamado(turno.medico, turno.paciente);\n        }\n      }\n      this.dataStore.turnos[indexTurno] = turno;\n    }\n\n\n\n\n\n  }\n\n  public asignarNotificaciones(notificaciones){\n    this.notificaciones = notificaciones;\n  }\n\n\n  notificarLlamado(medico, paciente) {\n    this.notificaciones.info(\n      'Llamar al paciente',\n      'El doctor ' + medico.nombre + ' llama a ' + paciente.nombre + ' ' + paciente.apellido\n    )\n  }\n\n\n\n\n  /*\n  Al destruirse el servicio, se debe cerrar el socket y borrar el observable del mismo.\n  */\n  ngOnDestroy(){\n\n    //this.socket.close();\n    // this.socket.disconnect();\n    //this.turnosObserver = null;\n    // ////console.log(\"SE TERMINO EL SERVICIOOOOOOOOOOOOOO\");\n  }\n\n\n\n\n\n  //Metodos auxiliares\n  private buscarIndexTurno(turno): number{\n    let indexTurno = -1;\n\n    let turnos = this.dataStore.turnos;\n    // ////console.log(turnos);\n\n    turnos.forEach(function(elem,index){\n      if(elem._id.toString() == turno._id.toString()){\n\n        indexTurno = index;\n      }\n    });\n\n    return indexTurno;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes-del-dia/pacientes-del-dia.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n\\n.ng-invalid.ng-touched {\\n  border-left: 5px solid #a94442 !important; /* red */\\n  border-color:  #a94442 !important; /* red */\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(169,68,66,.6) !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/agregarPaciente/agregarPaciente.css\n// module id = ../../../../../src/app/pacientes/agregarPaciente/agregarPaciente.css\n// module chunks = main","module.exports = \"<!-- Modal Formulario Crear Turno -->\\n<div class=\\\"modal fade\\\" id=\\\"formAgregarPaciente\\\" #formAgregarPaciente tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" (click)=\\\"reiniciarFormulario(formulario)\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormAgregarPaciente >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Agregar nuevo paciente</h3>\\n      </div>\\n\\n      <form #formulario=\\\"ngForm\\\">\\n        <div class=\\\"modal-body\\\" >\\n          <!-- <div class=\\\"modal-body\\\" *ngIf = 'horaNuevoTurno != null && diaNuevoTurno != null && pacientes != null' > -->\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Nombre</label>\\n            <div class=\\\"input-group\\\">\\n              <input #estadoNombre=\\\"ngModel\\\"  minlength=\\\"1\\\" required [(ngModel)]=\\\"pacienteNuevo.nombre\\\" name=\\\"nombrePaciente\\\" #nombrePaciente placeholder=\\\"Ej: Jorge\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div *ngIf=\\\"estadoNombre.invalid && (estadoNombre.dirty || estadoNombre.touched)\\\" class=\\\"alert alert-danger\\\">\\n                El nombre es obligatorio\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Apellido</label>\\n            <div class=\\\"input-group\\\">\\n              <input #estadoApellido=\\\"ngModel\\\" minlength=\\\"1\\\" required [(ngModel)]=\\\"pacienteNuevo.apellido\\\" name=\\\"apellidoPaciente\\\"  #apellidoPaciente placeholder=\\\"Ej: Perez\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div *ngIf=\\\"estadoApellido.invalid && (estadoApellido.dirty || estadoApellido.touched)\\\" class=\\\"alert alert-danger\\\">\\n                El apellido es obligatorio\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Dni</label>\\n            <div class=\\\"input-group\\\">\\n              <input  #estadoDni=\\\"ngModel\\\" minlength=\\\"7\\\" maxlength=\\\"9\\\" required [(ngModel)]=\\\"pacienteNuevo.dni\\\"  name=\\\"documentoPaciente\\\" #dniPaciente placeholder=\\\"Ej: 38332764\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n            <div *ngIf=\\\"estadoDni.invalid && (estadoDni.dirty || estadoDni.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <p *ngIf=\\\"estadoDni.errors.minlength || estadoDni.errors.maxlength \\\"> El numero debe ser entre 7 y 9 numeros</p>\\n                <p *ngIf=\\\"estadoDni.errors.required\\\"> El DNI es obligatorio</p>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <div class=\\\"input-group\\\">\\n              <input [(ngModel)]=\\\"pacienteNuevo.email\\\" #emailPaciente name=\\\"emailPaciente\\\" placeholder=\\\"Ej: ejemplo@gmail.com\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group \\\">\\n            <label>Fecha de Nacimiento</label>\\n\\n              <my-date-picker name=\\\"fechaPaciente\\\" [options]=\\\"myDatePickerOptions\\\" [(ngModel)]=\\\"fechaNacimiento\\\" ></my-date-picker>\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Telefono</label>\\n            <div class=\\\"input-group\\\">\\n              <input [(ngModel)]=\\\"pacienteNuevo.telefono\\\" name=\\\"telefonoPaciente\\\" #telefonoPaciente placeholder=\\\"Ej: 2994771333\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Ocupación</label>\\n            <div class=\\\"input-group\\\">\\n              <input  [(ngModel)]=\\\"pacienteNuevo.ocupacion\\\"  name=\\\"ocupacionPaciente\\\" #ocupacionPaciente type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Observaciones</label>\\n            <div class=\\\"input-group\\\">\\n              <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"pacienteNuevo.observaciones\\\" name=\\\"observacionesPaciente\\\" #observacionesPaciente rows=\\\"5\\\" cols=\\\"80\\\"></textarea>\\n            </div>\\n          </div>\\n\\n          <!-- Podrian ser varias obras => Habria que ver el modelo -->\\n          <div class=\\\"form-group\\\">\\n            <label>Obra Social</label>\\n\\n            <select class=\\\"form-control\\\" required [(ngModel)] = \\\"obraSelected\\\" name=\\\"obraSelected\\\" >\\n              <option *ngFor=\\\"let obra of obras\\\" [ngValue]=\\\"obra\\\" >{{obra.nombre}}</option>\\n            </select>\\n          </div>\\n\\n        </div>\\n      </form>\\n\\n      <div class=\\\"modal-footer\\\">\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n          Cancelar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\"\\n        (click)='agregarPaciente(nombrePaciente.value,apellidoPaciente.value,\\n        dniPaciente.value, emailPaciente.value,telefonoPaciente.value, ocupacionPaciente.value, observacionesPaciente.value);\\n        nombrePaciente.value = null;\\n        apellidoPaciente.value = null;\\n        dniPaciente.value = null;\\n        emailPaciente.value = null;\\n        telefonoPaciente.value = null;\\n        ocupacionPaciente.value = null;\\n        observacionesPaciente.value = null\\n\\n        ' [disabled]=\\\"obraSelected == null || fechaNacimiento == null || estadoNombre.invalid || estadoApellido.invalid || estadoDni.invalid\\\">\\n        Agregar\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/agregarPaciente/agregarPaciente.html\n// module id = ../../../../../src/app/pacientes/agregarPaciente/agregarPaciente.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\nimport { Paciente } from '../paciente.tipo';\nimport { PacientesService } from '../pacientes.service';\n\nimport { Obra } from '../../obras/obra.tipo';\nimport { ObrasService } from '../../obras/obras.service';\n\nimport { ObrasCompartidasService } from '../../routerService/obras.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\n\nimport {default as swal} from 'sweetalert2';\nimport { NgForm } from '@angular/forms';\n\nimport {IMyDpOptions} from 'mydatepicker';\n\n@Component({\n  selector: 'agregar-paciente',\n  templateUrl: './agregarPaciente.html',\n  styleUrls: ['./agregarPaciente.css']\n})\nexport class AgregarPacienteComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  // @Input() pacientes: Array<any>;\n  @Output() pacienteAgregado = new EventEmitter();\n\n  @ViewChild('closeFormAgregarPaciente') closeFormAgregarPaciente: ElementRef;\n  @ViewChild('fechaPaciente') fechaPaciente:ElementRef;\n  @ViewChild('formulario') formulario:NgForm;\n\n  public obras: Obra[];\n  public obraSelected: Obra = null;\n  public pacienteNuevo: Paciente;\n  public pacienteCopia: Paciente;\n  public fechaNacimiento: any = null;\n\n  private obrasSubscription: Subscription;\n\n  //Configuraciones del DatePicker\n  public myDatePickerOptions: IMyDpOptions = {\n      todayBtnTxt: 'Hoy',\n      openSelectorOnInputClick: true,\n      editableDateField: false,\n      dateFormat: 'dd/mm/yyyy',\n      dayLabels: {su: 'Dom', mo: 'Lun', tu: 'Mar', we: 'Mie', th: 'Jue', fr: 'Vie', sa: 'Sab'},\n      monthLabels: { 1: 'Ene', 2: 'Feb', 3: 'Mar', 4: 'Abr', 5: 'May', 6: 'Jun', 7: 'Jul', 8: 'Ago', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dic' }\n  };\n\n  constructor(\n    private pacientesService: PacientesService,\n    private obrasCompartidasService: ObrasCompartidasService,\n    private obrasService: ObrasService\n  ){\n    this.pacienteNuevo = new Paciente();\n  }\n\n  /*\n  */\n  ngOnInit() {\n    this.observarObras();\n    // this.obrasService.getObras().then(\n    //   obras =>{\n    //     this.obras = obras;\n    //     // this.pacienteNuevo = new Paciente();\n    //   }\n    // ).catch(error=>{console.log(error)})\n  }\n\n  observarObras(){\n    /*\n      Subscribimos a los obras, para que tengan una correspondencia\n      con los obras del navigator\n    */\n    if(this.obrasCompartidasService.obras$){\n      this.obrasSubscription = this.obrasCompartidasService.obras$.subscribe((obras) => {\n\n        this.obras = obras;\n\n        if(this.devolverParticular()==null){\n\n          let particular = {\n          \t_id: 'Particular',\n          \tnombre: 'Particular',\n          \tiniciales: 'Particular'\n          };\n          this.obras.push(particular);\n        }\n\n        // this.ref.markForCheck();\n      }, (err) => {\n        console.log('Error en observarObras de agregarPaciente');\n        console.error(err);\n      });\n\n      // Obtenemos los pacientes compartidos\n      this.obrasCompartidasService.getObras();\n    }\n  }\n\n\n  private devolverParticular(){\n    let obraRes:Obra;\n    if(this.obras){\n      this.obras.forEach(function(obra,index){\n        if(obra.nombre == 'Particular' ){\n          obraRes = obra;\n        }\n      });\n    }\n\n    // console.log(\"El resultado de devolver particular es.. \", obraRes);\n\n    return obraRes;\n  }\n\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n\n  }\n/* Este metodo se encarga de reiniciar el formulario, asi evita errores en las validaciones que quedan guardads.*/\n  public reiniciarFormulario(formulario:NgForm){\n    formulario.resetForm();\n    //this.fechaPaciente.nativeElement.value = null; //Reinicio el input de fecha para evitar errores.\n  }\n\n  /*\n\n  */\n  public agregarPaciente(nombrePaciente,apellidoPaciente, dniPaciente,\n    emailPaciente, telefonoPaciente, ocupacion, observaciones){\n\n      this.pacienteCopia = new Paciente();\n      this.pacienteCopia.nombre = nombrePaciente;\n      this.pacienteCopia.apellido = apellidoPaciente;\n      this.pacienteCopia.dni = dniPaciente;\n      this.pacienteCopia.email = emailPaciente;\n      this.pacienteCopia.telefono = telefonoPaciente;\n      this.pacienteCopia.ocupacion = ocupacion;\n      this.pacienteCopia.observaciones = observaciones;\n      this.pacienteCopia.fechaNacimiento = this.fechaNacimiento.jsdate;\n\n\n      let emailPacienteLower = emailPaciente.toLowerCase();\n      ////console.log('Entre a agregar Paciente');\n      let obraId = this.obraSelected._id;\n\n      if(obraId === 'Particular'){\n        obraId = null;\n      }\n      else{\n        this.pacienteCopia.obra = obraId;\n      }\n\n      this.pacientesService.createPaciente(nombrePaciente,apellidoPaciente, dniPaciente,\n        emailPacienteLower, this.fechaNacimiento.jsdate, telefonoPaciente, obraId, ocupacion, observaciones)\n        .then(pacienteNuevo => {\n\n          ////console.log('Se creo el paciente con exito');\n          ////console.log(paciente);\n\n          //Enviamos la eleccion al componente padre\n          this.pacienteAgregado.next(pacienteNuevo);\n\n          //Cerramos el modal\n          this.obraSelected = null;\n          this.fechaNacimiento = null;\n          this.pacienteCopia = null;\n          this.closeFormAgregarPaciente.nativeElement.click();\n\n\n            //EL SWAL aparace debajo del modal anterior!! Solucionarlo!!!\n\n\n          swal({\n            title: 'Éxito!',\n            text: 'Nuevo paciente registrado!',\n            type: 'success',\n            timer: 2000\n          }).then(\n            function () {},\n            // handling the promise rejection\n            function (dismiss) {\n              if (dismiss === 'timer') {\n\n              }\n            }\n          );\n        }).catch(err =>{\n          if(err.status === 500){\n            let yo = this;\n            swal({\n              title: 'Error al crear paciente!',\n              text: 'Ocurrio un error a la hora de crear el paciente, compruebe que el email ingresado no este siendo utilizado por otro paciente',\n              type: 'error'\n            }).then(\n              function () {\n                // yo.reiniciarFormulario(yo.formulario);\n\n                /* Volvemos a dejar todos los campos como estaban antes de ser enviados en el formulario */\n\n                // yo.pacienteNuevo.nombre = yo.pacienteCopia.nombre.toString();\n                // yo.pacienteNuevo.apellido = yo.pacienteCopia.apellido;\n                // yo.pacienteNuevo.dni = yo.pacienteCopia.dni;\n                // yo.pacienteNuevo.email = yo.pacienteCopia.email;\n                // yo.pacienteNuevo.telefono = yo.pacienteCopia.telefono;\n                // yo.pacienteNuevo.ocupacion = yo.pacienteCopia.ocupacion;\n                // yo.pacienteNuevo.observaciones = yo.pacienteCopia.observaciones;\n                yo.pacienteNuevo = yo.pacienteCopia;\n\n\n                // console.log(\"el apciente nuevo es...\");\n                // console.log(yo.pacienteNuevo);\n\n\n                //REVISAR EL TEMA DE FECHA NACIMIENTO Y OBRA ELEGIDA:\n                yo.formulario.setValue({\n                  nombrePaciente:yo.pacienteCopia.nombre,\n                  apellidoPaciente: yo.pacienteCopia.apellido,\n                  documentoPaciente: yo.pacienteCopia.dni,\n                  emailPaciente: yo.pacienteCopia.email,\n                  fechaPaciente: yo.pacienteCopia.fechaNacimiento,\n                  telefonoPaciente: yo.pacienteCopia.telefono,\n                  ocupacionPaciente: yo.pacienteCopia.ocupacion,\n                  observacionesPaciente: yo.pacienteCopia.observaciones,\n                  obraSelected: yo.obraSelected,\n                });\n\n                yo.pacienteCopia = null;\n\n\n              },\n              // handling the promise rejection\n              function (dismiss) {\n                if (dismiss === 'timer') {\n\n                }\n              }\n            )\n          }\n        });\n\n\n\n  }\n\n  /*\n    La fecha entrante tiene el formato 2017-08-23T03:00:00.000Z\n  */\n  datePickerChanged(nuevaFecha){\n\n    this.fechaNacimiento = nuevaFecha;\n\n\n    // console.log(nuevaFecha);\n    // console.log('ENTRO');\n  }\n\n\n      /*\n\n      */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    this.obraSelected = null;\n    this.closeFormAgregarPaciente.nativeElement.click();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/agregarPaciente/agregarPaciente.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n@Pipe({\n    name: 'age'\n})\nexport class AgePipe implements PipeTransform {\n\n    transform(value: string): string {\n        let today = moment();\n                let birthdate = moment(value);\n                let years = today.diff(birthdate, 'years');\n                let html:string = years + \" años \";\n\n                // html += today.subtract(years, 'years').diff(birthdate, 'months') + \" mo\";\n\n        return html;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/edad.pipe.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n\\n.ng-invalid.ng-touched {\\n  border-left: 5px solid #a94442 !important; /* red */\\n  border-color:  #a94442 !important; /* red */\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(169,68,66,.6) !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/editarPaciente/editarPaciente.css\n// module id = ../../../../../src/app/pacientes/editarPaciente/editarPaciente.css\n// module chunks = main","module.exports = \"<!-- Modal Formulario Crear Turno -->\\n<div class=\\\"modal fade\\\" id=\\\"formEditarPaciente\\\" #formEditarPaciente tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormEditarPaciente >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Editar paciente</h3>\\n      </div>\\n      <div class=\\\"modal-body\\\" >\\n        <!-- <div class=\\\"modal-body\\\" *ngIf = 'horaNuevoTurno != null && diaNuevoTurno != null && pacientes != null' > -->\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Nombre</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoNombre=\\\"ngModel\\\" minlength=\\\"1\\\" required [(ngModel)]='modeloPaciente.nombre'  #nombrePaciente type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoNombre.invalid && (estadoNombre.dirty || estadoNombre.touched)\\\" class=\\\"alert alert-danger\\\">\\n              El nombre es obligatorio\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Apellido</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoApellido=\\\"ngModel\\\" minlength=\\\"1\\\" required  [(ngModel)]='modeloPaciente.apellido'  #apellidoPaciente type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoApellido.invalid && (estadoApellido.dirty || estadoApellido.touched)\\\" class=\\\"alert alert-danger\\\">\\n              El apellido es obligatorio\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Dni</label>\\n          <div class=\\\"input-group\\\">\\n            <input #estadoDni=\\\"ngModel\\\" minlength=\\\"7\\\" maxlength=\\\"9\\\" required [(ngModel)]='modeloPaciente.dni' #dniPaciente type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div *ngIf=\\\"estadoDni.invalid && (estadoDni.dirty || estadoDni.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <p *ngIf=\\\"estadoDni.errors.minlength || estadoDni.errors.maxlength \\\"> El numero debe ser entre 7 y 9 numeros</p>\\n              <p *ngIf=\\\"estadoDni.errors.required\\\"> El DNI es obligatorio</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <div class=\\\"input-group\\\">\\n            <input  [(ngModel)]='modeloPaciente.email' #emailPaciente type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Fecha de Nacimiento</label>\\n          <div class=\\\"input-group col-sm-5\\\">\\n            <my-date-picker name=\\\"fechaPaciente\\\" [options]=\\\"myDatePickerOptions\\\" [(ngModel)]=\\\"fechaNacimiento\\\" ></my-date-picker>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Telefono</label>\\n          <div class=\\\"input-group\\\">\\n            <input  [(ngModel)]='modeloPaciente.telefono' #telefonoPaciente  type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Ocupación</label>\\n          <div class=\\\"input-group\\\">\\n            <input  [(ngModel)]='modeloPaciente.ocupacion' #ocupacionPaciente type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Observaciones</label>\\n          <div class=\\\"input-group\\\">\\n            <!-- <input  [(ngModel)]='modeloPaciente.observaciones' #observacionesPaciente type=\\\"text\\\" class=\\\"form-control\\\"> -->\\n            <textarea class=\\\"form-control\\\" [(ngModel)]='modeloPaciente.observaciones' #observacionesPaciente rows=\\\"5\\\" cols=\\\"80\\\"></textarea>\\n\\n          </div>\\n        </div>\\n\\n        <!-- Podrian ser varias obras => Habria que ver el modelo -->\\n        <div class=\\\"form-group\\\" *ngIf='obraSelected'>\\n          <label>Obra Social</label>\\n\\n          <select class=\\\"form-control\\\" required [(ngModel)] = \\\"obraSelected\\\" name=\\\"obraSelected\\\"  >\\n            <option *ngFor=\\\"let obra of obras\\\" [ngValue]=\\\"obra\\\">{{obra.nombre}}</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Acciones</label>\\n          <div class=\\\"input-group\\\">\\n            <button *ngIf=\\\"!modeloPaciente.sancion\\\" (click)=\\\"sancionar(modeloPaciente)\\\" class=\\\"btn btn-warning m-xs\\\">Sancionar</button>\\n            <button *ngIf=\\\"modeloPaciente.sancion\\\" (click)=\\\"habilitar(modeloPaciente)\\\" class=\\\"btn btn-primary m-xs\\\">Habilitar</button>\\n            <button (click)=\\\"eliminar(modeloPaciente)\\\" class=\\\"btn btn-danger m-xs\\\">Eliminar</button>\\n            <button (click)=\\\"generarPass(modeloPaciente)\\\" class=\\\"btn btn-primary m-xs\\\">Generar Contraseña</button>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n\\n\\n      <div class=\\\"modal-footer\\\" >\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n          Cancelar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"'modeloPaciente == null' && estadoNombre.invalid || estadoApellido.invalid || estadoDni.invalid\\\"\\n        (click)='editarPaciente();' >\\n        Guardar\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/editarPaciente/editarPaciente.html\n// module id = ../../../../../src/app/pacientes/editarPaciente/editarPaciente.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\nimport { Paciente } from '../paciente.tipo';\nimport { PacientesService } from '../pacientes.service';\n\nimport { PacientesCompartidosService } from '../../routerService/pacientes.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Obra } from '../../obras/obra.tipo';\nimport { ObrasService } from '../../obras/obras.service';\n\nimport {default as swal} from 'sweetalert2';\n\nimport {IMyDpOptions} from 'mydatepicker';\n\n@Component({\n  selector: 'editar-paciente',\n  templateUrl: './editarPaciente.html',\n  styleUrls: ['./editarPaciente.css']\n})\nexport class EditarPacienteComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  @Input() paciente: any;\n  @Output() pacienteEditado = new EventEmitter();\n  @Output() pacienteEliminado = new EventEmitter();\n\n  @ViewChild('closeFormEditarPaciente') closeFormEditarPaciente: ElementRef;\n\n  private obras: Obra[];\n  public obraSelected: Obra = null;\n\n  public modeloPaciente = null;\n\n  public fechaNacimiento: any = null;\n\n  constructor(\n    private pacientesService: PacientesService,\n    private obrasService: ObrasService\n  ){\n    this.modeloPaciente = new Paciente();\n  }\n\n  //Configuraciones del DatePicker\n  public myDatePickerOptions: IMyDpOptions = {\n      todayBtnTxt: 'Hoy',\n      openSelectorOnInputClick: true,\n      editableDateField: false,\n      dateFormat: 'dd/mm/yyyy',\n      dayLabels: {su: 'Dom', mo: 'Lun', tu: 'Mar', we: 'Mie', th: 'Jue', fr: 'Vie', sa: 'Sab'},\n      monthLabels: { 1: 'Ene', 2: 'Feb', 3: 'Mar', 4: 'Abr', 5: 'May', 6: 'Jun', 7: 'Jul', 8: 'Ago', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dic' }\n  };\n\n  /*\n  */\n  ngOnInit() {\n    //Seteo la fecha de necimiento al datepicker\n    let fechaParcial = new Date(this.paciente.fechaNacimiento);\n    this.fechaNacimiento = { date: { year: fechaParcial.getFullYear(), month: fechaParcial.getMonth()+ 1, day: fechaParcial.getDate() } };\n\n    this.obrasService.getObras().then(\n      obras =>{\n        console.log('Tengo las obras!!');\n        this.obras = obras;\n\n        this.iniciarObraSeleccionada();\n        this.modeloPaciente = null;\n        this.modeloPaciente = Object.assign({}, this.paciente); //clonamos el paciente\n\n        // console.log(this.paciente);\n      }\n    ).catch(error=>{console.log(error)})\n  }\n\n  private iniciarObraSeleccionada(){\n    this.obraSelected = null;\n    let yo = this;\n\n    if(yo.paciente.obra != null){\n      if(this.obras && yo.paciente!= null){\n        this.obras.forEach(function(obra,index){\n          if(obra._id == yo.paciente.obra._id){\n            yo.obraSelected = obra;\n          }\n        });\n      }\n    }\n    else{\n      this.obraSelected = this.devolverParticular();\n    }\n  }\n\n\n  private devolverParticular(){\n    let obraRes:Obra;\n    if(this.obras){\n      this.obras.forEach(function(obra,index){\n        if(obra.nombre == 'Particular' ){\n          obraRes = obra;\n        }\n      });\n    }\n\n    return obraRes;\n  }\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n    this.iniciarObraSeleccionada();\n    this.modeloPaciente = Object.assign({}, this.paciente); //clonamos el paciente\n  }\n\n  /*\n\n  */\n  public editarPaciente(){\n    //  let obraId = this.obraSelected._id;\n\n    //Actualizamos la obra seleccionada\n    console.log(\"Entre a editar paciente y tengo de id... \",this.obraSelected._id);\n    if(this.obraSelected && this.obraSelected.nombre == 'Particular'){\n      this.modeloPaciente.obra = null;\n      console.log('Entre al if de Particular');\n    }\n    else{\n      if(this.obraSelected){\n        this.modeloPaciente.obra = this.obraSelected._id;\n        console.log('Entre al else, y tengo... ',this.modeloPaciente.obra);\n      }\n    }\n\n    this.modeloPaciente.fechaNacimiento = this.fechaNacimiento.jsdate;\n\n    this.modeloPaciente.email = this.modeloPaciente.email.toLowerCase();\n    this.pacientesService.actualizarPaciente(this.modeloPaciente._id, this.modeloPaciente)\n    .then(pacienteEdit => {\n      // console.log(\"VUELTA DEL PACIENTE\");\n      // console.log(pacienteEdit);\n      this.pacienteEditado.next(pacienteEdit);\n\n\n      //Cerramos el modal y limpiamos variables\n      //this.modeloPaciente = null;\n      this.obraSelected = null;\n      this.closeFormEditarPaciente.nativeElement.click();\n\n    }).catch(err => {console.log(err);})\n\n\n\n\n\n\n  }\n\n  sancionar(paciente){\n\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres sancionar al paciente?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Sancionar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.pacientesService.sancionarPaciente(paciente._id).then(pac => {\n        // ////console.log(\"Paciente sancionado\");\n        // ////console.log(pac);\n        paciente.sancion = true;\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n  }\n\n  habilitar(paciente){\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres habilitar al paciente?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Habilitar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.pacientesService.habilitarPaciente(paciente._id).then(pac => {\n        // ////console.log(\"Paciente habilitado\");\n        // ////console.log(pac);\n        paciente.sancion = false;\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n\n\n\n  }\n\n  eliminar(paciente){\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres eliminar al paciente?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      console.log('paciente');\n      console.log(paciente);\n      yo.pacientesService.eliminarPaciente(paciente._id).then(pac => {\n        // ////console.log(\"Paciente eliminado\");\n        // ////console.log(pac);\n        yo.pacienteEliminado.next(pac);\n\n        yo.obraSelected = null;\n        yo.closeFormEditarPaciente.nativeElement.click();\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n  }\n\n  generarPass(paciente){\n    let yo = this;\n    yo.modeloPaciente.password = yo.modeloPaciente.nombre.charAt(0).toLowerCase() + yo.modeloPaciente.apellido.charAt(0).toLowerCase() + yo.modeloPaciente.dni;\n    swal.queue([{\n      title: 'Desea reinciar la contraseña?',\n      confirmButtonText: 'Reiniciar',\n      text:\n        'A continuación se le mostrará la nueva contraseña. (Primera letra nombre) + (Primera letra apellido) + dni',\n      showLoaderOnConfirm: true,\n      preConfirm: function () {\n        return new Promise(function (resolve) {\n\n            yo.pacientesService.actualizarPaciente(yo.modeloPaciente._id, yo.modeloPaciente)\n            .then(pacienteEdit => {\n                swal.insertQueueStep(yo.modeloPaciente.password)\n                resolve()\n            }).catch(err => {console.log(err);})\n\n        })\n      }\n    }]);\n\n  }\n\n\n  /*\n\n  */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    this.obraSelected = null;\n    this.closeFormEditarPaciente.nativeElement.click();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/editarPaciente/editarPaciente.ts","export class Paciente{\r\n\t_id: string;\r\n\tnumeroPaciente: string;\r\n\temail: string;\r\n\tdni: string;\r\n\tnombre: string;\r\n\tapellido: string;\r\n\tfechaNacimiento: string;\r\n\ttelefono: string;\r\n\testado: string;\r\n\tobra: string; // Debemos agregar una referencia a Obra Social\r\n\tsancion: boolean;\r\n\teliminado: boolean;\r\n\taprobado: boolean;\r\n\tocupacion: string;\r\n\tobservaciones: string;\r\n\tprimeraVez: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/paciente.tipo.ts","import * as _ from \"lodash\";\r\nimport {Pipe, PipeTransform} from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: \"dataFilter\"\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n\r\n    transform(array: any[], query: string): any {\r\n        if (query) {\r\n            return _.filter(array, row=>{\r\n              let filas = false;\r\n              if (row.nombre.toLowerCase().indexOf(query.toLowerCase()) > -1){\r\n                filas = true;\r\n              }\r\n              else{\r\n                if (row.apellido.toLowerCase().indexOf(query.toLowerCase()) > -1){\r\n                  filas = true;\r\n                }\r\n                else{\r\n                  if(row.email.toLowerCase().indexOf(query.toLowerCase()) > -1){\r\n                    filas = true;\r\n                  }\r\n                  else{\r\n                    if(row.numeroPaciente.toLowerCase().indexOf(query.toLowerCase()) > -1){\r\n                      filas = true;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              return filas;\r\n\r\n\r\n\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes-filter.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.component.css\n// module id = ../../../../../src/app/pacientes/pacientes.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"row \\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-body\\\">\\n\\n        <app-tabla-pacientes>\\n        </app-tabla-pacientes>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.component.html\n// module id = ../../../../../src/app/pacientes/pacientes.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport {DataFilterPipe} from './pacientes-filter.pipe';\nimport {PacientesService} from './pacientes.service';\nimport {Paciente} from './paciente.tipo';\n\nimport {default as swal} from 'sweetalert2';\n//declare var swal: any;\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-pacientes',\n  providers:[PacientesService],\n  templateUrl: './pacientes.component.html',\n  styleUrls: ['./pacientes.component.css']\n})\nexport class PacientesComponent implements OnInit {\n\n  public data;\n  public filterQuery = \"\";\n  public rowsOnPage = 10;\n  public sortBy = \"email\";\n  public sortOrder = \"asc\";\n\n  public pacienteSelected = null;\n\n  pacientes: Paciente[];\n\n  constructor(private http: Http, private pacientesService: PacientesService) {\n  }\n\n  ngOnInit(): void {\n      // this.http.get(\"./data.json\")\n      //     .subscribe((data)=> {\n      //         setTimeout(()=> {\n      //             this.data = data.json();\n      //         }, 1000);\n      //     });\n      // this.getAllPacientes();\n      // this.getAllPacientesActivados();\n  }\n\n  public toInt(num: string) {\n      return +num;\n  }\n\n  getAllPacientes(): void{\n    this.pacientesService\n    .getPacientes()\n    .then(pacientes => {\n        this.pacientes = pacientes;\n        this.data = pacientes;\n        ////console.log(pacientes);\n    });\n  }\n\n  getAllPacientesActivados(): void{\n    this.pacientesService\n    .getPacientesActivos()\n    .then(pacientes => {\n        this.pacientes = pacientes;\n        this.data = pacientes;\n        ////console.log(\"PACIENTES ACTIVOS: \");\n        ////console.log(pacientes);\n    });\n  }\n  public sortByWordLength = (a: any) => {\n      return a.city.length;\n  }\n\n  buscarPaciente(id:string){\n    ////console.log(\"Entre al buscar paciente\");\n    this.pacientesService.buscarPaciente(id).then(paciente => {\n      ////console.log(\"el nuevo paciente quedo..\");\n      // ////console.log(paciente);\n    });\n  }\n\n  // onSelect(paciente){\n  //   this.pacienteSelected = paciente;\n  // }\n\n  editar(paciente){\n\n    this.pacienteSelected = paciente;\n    /*\n      FIX TEMPORAL: El timeout es para obligar a que el ngIf que proteje el modal,\n      alcance a hacerse true.\n    */\n    setTimeout(()=> {\n      $('#formEditarPaciente').modal('show');\n    },\n    200);\n\n    // let yo = this;\n    // swal({\n    //   title: '¿Estas seguro que queres editar al paciente?',\n    //   text: \"No seras capaz de revertir esta accion!\",\n    //   type: 'warning',\n    //   showCancelButton: true,\n    //   confirmButtonColor: '#3085d6',\n    //   cancelButtonColor: '#d33',\n    //   confirmButtonText: 'Si, Editar!',\n    //   cancelButtonText: 'Cancelar',\n    // }).then(function () {\n    //   yo.pacientesService.actualizarPaciente(paciente._id,paciente).then(pac => {\n    //       // ////console.log(\"el nuevo paciente quedo..\");\n    //       // ////console.log(pac);\n    //       paciente = pac;\n    //     }).catch(err => console.error(err))\n    // }).catch(swal.noop);\n\n  }\n\n  /*\n    Abrimos el modal para agregar un nuevo paciente\n  */\n  formAgregarPaciente(){\n    setTimeout(()=> {\n      $('#formAgregarPaciente').modal('show');\n    },\n    200);\n  }\n\n  onPacienteAgregado(pacienteNuevo){\n    if(pacienteNuevo){\n      //Actualizamos la vista\n      this.pacientes.push(pacienteNuevo);\n    }\n  }\n\n  onPacienteEditado(pacienteEditado){\n    let encontrado = -1;\n    this.pacientes.forEach(function(elem, index){\n      if(elem._id === pacienteEditado._id){\n        encontrado = index;\n      }\n    });\n    if(encontrado >= 0){\n      this.pacientes[encontrado] = Object.assign({}, pacienteEditado);\n    }\n\n  }\n\n\n  sancionar(paciente){\n\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres sancionar al paciente?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Sancionar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.pacientesService.sancionarPaciente(paciente._id).then(pac => {\n        // ////console.log(\"Paciente sancionado\");\n        // ////console.log(pac);\n        paciente.sancion = true;\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n  }\n\n  habilitar(paciente){\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres habilitar al paciente?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Habilitar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.pacientesService.habilitarPaciente(paciente._id).then(pac => {\n        // ////console.log(\"Paciente habilitado\");\n        // ////console.log(pac);\n        paciente.sancion = false;\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n\n\n\n  }\n\n  eliminar(paciente){\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres habilitar al paciente?',\n      //text: \"No seras capaz de revertir esta accion!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar!',\n      cancelButtonText: 'Cancelar',\n    }).then(function () {\n      yo.pacientesService.eliminarPaciente(paciente._id).then(pac => {\n        // ////console.log(\"Paciente eliminado\");\n        // ////console.log(pac);\n        var index = yo.data.indexOf(paciente);\n        if (index > -1) {\n          yo.data.splice(index, 1);\n        }\n        paciente.eliminado = true;\n      }).catch(err => console.error(err))\n    }).catch(swal.noop);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { Paciente } from './paciente.tipo';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\nimport { AuthService } from '../authentication/auth.service';\r\n\r\n@Injectable()\r\nexport class PacientesService {\r\n\r\n\tprivate headers = new Headers({'Content-Type': 'application/json'});\r\n\tprivate pacientesURL = environment.apiUrl + '/pacientes';  // URL to web api\r\n\r\n\tconstructor(private http: Http, private authService: AuthService) {\r\n\r\n\t}//Al ser promise (y no Observable), no le quita reactividad?\r\n\tgetPacientes(): Promise<Paciente[]>{\r\n\t\treturn this.http.get(this.pacientesURL,this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t////console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\t// GET /messages?status=read&user=10\r\n\tgetPacientesActivos(): Promise<Paciente[]>{\r\n\t\treturn this.http.get(this.pacientesURL+\"?eliminado=false&aprobado=true\",this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t////console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tcreatePaciente(nombrePaciente,apellidoPaciente, dniPaciente, emailPaciente, nacimientoPaciente, telefonoPaciente, obraPaciente, ocupacion, observaciones):Promise<Paciente>{\r\n\r\n\t\treturn this.http\r\n\t\t.post(this.pacientesURL, JSON.stringify({nombre: nombrePaciente ,apellido: apellidoPaciente,\r\n\t\t\t dni: dniPaciente, email: emailPaciente, nacimiento: nacimientoPaciente,\r\n\t\t\t telefono: telefonoPaciente, obra: obraPaciente, ocupacion: ocupacion, observaciones:observaciones,\r\n\t\t\t eliminado: false, aprobado: true, sancion: false\r\n\t\t }), this.authService.jwtContentType())\r\n\t\t .toPromise()\r\n\t\t.then(res => {\r\n\t\t\treturn res.json() as Paciente;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\tconsole.error('Ocurrio un error en servicio de Pacientes: ', error);\r\n\t\t// alert(error.json().error);\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n\r\n\tbuscarPaciente(id): Promise<Paciente[]>{\r\n\t\treturn this.http.get(this.pacientesURL+'/'+id,this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t////console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tactualizarPaciente(id,datos): Promise<Paciente[]>{\r\n\t\treturn this.http.put(this.pacientesURL+'/'+id,datos,this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t// ////console.log(\"RESPUESTA DESDE EL PUT\");\r\n\t\t\t// ////console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tsancionarPaciente(id): Promise<Paciente[]>{\r\n\t\treturn this.http.patch(this.pacientesURL+'/'+id,{sancion:true},this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t// ////console.log(\"RESPUESTA DESDE EL PATCH\");\r\n\t\t\t// ////console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\teliminarPaciente(id): Promise<Paciente[]>{\r\n\t\treturn this.http.patch(this.pacientesURL+'/'+id,{eliminado:true},this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t//console.log(\"RESPUESTA DESDE EL PATCH\");\r\n\t\t\t//console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\thabilitarPaciente(id): Promise<Paciente[]>{\r\n\t\treturn this.http.patch(this.pacientesURL+'/'+id,{sancion:false},this.authService.jwt())\r\n\t\t.toPromise()\r\n\t\t.then(response => {\r\n\t\t\t// ////console.log(\"RESPUESTA DESDE EL PATCH\");\r\n\t\t\t// ////console.log(response.json());\r\n\t\t\treturn response.json() as Paciente[];\r\n\t\t})\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/pacientes.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Structure */\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding-left: 24px;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: baseline;\\n      -ms-flex-align: baseline;\\n          align-items: baseline;\\n  padding: 8px 24px 0;\\n  font-size: 20px;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1;\\n  margin-left: 32px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\nmd-cell {\\n   white-space: nowrap;\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n  /*word-wrap:break-word*/\\n}\\nmd-header-cell {\\n   white-space: nowrap;\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n  /*word-wrap:break-word*/\\n}\\n\\n/* Define the hover highlight color for the table row */\\n.hoverTable md-row:hover {\\n      background-color: #f5f5f5;\\n}\\n.hoverTable md-row:active  {\\n      background-color: #ddd;\\n}\\n.isSpecial{\\n  background-color: #f5f5f5;\\n}\\n\\n.hoverTable {\\n  /*font-family: arial, sans-serif;*/\\n  /*border-collapse: collapse;*/\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-top: 1px solid #ddd;\\n}\\n\\nmd-paginator {\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-bottom: 1px solid #ddd;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/tablaPacientes/tablaPacientes.component.css\n// module id = ../../../../../src/app/pacientes/tablaPacientes/tablaPacientes.component.css\n// module chunks = main","module.exports = \"<div class=\\\" example-container \\\">\\n  <!-- <h4>Seleccione el trabajo deseado</h4> -->\\n  <!-- <h2 class=\\\"col-xs-6\\\">Pacientes</h2> -->\\n  <!-- <h2 class=\\\"col-lg-6\\\">Pacientes</h2> -->\\n\\n\\n  <div class=\\\"row m-b-sm\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Pacientes<button class=\\\"btn btn-s btn-primary pull-right\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#formAgregarPaciente\\\" ><i class=\\\"fa fa-plus\\\"></i></button></h2>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"example-header\\\">\\n\\n    <md-form-field floatPlaceholder=\\\"never\\\">\\n      <input mdInput #filter placeholder=\\\"Buscar Pacientes\\\">\\n    </md-form-field>\\n\\n\\n  </div>\\n  <md-table class='hoverTable col-lg-12' selectable-rows=\\\"true\\\" table-card=\\\"{title: Nutrition, actionIcons: true}\\\" #table [dataSource]=\\\"dataSource\\\" mdSort>\\n\\n    <!-- DNI Column -->\\n    <ng-container mdColumnDef=\\\"dni\\\">\\n      <md-header-cell *mdHeaderCellDef md-sort-header> DNI </md-header-cell>\\n      <md-cell *mdCellDef=\\\"let row\\\"> {{row.dni}} </md-cell>\\n    </ng-container>\\n\\n    <!-- Email Column -->\\n    <ng-container mdColumnDef=\\\"email\\\">\\n      <md-header-cell class=\\\"hidden-sm hidden-xs col-md-2\\\" *mdHeaderCellDef md-sort-header> Email </md-header-cell>\\n      <md-cell class=\\\"hidden-sm hidden-xs col-md-2\\\" *mdCellDef=\\\"let row\\\"> <div *ngIf=\\\"row.email.substr((row.email.length-10),row.email.length) == '@email.com'\\\">Sin email - {{row.email.substr(0,row.email.length-10)}}</div><div *ngIf=\\\"row.email.substr((row.email.length-10),row.email.length) != '@email.com'\\\">{{row.email}}</div> </md-cell>\\n    </ng-container>\\n\\n    <!-- Nombre Column -->\\n    <ng-container mdColumnDef=\\\"nombre\\\">\\n      <md-header-cell *mdHeaderCellDef md-sort-header> Nombre </md-header-cell>\\n      <md-cell *mdCellDef=\\\"let row\\\"> {{row.nombre}} </md-cell>\\n    </ng-container>\\n\\n    <!-- Apellido Column -->\\n    <ng-container mdColumnDef=\\\"apellido\\\">\\n      <md-header-cell *mdHeaderCellDef md-sort-header> Apellido </md-header-cell>\\n      <md-cell *mdCellDef=\\\"let row\\\"> {{row.apellido}} </md-cell>\\n    </ng-container>\\n\\n    <!-- Teléfono Column -->\\n    <ng-container mdColumnDef=\\\"telefono\\\">\\n      <md-header-cell class=\\\"hidden-sm hidden-xs\\\" *mdHeaderCellDef md-sort-header> Teléfono </md-header-cell>\\n      <md-cell class=\\\"hidden-sm hidden-xs\\\" *mdCellDef=\\\"let row\\\"> {{row.telefono}} </md-cell>\\n    </ng-container>\\n\\n    <!-- Acciones  -->\\n    <!-- <ng-container mdColumnDef=\\\"acciones\\\">\\n    <md-header-cell *mdHeaderCellDef> Acciones </md-header-cell>\\n    <md-cell *mdCellDef=\\\"let row\\\">\\n\\n\\n      <button *ngIf=\\\"!row.sancion\\\" (click)=\\\"sancionar(row)\\\" class=\\\"btn btn-warning\\\">Sancionar</button>\\n      <button *ngIf=\\\"row.sancion\\\" (click)=\\\"habilitar(row)\\\" class=\\\"btn btn-primary\\\">Habilitar</button>\\n      <button (click)=\\\"eliminar(row)\\\" class=\\\"btn btn-danger\\\">Eliminar</button>\\n\\n    </md-cell>\\n  </ng-container> -->\\n\\n\\n    <md-header-row *mdHeaderRowDef=\\\"displayedColumns\\\"></md-header-row>\\n    <md-row (click)=\\\"editar(row)\\\" [ngClass]=\\\"{'isSpecial':  row._id == seleccionado._id}\\\" *mdRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"rowClick(row)\\\"></md-row>\\n\\n  </md-table>\\n\\n  <div class=\\\"example-no-results\\\" [style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\n    No se encuentran pacientes que coincidan con la búsqueda!\\n  </div>\\n\\n  <md-paginator #paginator [length]=\\\"exampleDatabase.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n  </md-paginator>\\n\\n</div>\\n<br>\\n\\n<editar-paciente *ngIf='seleccionado._id' [paciente]='seleccionado' (pacienteEditado)='onPacienteEditado($event)' (pacienteEliminado)='onPacienteEliminado($event)'></editar-paciente>\\n<agregar-paciente (pacienteAgregado)='onPacienteAgregado($event)'></agregar-paciente>\\n\\n<!-- <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success pull-right\\\" (click)='siguiente()'[disabled]=\\\"seleccionado._id =='' \\\" >Siguiente</button> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/tablaPacientes/tablaPacientes.component.html\n// module id = ../../../../../src/app/pacientes/tablaPacientes/tablaPacientes.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n//Para el data table\nimport { ElementRef, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/fromEvent';\n\nimport {SelectionModel} from '@angular/cdk/collections';\n\n//Para ordenar la tabla\nimport {MdSort} from '@angular/material';\n\n//Para paginar la tabla\nimport {MdPaginator} from '@angular/material';\n\nimport { PacientesCompartidosService } from '../../routerService/pacientes.sistema';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { PacientesService } from '../pacientes.service';\nimport { Paciente } from '../paciente.tipo';\n\n//\nimport {default as swal} from 'sweetalert2';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-tabla-pacientes',\n  templateUrl: './tablaPacientes.component.html',\n  styleUrls: ['./tablaPacientes.component.css']\n})\nexport class TablaPacientesComponent implements OnInit {\n\n  @Output() pacienteSeleccionado = new EventEmitter();\n\n  displayedColumns = ['dni', 'email', 'nombre', 'apellido','telefono'];\n  exampleDatabase : ExampleDatabase;\n  dataSource: ExampleDataSource | null;\n\n  selection = new SelectionModel<string>(true, []);\n\n  seleccionado = {\n    'id' : '',\n    '_id' : ''\n  };\n  private subscription: Subscription;\n  constructor(private pacientesService: PacientesService, private pacientesCompartidosService: PacientesCompartidosService){\n    this.exampleDatabase = new ExampleDatabase(pacientesService, pacientesCompartidosService);\n  }\n\n  @ViewChild('filter') filter: ElementRef;\n  @ViewChild(MdSort) sort: MdSort;\n  @ViewChild(MdPaginator) paginator: MdPaginator;\n\n  rowClick(row){\n    // console.log('Tocaron!!!');\n    // console.log(row);\n    row.seleccionada = !row.seleccionada;\n\n    this.seleccionado = row;\n  }\n\n  siguiente(){\n    // console.log(this.seleccionado);\n    this.pacienteSeleccionado.next(this.seleccionado);\n  }\n\n  ngOnInit() {\n\n\n\n    this.seleccionado = {\n      'id' : '',\n      '_id' : ''\n    };\n    // console.log(this.seleccionado);\n\n    // LABEL de items per page de la tabla\n    this.paginator._intl.itemsPerPageLabel = 'Pacientes por página';\n\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.sort, this.paginator);\n\n    Observable.fromEvent(this.filter.nativeElement, 'keyup')\n    .debounceTime(150)\n    .distinctUntilChanged()\n    .subscribe(() => {\n      // console.log('Entre aca');\n      if (!this.dataSource) {\n        // console.log('No tengo dataSource!!');\n        return; }\n        else{\n\n          let valorFiltro = this.filter.nativeElement.value;\n\n          if(this.dataSource.filter){\n            // console.log('Tengo Filtro!')\n          }\n          this.dataSource.filter = valorFiltro;\n        }\n      });\n    }\n\n    onPacienteAgregado(paciente){\n      this.exampleDatabase.addPaciente(paciente);\n    }\n\n    onPacienteEditado(paciente){\n      this.exampleDatabase.editPaciente(paciente);\n    }\n\n\n    editar(paciente){\n\n      this.seleccionado = paciente;\n      /*\n      FIX TEMPORAL: El timeout es para obligar a que el ngIf que proteje el modal,\n      alcance a hacerse true.\n      */\n      setTimeout(()=> {\n        $('#formEditarPaciente').modal('show');\n      },\n      200);\n\n      // let yo = this;\n      // swal({\n      //   title: '¿Estas seguro que queres editar al paciente?',\n      //   text: \"No seras capaz de revertir esta accion!\",\n      //   type: 'warning',\n      //   showCancelButton: true,\n      //   confirmButtonColor: '#3085d6',\n      //   cancelButtonColor: '#d33',\n      //   confirmButtonText: 'Si, Editar!',\n      //   cancelButtonText: 'Cancelar',\n      // }).then(function () {\n      //   yo.pacientesService.actualizarPaciente(paciente._id,paciente).then(pac => {\n      //       // ////console.log(\"el nuevo paciente quedo..\");\n      //       // ////console.log(pac);\n      //       paciente = pac;\n      //     }).catch(err => console.error(err))\n      // }).catch(swal.noop);\n\n    }\n\n\n  onPacienteEliminado(paciente){\n    this.exampleDatabase.removePaciente(paciente);\n  }\n\n  }\n\n\n  //****************************************************************************\n\n  /**\n  Base de datos para la tabla.\n  */\n  export class ExampleDatabase {\n    /** Stream that emits whenever the data has been modified. */\n    dataChange: BehaviorSubject<Paciente[]> = new BehaviorSubject<Paciente[]>([]);\n    get data(): Paciente[] { return this.dataChange.value; }\n    private subscription: Subscription;\n\n    constructor(private pacientesService: PacientesService, private pacientesCompartidosService: PacientesCompartidosService) {\n\n      this.observarPacientes();\n      // this.pacientesService.getPacientesActivos().then(\n      //   pacientes =>{\n      //     this.setPacientes(pacientes);\n      //   }\n      // ).catch(err => {console.log(err)})\n    }\n\n    observarPacientes(){\n      /*\n        Subscribimos a los pacientes, para que tengan una correspondencia\n        con los pacientes del navigator\n      */\n      if(this.pacientesCompartidosService.pacientes$){\n        this.subscription = this.pacientesCompartidosService.pacientes$.subscribe((pacientes) => {\n\n          this.setPacientes(pacientes);\n          // this.ref.markForCheck();\n        }, (err) => {\n          console.log('Error en observarPacientes de tablaPacientes');\n          console.error(err);\n        });\n\n        // Obtenemos los pacientes compartidos\n        this.pacientesCompartidosService.getPacientes();\n      }\n    }\n\n\n    /**\n    Pasamos nuestros trabajos al observer\n    */\n    setPacientes(pacientes: Paciente[]) {\n      let copiedData = pacientes;\n      this.dataChange.next(pacientes);\n\n    }\n\n\n    addPaciente(paciente) {\n      const copiedData = this.data.slice();\n\n      this.pacientesCompartidosService.addPaciente(paciente);\n\n      // copiedData.push(paciente);\n      // this.dataChange.next(copiedData);\n    }\n\n    editPaciente(pacienteEditado){\n        this.pacientesCompartidosService.updatePaciente(pacienteEditado);\n      // let encontrado = -1;\n      // const copiedData = this.data.slice();\n      //\n      // copiedData.forEach(function(elem, index){\n      //   if(elem._id === pacienteEditado._id){\n      //     encontrado = index;\n      //   }\n      // });\n      // if(encontrado >= 0){\n      //   copiedData[encontrado] = Object.assign({}, pacienteEditado);\n      //   this.dataChange.next(copiedData);\n      // }\n    }\n\n    removePaciente(paciente){\n      const copiedData = this.data.slice();\n      console.log('El paciente a remover es: ');\n      console.log(paciente);\n\n      let indice = -1;\n      copiedData.forEach(function(elem,index){\n        if(elem._id == paciente._id){\n          indice = index;\n        }\n      });\n      if (indice > -1) {\n        copiedData.splice(indice, 1);\n        this.dataChange.next(copiedData);\n      }\n    }\n\n\n\n  }\n\n\n  //****************************************************************************\n\n  /**\n  Esta clase solo se encarga de hacer el renderizado de la tabla,\n  basandose en los datos de ExampleDatabase.\n  */\n  export class ExampleDataSource extends DataSource<any> {\n    _filterChange = new BehaviorSubject('');\n    get filter(): string { return this._filterChange.value; }\n    set filter(filter: string) { this._filterChange.next(filter); }\n\n\n    filteredData: Paciente[] = [];\n    renderedData: Paciente[] = [];\n\n    constructor(private _exampleDatabase: ExampleDatabase,  private _sort: MdSort,  private _paginator: MdPaginator) {\n      super();\n    }\n\n    /**\n    Esta funcion es llamada por la tabla para buscar el stream de datos para renderizar.\n    */\n    connect(): Observable<Paciente[]> {\n      const displayDataChanges = [\n        this._exampleDatabase.dataChange,\n        this._filterChange,\n        this._sort.mdSortChange,\n        this._paginator.page\n      ];\n\n      return Observable.merge(...displayDataChanges).map(() => {\n        // console.log(displayDataChanges);\n\n        //Preparamos el FILTRO de la tabla\n        this.filteredData =   this._exampleDatabase.data.slice().filter((item: Paciente) => {\n\n          // Filtro de la fecha\n          // let dia = item.fechaRealizacion.getDate();\n          // let diaString = dia.toString();\n          // if(dia < 10){\n          //   diaString = '0'+ dia.toString();\n          // }\n          // let mes = item.fechaRealizacion.getMonth()+1;\n          // let mesString = mes.toString();\n          // if(mes < 10){\n          //   mesString = '0'+ mes.toString();\n          // }\n          //\n          // let filtroFecha = diaString + '/' + mesString +  '/' + item.fechaRealizacion.getFullYear();\n\n          // Concatenamos los filtros para armar el string de busqueda\n          let searchStr = (item.dni + item.email + item.nombre + item.apellido + item.telefono).toLowerCase();\n\n          return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n        });\n\n        // Ordenamiento de datos\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n\n\n        return this.renderedData;\n      });\n    }\n\n    disconnect() {}\n\n    /**\n    Retorna una copia ordenada de los datos.\n    */\n    sortData(data: Paciente[]): Paciente[] {\n      if (!this._sort.active || this._sort.direction == '') { return data; }\n\n      return data.sort((a, b) => {\n        let propertyA: number|string = '';\n        let propertyB: number|string = '';\n\n        switch (this._sort.active) {\n          case 'dni': [propertyA, propertyB] = [a.dni, b.dni]; break;\n          case 'email': [propertyA, propertyB] = [a.email, b.email]; break;\n          case 'nombre': [propertyA, propertyB] = [a.nombre, b.nombre]; break;\n          case 'apellido': [propertyA, propertyB] = [a.apellido, b.apellido]; break;\n          case 'telefono': [propertyA, propertyB] = [a.telefono, b.telefono]; break;\n        }\n\n        let valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n        let valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n        return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n      });\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pacientes/tablaPacientes/tablaPacientes.component.ts","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport * as io from 'socket.io-client';\nimport * as moment from 'moment';\n//import * as feathers from 'feathers-client';\n\nimport {Paciente} from '../pacientes/paciente.tipo';\nimport { environment } from '../../environments/environment';\nimport { Feathers } from '../authentication/feathers.service'\nimport { PacientesCompartidosService } from '../routerService/pacientes.sistema';\n\nimport { Subscription } from 'rxjs/Subscription';\n\ndeclare var feathers:any;\n\nimport {default as swal} from 'sweetalert2';\n\n@Injectable()\nexport class SolicitudesSocketService implements OnDestroy  {\n  private urlServidor = environment.apiUrl;\n\n  public solicitudes$: Observable<any[]>;\n  private solicitudesObserver: Observer<any[]>;\n\n  private solicitudesSocketService: any;\n\n  private pacientesSubscription: Subscription;\n  private pacientesSistema: any[];\n\n  private dataStore: {\n    solicitudes: Paciente[]\n  };\n\n  private matricula: string;\n  private socket;\n  private feathersService;\n\n  constructor(private FeathersCambiarNombre: Feathers, private pacientesCompartidos : PacientesCompartidosService,) {\n    // console.log('############################### NUEVO CONSTRUCTOR !!!!!!');\n\n    this.socket = io(this.urlServidor);\n    //Estamos usando el Service de Feathers, pues el que tiene la autenticacion del login\n    this.feathersService = FeathersCambiarNombre.devolverFeathers();\n    //Obtenemos el service que queremos\n    this.solicitudesSocketService = this.feathersService.service('pacientes');\n\n    //Registramos eventos\n    this.solicitudesSocketService.on('created', (paciente) => this.onCreated(paciente));\n    this.solicitudesSocketService.on('updated', (paciente) => this.onUpdated(paciente));\n    this.solicitudesSocketService.on('removed', (paciente) => this.onRemoved(paciente));\n    this.solicitudesSocketService.on('patched', (paciente) => this.onPatched(paciente));\n\n\n    this.solicitudes$ = new Observable((observer) => {\n      this.solicitudesObserver = observer;\n    });\n\n    this.dataStore = { solicitudes: [] };\n    //let token = localStorage.getItem('feathers-jwt');\n\n    this.findSolicitudes();\n    //BORRRRRAR\n    // this.autenticar().then((param)=>{\n    //   console.log(\"PARAMS\");\n    //   console.log(param);\n    //   this.findSolicitudes();\n    // });\n    console.log(\"Pase el auth de solicitudes\");\n    //BORRARRRRR\n\n    // this.findSolicitudes();\n\n  }\n\n  ngOnDestroy(){\n\n    // console.log('############################### ENTRE AL NG ON DSTROY!!!!!!');\n    this.socket.disconnect();\n    this.solicitudesSocketService = null;\n    //this.socket.close();\n    // this.solicitudesSocketService = null;\n    //\n    //\n    //\n    // this.solicitudes$ = null;\n    //\n    // this.dataStore = { solicitudes: [] };\n\n    // this.socket.disconnect();\n\n    //this.turnosObserver = null;\n    ////console.log(\"SE TERMINO EL SERVICIOOOOOOOOOOOOOO\");\n  }\n\n  //---------------------------------------------------------------------------\n  // Metodos del servicio\n\n  public findSolicitudes() {\n    /**\n    Se tiene en cuenta que cuando el administrativo RECHAZA una solicitud,\n    el paciente con estado aprobado que tenia asociado esa solicitud, es eliminado.\n    */\n\n    this.solicitudesSocketService.find({\n      query: {\n        aprobado: false\n      }\n    }).then((pacientesEnSolicitud) => {\n\n      //******************************************************************\n      /**\n      IMPORTANTE:\n      A veces es necesario hacer el .data. Es cuando, por ej, usas pagination\n      */\n      //******************************************************************\n\n      this.dataStore.solicitudes = pacientesEnSolicitud;\n\n\n      ////console.log('****************************************');\n      ////console.log(pacientesEnSolicitud);\n\n      this.solicitudesObserver.next(this.dataStore.solicitudes);\n    }).catch(err => console.error(err));\n  }\n\n\n  aprobarSolicitud(pacienteEnSolicitud){\n    let indexPaciente = this.buscarSolicitud(pacienteEnSolicitud);\n\n    if(indexPaciente > -1){\n      let id = pacienteEnSolicitud._id;\n      let idUsuario = pacienteEnSolicitud._idUsuario;\n      this.solicitudesSocketService.patch(id,{\"aprobado\":true,\"_idUsuario\":idUsuario,\"aprobando\":true}).then(\n        pacienteAprobado => {\n          if(pacienteAprobado.aprobado){\n\n            /*\n            ACA PODREMOS MOSTRAR el numero de paciente generado, etc.\n            */\n\n            swal({\n              title: 'Solicitud Aprobada!',\n              text: 'Nuevo paciente registrado!',\n              type: 'success',\n              timer: 2000\n            }).then(\n              function () {},\n              // handling the promise rejection\n              function (dismiss) {\n                if (dismiss === 'timer') {\n                  ////console.log('I was closed by the timer')\n                }\n              }\n            )\n\n          }\n        }\n      )\n    }\n\n\n  }\n\n  rechazarSolicitud(pacienteEnSolicitud){\n    let indexPaciente = this.buscarSolicitud(pacienteEnSolicitud);\n\n    if(indexPaciente > -1){\n      let id = pacienteEnSolicitud._id;\n      this.solicitudesSocketService.remove(id).then(\n        pacienteRechazado => {\n          //console.log('Se elimino la solicitud del paciente!!');\n          swal({\n            title: 'Solicitud Rechazada!',\n            text: 'Se ha eliminado la solicitud correctamente!',\n            type: 'success',\n            timer: 2000\n          }).then(\n            function () {},\n            // handling the promise rejection\n            function (dismiss) {\n              if (dismiss === 'timer') {\n                ////console.log('I was closed by the timer')\n              }\n            }\n          )\n        }\n      )\n    }\n  }\n\n  observarPacientes(){\n    /*\n    Subscribimos a los pacientes, para que tengan una correspondencia\n    con los pacientes del navigator\n    */\n    if(this.pacientesCompartidos.pacientes$){\n      this.pacientesSubscription = this.pacientesCompartidos.pacientes$.subscribe((pacientes) => {\n\n        this.pacientesSistema = pacientes;\n        // this.ref.markForCheck();\n      }, (err) => {\n        console.log('Error en observarPacientes de tablaPacientes');\n        console.error(err);\n      });\n\n      // Obtenemos los pacientes compartidos\n      this.pacientesCompartidos.getPacientes();\n    }\n  }\n\n\n  //Recepcion de eventos\n\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onCreated'.\n  Al crear un paciente en el server (rest o socket), se invoca este evento.\n  */\n  private onCreated(pacienteAprobado){\n    //console.log('On created de Paciente (solicitud aprobada) de Angular con Socket de Feathers');\n    //console.log(pacienteAprobado);\n    console.log('## ENTRE EN EL ON CREATED');\n\n    //Si el nuevo paciente NO esta aprobado => entro una nueva solicitud\n    if(!pacienteAprobado.aprobado){\n      this.dataStore.solicitudes.push(pacienteAprobado);\n    }\n\n    this.solicitudesObserver.next(this.dataStore.solicitudes);\n  }\n\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onRemoved'.\n  Al eliminar un paciente en el server (rest o socket), se invoca este evento.\n  */\n  private onRemoved(pacienteRechazado){\n    //console.log('On removed de Paciente (solicitud rechazada) de Angular con Socket de Feathers');\n    //console.log(pacienteRechazado);\n\n    //Actualizamos las variables\n\n    //Nos aseguramos que el paciente haya sido rechazado correctamente\n    if(!pacienteRechazado.aprobado){\n      this.quitarSolicitud(pacienteRechazado);\n    }\n\n  }\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onPatched'.\n  Al hacer un patch sobre un paciente existente en el server (rest o socket), se invoca este evento.\n  */\n  private onPatched(pacienteAprobado){\n\n    // Nos aseguramos que el paciente haya sido aprobado correctamente\n    if(pacienteAprobado.aprobado){\n      let quitado = this.quitarSolicitud(pacienteAprobado);\n\n      // Agregamos el paciente aprobado al sistema\n      if(quitado){\n        if(!this.pacientesCompartidos.existePaciente(pacienteAprobado)){\n          this.pacientesCompartidos.addPaciente(pacienteAprobado);\n        }\n      }\n\n    }\n\n  }\n\n  /*\n  Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'.\n  Al hacer un update sobre un paciente existente en el server (rest o socket), se invoca este evento.\n  */\n  private onUpdated(paciente){\n\n  }\n\n\n  //----------------------------------------------------------------------------\n  //Metodos auxiliares\n\n  private buscarSolicitud(pacienteEnSolicitud): number{\n    let indexSolicitud = -1;\n\n    let solicitudes = this.dataStore.solicitudes;\n    //console.log(solicitudes);\n\n    solicitudes.forEach(function(elem,index){\n      if(elem._id.toString() == pacienteEnSolicitud._id.toString()){\n\n        indexSolicitud = index;\n      }\n    });\n\n    return indexSolicitud;\n  }\n\n  private quitarSolicitud(pacienteQuitar): boolean{\n    let borrado = false;\n\n    let solicitudes = this.dataStore.solicitudes;\n    //console.log(solicitudes);\n\n    let indexQuitar = this.buscarSolicitud(pacienteQuitar);\n\n    if(indexQuitar > -1 && solicitudes[indexQuitar].aprobado == false){\n      // console.log('VOY A QUITAR A : ');\n      // console.log(solicitudes[indexQuitar]);\n      // console.log(solicitudes[indexQuitar].aprobado);\n      //\n      // console.log(this.dataStore.solicitudes);\n\n      this.dataStore.solicitudes = solicitudes.splice(indexQuitar, 1);\n\n      // console.log(this.dataStore.solicitudes);\n      // console.log('----------------------------');\n\n      //console.log(solicitudes);\n\n      borrado = true;\n    }\n\n    return borrado;\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes-socket.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes.component.css\n// module id = ../../../../../src/app/pedidos/solicitudes.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-lg-4\\\">\\n  <div class=\\\"ibox float-e-margins\\\">\\n    <div class=\\\"ibox-title\\\">\\n      <h5>Mensajes</h5>\\n      <!--<iboxtools></iboxtools>-->\\n    </div>\\n    <div class=\\\"ibox-content ibox-heading\\\">\\n      <h3><i class=\\\"fa fa-envelope-o\\\"></i> Pedido de usuario</h3>\\n      <small><i class=\\\"fa fa-tim\\\"></i> Tenes {{cantidadSolicitudes}} solicitudes de usuario nuevas.</small>\\n    </div>\\n    <div class=\\\"ibox-content\\\">\\n      <div class=\\\"feed-activity-list\\\">\\n      <div *ngIf='haySolicitudes'>\\n        <div  class=\\\"feed-element\\\" *ngFor=\\\"let solicitud of solicitudes\\\">\\n          <div (click)=\\\"abrirSolicitud(solicitud)\\\">\\n          <!-- <div data-dismiss=\\\"modal\\\" data-toggle=\\\"modal\\\" data-target=\\\"#formularioSolicitud\\\"> -->\\n            <small class=\\\"pull-right text-navy\\\">hace {{aDate(solicitud?.createdAt) | amTimeAgo:true }}</small>\\n            <strong>{{solicitud.nombre}} {{solicitud.apellido}}</strong>\\n            <div>DNI: {{solicitud.dni}}</div>\\n            <small class=\\\"text-muted\\\">{{solicitud.createdAt | amDateFormat:'DD-mm HH:mm'}}</small>\\n          </div>\\n        </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal Formulario Solicitud - Preliminar -->\\n        <div class=\\\"modal fade\\\" id=\\\"formularioSolicitud\\\" #formularioSolicitud tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormSolicitud >&times;</button>\\n                        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Solicitud Nuevo Paciente</h3>\\n                    </div>\\n\\n                    <div class=\\\"modal-body\\\" *ngIf = 'solicitudAbierta != null'>\\n\\n                        <div class=\\\"form-group\\\">\\n                            Nombre:\\n                            <label >{{solicitudAbierta.nombre}}</label>\\n                            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contratoNombre\\\" [(ngModel)]=\\\"model.contratoNombre\\\" #contratoNombre=\\\"ngModel\\\" required /> -->\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            Apelldo:\\n                            <label >{{solicitudAbierta.apellido}}</label>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            Dni:\\n                            <label >{{solicitudAbierta.dni}}</label>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                           Email:\\n                            <label >{{solicitudAbierta.email}}</label>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                           Fecha de Nacimiento:\\n                            <label >{{solicitudAbierta.fechaNacimiento | date:'dd/MM/yy'}}</label>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            Telefono:\\n                            <label >{{solicitudAbierta.telefono}}</label>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                           Obra Social:\\n                            <label >{{solicitudAbierta.obra.nombre}}</label>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"modal-footer\\\">\\n\\n                        <button class=\\\"btn btn-danger\\\" (click)='rechazarSolicitud(solicitudAbierta)'>\\n                            Rechazar Solicitud\\n                        </button>\\n\\n                        <button class=\\\"btn btn-primary\\\" (click)='aprobarSolicitud(solicitudAbierta)'>\\n                            Aceptar Solicitud\\n                        </button>\\n\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n\\n        </div>\\n        <!-- /.modal -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes.component.html\n// module id = ../../../../../src/app/pedidos/solicitudes.component.html\n// module chunks = main","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport {\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    OnDestroy,\n} from '@angular/core';\n\nimport * as moment from 'moment';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { SolicitudesSocketService } from './solicitudes-socket.service';\n\n//Declaramos esta variable para hacer uso de Jquery con los modals de Boostrap\ndeclare var $: any;\n\n@Component({\n    selector: 'app-solicitudes',\n    providers: [ SolicitudesSocketService ],\n    templateUrl: './solicitudes.component.html',\n    styleUrls: ['./solicitudes.component.css']\n})\nexport class SolicitudesComponent implements OnInit, OnDestroy  {\n\n    public solicitudes: any[] = [];\n    private subscription: Subscription;\n\n    public solicitudAbierta: any;\n\n    public haySolicitudes = false;\n    public cantidadSolicitudes : number = 0;\n\n    @ViewChild('closeFormSolicitud') closeFormSolicitud: ElementRef;\n\n    constructor(\n        private solicitudesService : SolicitudesSocketService,\n        private ref: ChangeDetectorRef\n    ) { }\n\n    ngOnInit() {\n        this.subscription = this.solicitudesService.solicitudes$.subscribe((pacientesEnSolicitud: any[]) => {\n            this.solicitudes = pacientesEnSolicitud;\n            if(this.solicitudes.length > 0){\n              this.cantidadSolicitudes = this.solicitudes.length;\n              this.haySolicitudes = true;\n            }\n            this.ref.markForCheck();\n        }, (err) => {\n            console.error(err);\n        });\n    }\n\n    ngOnDestroy() {\n      // console.log('###### FIN Solicitudes component');\n\n        //this.subscription.unsubscribe();\n        this.solicitudesService = null;\n    }\n\n    abrirSolicitud(pacienteEnSolicitud){\n        //console.log('Abriendo la solicitud');\n        this.solicitudAbierta = pacienteEnSolicitud;\n        $('#formularioSolicitud').modal('show');\n    }\n\n    aprobarSolicitud(pacienteEnSolicitud){\n        //console.log('Rechazar solicitud');\n        //console.log(pacienteEnSolicitud);\n\n        this.solicitudesService.aprobarSolicitud(pacienteEnSolicitud);\n        this.solicitudAbierta = null;\n        this.cantidadSolicitudes = this.cantidadSolicitudes - 1;\n        //Cerramos el modal\n        this.closeFormSolicitud.nativeElement.click();\n    }\n    rechazarSolicitud(pacienteEnSolicitud){\n        //console.log('Rechazar solicitud');\n        //console.log(pacienteEnSolicitud);\n\n        this.solicitudesService.rechazarSolicitud(pacienteEnSolicitud);\n        this.solicitudAbierta = null;\n        this.cantidadSolicitudes = this.cantidadSolicitudes - 1;\n        //Cerramos el modal\n        this.closeFormSolicitud.nativeElement.click();\n    }\n\n    aDate(turno){\n        var momentDate = moment(turno);\n        var fecha = momentDate.toDate();\n        return fecha\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/pedidos/solicitudes.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers} from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { Medico } from '../medico/medico.tipo';\n\nimport { MedicosService } from '../medico/medicos.service';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\nimport { AuthService } from '../authentication/auth.service';\n\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject }           from 'rxjs/Subject';\n\nimport * as Rx from 'rxjs';\n@Injectable()\nexport class MedicosCompartidosService {\n\n  private medicos: any[];\n  public observer: Observer<any[]>;\n  medicos$: Observable<any[]>;\n\n  constructor(\n    private medicosService: MedicosService\n  ){\n\n    this.medicos$ = new Observable((observer) => {\n      // console.log('ENTRE ACA');\n      this.observer = observer;\n    });\n    // this.medicosService.getDoctores()\n    // .then(medicos => {\n    //   // console.log('ENTRE ACA');\n    //   this.medicos = <any> medicos;\n    //   // this.iniciar();\n    // })\n    // .catch(err => {console.log(err)})\n  }\n\n  public iniciar(medicos){\n    // console.log('ME ESTOY ?INICIANDO');\n    this.medicos = medicos;\n    // this.medicos$ = new Observable((observer) => {\n    //   // console.log('ENTRE ACA');\n    //   this.observer = observer;\n    //   // this.observer.next(this.medicos);\n    // });\n\n    this.getMedicos();\n    // this.medicos$ = this.medicos.asObservable();\n\n  }\n\n  public addMedico(medico){\n    if(medico){\n      this.medicos.push(medico);\n      this.observer.next(this.medicos);\n    }\n  }\n\n  public getMedicos(){\n      this.observer.next(this.medicos);\n  }\n\n  public updateMedico(medico) {\n    if(this.medicos.length > 0 && medico){\n      let encontrado = -1;\n      this.medicos.forEach(function(elem,index){\n        if(elem._id == medico._id){\n          console.log('Lo encontre!!');\n          encontrado = index;\n        }\n      });\n      if(encontrado > -1){\n        this.medicos[encontrado] = medico;\n      }\n      this.observer.next(this.medicos);\n    }\n  }\n\n  public actualizarSemana(medicoCambiado){\n\n\n    let i = -1;\n    this.medicos.forEach(function(med,index){\n      if(med._id.toString() == medicoCambiado._id){\n        i = index;\n      }\n    });\n    if(i > -1){\n      this.medicos[i].semanaEsquema = medicoCambiado.semanaEsquema;\n    }\n\n    this.observer.next(this.medicos);\n\n  }\n\n  public deleteMedico(medico){\n    if(this.medicos.length > 0 && medico){\n      let encontrado = -1;\n      this.medicos.forEach(function(elem,index){\n        if(elem._id == medico._id){\n          console.log('Lo encontre!!');\n          encontrado = index;\n        }\n      });\n      if(encontrado > -1){\n        this.medicos.splice(encontrado, 1);\n      }\n      this.observer.next(this.medicos);\n    }\n  }\n\n  // updateMedico(medico){\n  //   // this.medicos.\n  //\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/routerService/medicos.sistema.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers} from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { Obra } from '../obras/obra.tipo';\nimport { ObrasService } from '../obras/obras.service';\nimport { AuthService } from '../authentication/auth.service';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\n\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject }           from 'rxjs/Subject';\n\nimport * as Rx from 'rxjs';\n@Injectable()\nexport class ObrasCompartidasService {\n\n  private obras: any[];\n  public observer: Observer<any[]>;\n  obras$: Observable<any[]>;\n\n  constructor(\n    private obrasService: ObrasService\n  ){\n\n    this.obras$ = new Observable((observer) => {\n      this.observer = observer;\n    });\n  }\n  public iniciarObras(obras){\n    // console.log('INICIAR PACIENTES COMPARTIDO');\n    this.obras = obras;\n    // console.log(this.obras);\n    this.getObras();\n  }\n\n  public addObra(paciente){\n    if(paciente){\n      this.obras.push(paciente);\n      this.observer.next(this.obras);\n    }\n  }\n\n  public getObras(){\n      this.observer.next(this.obras);\n  }\n\n  public updateObra(paciente) {\n    if(this.obras.length > 0 && paciente){\n      let encontrado = -1;\n      this.obras.forEach(function(elem,index){\n        if(elem._id == paciente._id){\n          console.log('Lo encontre!!');\n          encontrado = index;\n        }\n      });\n      if(encontrado > -1){\n        this.obras[encontrado] = paciente;\n      }\n      this.observer.next(this.obras);\n    }\n  }\n\n  public deleteObra(obra){\n    if(this.obras.length > 0 && obra){\n      let encontrado = -1;\n      this.obras.forEach(function(elem,index){\n        if(elem._id == obra._id){\n          console.log('Lo encontre!!');\n          encontrado = index;\n        }\n      });\n      if(encontrado > -1){\n        this.obras.splice(encontrado, 1);\n      }\n      this.observer.next(this.obras);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/routerService/obras.sistema.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers} from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { Paciente } from '../pacientes/paciente.tipo';\nimport { PacientesService } from '../pacientes/pacientes.service';\nimport { AuthService } from '../authentication/auth.service';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\n\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject }           from 'rxjs/Subject';\n\nimport * as Rx from 'rxjs';\n@Injectable()\nexport class PacientesCompartidosService {\n\n  private pacientes: any[];\n  public observer: Observer<any[]>;\n  pacientes$: Observable<any[]>;\n\n  constructor(\n    private pacientesService: PacientesService\n  ){\n\n    this.pacientes$ = new Observable((observer) => {\n      this.observer = observer;\n    });\n  }\n  public iniciarPacientes(pacientes){\n    // console.log('INICIAR PACIENTES COMPARTIDO');\n    this.pacientes = pacientes;\n    // console.log(this.pacientes);\n    this.getPacientes();\n  }\n\n  public addPaciente(paciente){\n    if(paciente){\n      this.pacientes.push(paciente);\n      this.observer.next(this.pacientes);\n    }\n  }\n\n  public getPacientes(){\n      this.observer.next(this.pacientes);\n  }\n\n  public updatePaciente(paciente) {\n    if(this.pacientes.length > 0 && paciente){\n      let encontrado = -1;\n      this.pacientes.forEach(function(elem,index){\n        if(elem._id == paciente._id){\n          console.log('Lo encontre!!');\n          encontrado = index;\n        }\n      });\n      if(encontrado > -1){\n        this.pacientes[encontrado] = paciente;\n      }\n      this.observer.next(this.pacientes);\n    }\n  }\n\n  public deletePaciente(paciente){\n    if(this.pacientes.length > 0 && paciente){\n      let encontrado = -1;\n      this.pacientes.forEach(function(elem,index){\n        if(elem._id == paciente._id){\n          encontrado = index;\n        }\n      });\n      if(encontrado > -1){\n        this.pacientes.splice(encontrado, 1);\n      }\n      this.observer.next(this.pacientes);\n    }\n  }\n\n  public existePaciente(paciente){\n\n    let indice = this.buscarPaciente(paciente);\n\n    if(indice > -1){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  private buscarPaciente(paciente){\n    let indice = -1;\n    this.pacientes.forEach(function(elem,index){\n      if(elem._id == paciente._id){\n        indice = index;\n      }\n    });\n\n    return indice;\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/routerService/pacientes.sistema.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.component.css\n// module id = ../../../../../src/app/tareas/tareas.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-title\\\">\\n        <h5>Tareas</h5>\\n        <!--<iboxtools></iboxtools>-->\\n      </div>\\n      <div class=\\\"ibox-content\\\">\\n        <ul class=\\\"todo-list m-t small-list\\\">\\n          <li *ngFor=\\\"let todo of todos; let i=index\\\">\\n            <a (click)=\\\"updateTodo(todo._id,todo.descripcion,!todo.estado);todo.estado = !todo.estado\\\" class=\\\"check-link\\\"><i class=\\\"fa\\\" [ngClass]=\\\"{'fa-check-square': todo.estado,'fa-square-o': !todo.estado}\\\"></i> </a>\\n            <span class=\\\"m-l-xs\\\" [ngClass]=\\\"{'todo-completed': todo.estado}\\\">{{ todo.descripcion }}</span>\\n            <a (click)=deleteTodo(todo._id)> <i class=\\\"fa fa-times-circle text-danger pull-right\\\" aria-hidden=\\\"true\\\"></i></a>\\n          </li>\\n        </ul>\\n        <!--\\n        Input para agregar tareas\\n      -->\\n      <hr>\\n      <div class=\\\"input-group\\\">\\n        <input\\n        [(ngModel)]=\\\"todoActual.algo\\\" #algo=\\\"ngModel\\\" name=\\\"algo\\\"\\n        type=\\\"text\\\" class=\\\"form-control\\\">\\n        <span class=\\\"input-group-btn\\\">\\n          <button (click)=\\\"createTodo(todoActual.algo); algo.value=''\\\" [disabled]='!todoActual.algo'\\n          type=\\\"button\\\" class=\\\"btn btn-primary\\\">Agregar\\n        </button>\\n      </span></div>\\n\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.component.html\n// module id = ../../../../../src/app/tareas/tareas.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {TareasService} from './tareas.service';\nimport {Tarea} from './tarea.tipo';\n\n@Component({\n  selector: 'app-tareas',\n  providers:[TareasService],\n  templateUrl: './tareas.component.html',\n  styleUrls: ['./tareas.component.css']\n})\nexport class TareasComponent implements OnInit {\n\n\n  todos: Tarea[];\n\n  public todoActual : {\n    algo: any\n  } = {\n    algo: null\n  };\n  constructor(private tareasService: TareasService) { }\n\n  ngOnInit() {\n    this.getAllTodos();\n  }\n\n\n  getAllTodos(){\n    this.tareasService.getTodos().then((allTODOS) => {\n      this.todos = allTODOS;\n\n    });\n  }\n  createTodo(descripcion : string){\n\n    this.tareasService.createTodo(descripcion).subscribe(\n      data => {\n        // console.log(data);\n        // console.log(data.json());\n        this.todoActual = {\n          algo: null\n        };;\n        this.todos.push(data.json());\n        // this.getAllTodos();\n      });\n  }\n  updateTodo(todoId:string, todo:string, newStatus:boolean){\n    this.tareasService.updateTodo(todoId,todo,newStatus).subscribe(\n      data => {\n        this.getAllTodos();\n      });\n  }\n  deleteTodo(todoId : string){\n\n    this.tareasService.deleteTodo(todoId).subscribe(\n     data => {\n        this.getAllTodos();\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { environment } from '../../environments/environment';\nimport {Tarea} from './tarea.tipo';\nimport { AuthService } from '../authentication/auth.service';\n\n\n@Injectable()\nexport class TareasService {\n\n\n  private headers = new Headers({'Content-Type': 'application/json'});\n\tprivate tareasURL = environment.apiUrl+'/tareas';  // URL to web api\n\n  constructor(private http: Http, private authService: AuthService) {\n\n  }\n\n\n  getTodos(): Promise<Tarea[]>{\n    return this.http.get(this.tareasURL,this.authService.jwt())\n\t\t.toPromise()\n\t\t.then(response => {\n\t\t\tconsole.log(response.json());\n\t\t\treturn response.json() as Tarea[];\n\t\t})\n\t\t.catch(this.handleError);\n\n  }\n\n\tcreateTodo(descripcion : string) : Observable<any>{\n\t\treturn this.http.post(this.tareasURL,\n\t\t\t{\n\t\t\t  descripcion: descripcion,\n\t\t\t  estado: false\n\t\t\t},this.authService.jwtContentType());\n\t}\n\tupdateTodo(tareaId:string,descripcion:string,nuevoEstado:boolean) : Observable<any>{\n\t\treturn this.http.put(this.tareasURL+\"/\"+ tareaId,\n\t\t\t{\n\t\t\t  descripcion: descripcion,\n\t\t\t  estado: nuevoEstado\n\t\t\t},this.authService.jwt());\n\t}\n\tdeleteTodo(tareaId:string) : Observable<any>{\n\t\treturn this.http.delete(this.tareasURL+\"/\"+ tareaId,this.authService.jwt());\n\t}\n\n\n  private handleError(error: any): Promise<any> {\n\t\tconsole.error('Ocurrio un error en servicio de Tareas: ', error);\n\t\t// alert(error.json().error);\n\t\treturn Promise.reject(error.message || error);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/tareas/tareas.service.ts","import { OnDestroy, ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\nimport 'rxjs/add/operator/repeatWhen';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/operator/takeWhile';\r\n\r\n@Pipe({\r\n  name: 'timeAgo',\r\n  pure: false\r\n})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n  private readonly async: AsyncPipe;\r\n\r\n  private isDestroyed = false;\r\n  private value: Date;\r\n  private timer: Observable<string>;\r\n\r\n  constructor(ref: ChangeDetectorRef) {\r\n    this.async = new AsyncPipe(ref);\r\n  }\r\n\r\n  public transform(obj: any, ...args: any[]): any {\r\n    if (obj == null) {\r\n      return ' ';\r\n    }\r\n\r\n    if (!(obj instanceof Date)) {\r\n      throw new Error('TimeAgoPipe works only with Dates');\r\n    }\r\n\r\n    this.value = obj;\r\n\r\n    if (!this.timer) {\r\n      this.timer = this.getObservable();\r\n    }\r\n\r\n    return this.async.transform(this.timer);\r\n  }\r\n\r\n  public now(): Date {\r\n    return new Date();\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.isDestroyed = true;\r\n    // on next interval, will complete\r\n  }\r\n\r\n  private getObservable() {\r\n    return Observable\r\n      .of(1)\r\n      .repeatWhen(notifications => {\r\n        // for each next raised by the source sequence, map it to the result of the returned observable\r\n        return notifications.flatMap((x, i) => {\r\n          const sleep = i < 60 ? 1000 : 30000;\r\n          return Observable.timer(sleep);\r\n        });\r\n      })\r\n      .takeWhile(_ => !this.isDestroyed)\r\n      .map((x, i) => this.elapsed());\r\n  };\r\n\r\n  private elapsed(): string {\r\n    let now = this.now().getTime();\r\n\r\n    // time since message was sent in seconds\r\n    let delta = (now - this.value.getTime()) / 1000;\r\n\r\n    // format string\r\n    if (delta < 60) { // sent in last minute\r\n      return `${Math.floor(delta)}s`;\r\n    } else if (delta < 3600) { // sent in last hour\r\n      return `${Math.floor(delta / 60)}m`;\r\n    } else if (delta < 86400) { // sent on last day\r\n      return `${Math.floor(delta / 3600)}h`;\r\n    } else { // sent more than one day ago\r\n      return `${Math.floor(delta / 86400)}d`;\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/time-ago.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.component.css\n// module id = ../../../../../src/app/turnos-del-medico/turnos-del-medico.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-title\\\">\\n        <h5>Turnos del día</h5>\\n         <!--<iboxtools></iboxtools>  {{whatTime | async | amDateFormat:'hh:mm'}}  -->\\n      </div>\\n      <div class=\\\"ibox-content\\\">\\n        <table class=\\\"table table-hover no-margins\\\">\\n          <thead>\\n          <tr>\\n            <th>Estado</th>\\n            <th>Horario</th>\\n            <th>Paciente</th>\\n            <th class=\\\"centro2\\\">1ºVez</th>\\n            <th>Tiempo de espera</th>\\n            <!-- <th>Doctor<th> -->\\n            <th>Acciones</th>\\n          </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"ordenados\\\">\\n          <tr *ngFor=\\\"let turno of turnos\\\">\\n          <!--\\n          {\\n            \\\"id\\\": 12,\\n            \\\"dia\\\": \\\"01-06-2017\\\",\\n            \\\"hora\\\": \\\"12:30\\\",\\n            \\\"status\\\": \\\"Pendiente\\\",\\n            \\\"paciente\\\": \\\"Raul\\\",\\n            \\\"doctor\\\": \\\"Dra. Manzazno\\\"\\n          }\\n          -->\\n            <td>\\n            <div class=\\\"dropdown\\\">\\n              <button [ngClass]=\\\"claseEstadoTurno(turno.estado)\\\" class=\\\"btn btn-xs dropdown-toggle\\\" type=\\\"button\\\" id=\\\"estadoturno\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n                {{turno.estado}}\\n                <span class=\\\"caret\\\"></span>\\n              </button>\\n              <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"estadoturno\\\">\\n                <li *ngFor=\\\"let estado of estadosTurnos\\\"><a (click)=\\\"updateTurno(turno, estado.nombre)\\\">{{estado.nombre}}</a></li>\\n              </ul>\\n            </div>\\n\\n            </td>\\n            <td><i class=\\\"fa fa-calendar-o\\\"></i> {{turno.horaInicial | amUtc | amDateFormat:'HH:mm'}}</td>\\n            <td>{{turno.paciente.nombre}} {{turno.paciente.apellido}}</td>\\n            <td><i class=\\\"centro fa fa-check\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"turno.paciente.primeraVez\\\"></i><i class=\\\"centro fa fa-times\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!turno.paciente.primeraVez\\\"></i></td>\\n            <td><span *ngIf=\\\"turno.estado === 'en espera' || turno.estado === 'en estudio'\\\" class=\\\"text-warning\\\"><i class=\\\"fa fa-clock-o\\\"></i> Hace {{ aDate(turno.horaUltimoCambio)  | timeAgo }}</span></td>\\n            <!-- <td>{{turno.medico.apellido}}</td> -->\\n            <td>\\n              <!-- <button (click)=\\\"editar(turno)\\\" class=\\\"btn btn-info\\\"></button> -->\\n              <button [disabled]=\\\"!comprobarEstado(turno)\\\" (click)=\\\"llamarPaciente(turno)\\\" class=\\\"btn btn-success\\\">Llamar Paciente</button>\\n              <button [disabled]=\\\"turno.estado != 'activo'\\\" (click)=\\\"finalizarTurno(turno)\\\" class=\\\"btn btn-danger\\\">Finalizar Turno</button>\\n              <button [disabled]=\\\"turno.estado != 'activo'\\\" (click)=\\\"ponerEnEstudio(turno)\\\" class=\\\"btn btn-info\\\">Enviar a Estudio</button>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<style media=\\\"screen\\\">\\n  .centro{\\n    margin: auto;\\n    width: 50%;\\n    display: block;\\n  }\\n  .centro2{\\n    margin: auto;\\n    width: 85%;\\n    display: block;\\n  }\\n</style>\\n<simple-notifications [options]=\\\"options\\\"></simple-notifications>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.component.html\n// module id = ../../../../../src/app/turnos-del-medico/turnos-del-medico.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { TurnosDelMedicoService} from './turnos-del-medico.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport {Turno} from '../turnos/turno.tipo';\nimport {\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    OnDestroy,\n} from '@angular/core';\nimport * as moment from 'moment';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Component({\n  selector: 'app-turnos-del-medico',\n  providers:[TurnosDelMedicoService, NotificationsService],\n  templateUrl: './turnos-del-medico.component.html',\n  styleUrls: ['./turnos-del-medico.component.css']\n})\nexport class TurnosDelMedicoComponent implements OnInit {\n\n  private subscription: Subscription;\n  public ordenados: boolean = false;\n  estadosTurnos:any[] =  [\n    {\n      \"id\": 1,\n      \"nombre\": \"en espera\",\n      \"clase\": \"warning\"\n    },\n    {\n      \"id\": 2,\n      \"nombre\": \"pendiente\",\n      \"clase\": \"default\"\n    },\n    {\n      \"id\": 3,\n      \"nombre\": \"finalizado\",\n      \"clase\": \"danger\"\n    },\n    {\n      \"id\": 4,\n      \"nombre\": \"activo\",\n      \"clase\": \"success\"\n    },\n    {\n      \"id\": 5,\n      \"nombre\": \"otro\",\n      \"clase\": \"info\"\n    },\n    {\n        \"id\": 6,\n        \"nombre\": \"en estudio\",\n        \"clase\": \"info\"\n    }\n  ];\n  turnos: Turno[];\n  private miMatricula: String;\n  private medicoId: String;\n\n  //Opciones de las notificiones\n  public options = {\n       position: [\"top\", \"right\"],\n      //  timeOut: 5000,\n       showProgressBar: false,\n       animate: \"fromRight\",\n       lastOnBottom: false,\n   };\n  constructor(private turnosDelMedicoService : TurnosDelMedicoService,private ref: ChangeDetectorRef,\n    private notificacionesService: NotificationsService) { }\n\n\n  /* Metodo para asignar la visual de los desplegables de la visual */\n  claseEstadoTurno(status){\n    var clase = \"btn-default\";\n    for (var i in this.estadosTurnos) {\n      if (status == this.estadosTurnos[i].nombre){\n        clase = \"btn-\" + this.estadosTurnos[i].clase;\n      }\n    }\n\n    return clase\n  }\n\n  /* Metodo para armar un objeto fechas. tiene las alternativas de ambos SO trabajados en el desarrollo */\n  aDate(turno){\n    ////console.log(turno);\n\n    //En Windows:\n    //var momentDate = moment(turno);\n\n    //En Linux: UTC\n    var momentDate = moment(turno,'YYYY-MM-DDTHH:mm:ss');\n    var fecha = momentDate.toDate();\n    return fecha\n  }\n\n\n  updateTurno(turno,estado){\n    // ////console.log(turno);\n    // ////console.log(estado);\n    turno.estado=estado;\n\n    this.turnosDelMedicoService.updateTurno(turno,estado);\n    // this.dashboardService.updateCita(cita).subscribe(\n    //   data => {\n    //     this.getAllTodos();\n    // });\n\n  }\n\n\n  public llamarPaciente(turno){\n    this.turnosDelMedicoService.updateTurno(turno,\"activo\");\n  }\n\n  public finalizarTurno(turno){\n    this.turnosDelMedicoService.updateTurno(turno,\"finalizado\");\n  }\n\n  public ponerEnEstudio(turno){\n    this.turnosDelMedicoService.updateTurno(turno,\"en estudio\");\n  }\n\n  public comprobarEstado(turno): Boolean{\n    let bandera = false;\n    if(turno.estado === 'en espera' || turno.estado === 'en estudio'){\n      bandera = true;\n    }\n    return bandera;\n  }\n\n  ngOnInit() {\n    //Aca debemos buscar la matricula del medico que queremos. En el caso de prueba, se pone MANUAL.\n    //CAMBIAR!\n\n\n    var medico: any = JSON.parse(localStorage.getItem('user'));\n    this.ordenados = false;\n    if (medico.clase === \"medico\"){\n      this.miMatricula = medico.matricula;\n      this.medicoId = medico._idMedico;\n\n      this.turnosDelMedicoService.asignarNotificaciones(this.notificacionesService);\n\n      this.subscription = this.turnosDelMedicoService.turnos$.subscribe((turnos: Turno[]) => {\n          this.turnos = turnos;\n          // console.log('ACAACACA CACA ');\n          // console.log(this.turnos);\n          this.ref.markForCheck();\n          this.turnos.sort(function(a, b){\n\n            let c = new Date(a.horaInicial);\n            let d = new Date(b.horaInicial)\n            let comparacion = c.getTime() - d.getTime();\n\n            return (comparacion)\n\n          });\n          this.ordenados = true;\n      }, (err) => {\n          console.error(err);\n      });\n\n      this.turnosDelMedicoService.buscarTurnos(this.miMatricula, this.medicoId);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport * as io from 'socket.io-client';\nimport * as moment from 'moment';\n//import * as feathers from 'feathers-client';\n\ndeclare var feathers:any;\n\n\nimport { Turno } from '../turnos/turno.tipo';\nimport { environment } from '../../environments/environment';\nimport { Feathers } from '../authentication/feathers.service'\n\ndeclare var $: any;\n\n\n@Injectable()\nexport class TurnosDelMedicoService {\n\n    private urlServidor = environment.apiUrl;\n\n    public turnos$: Observable<Turno[]>;\n    private turnosObserver: Observer<Turno[]>;\n\n    private turnosService: any;\n\n    private dataStore: {\n        turnos: Turno[]\n    };\n\n    private notificaciones:any;\n\n\n    //private matricula: string;\n    private feathersService;\n    private socket;\n\n    private miMatricula: String;\n    constructor(private FeathersCambiarNombre: Feathers) {\n      //this.socket = io(this.urlServidor);\n      //const feathersApp = feathers().configure(feathers.socketio(this.socket));\n\n      //Obtenemos el service que queremos\n      this.feathersService = FeathersCambiarNombre.devolverFeathers();\n      this.turnosService = this.feathersService.service('turnos');\n\n\n      //Registramos eventos\n      this.turnosService.on('created', (turno) => this.onCreated(turno));\n      this.turnosService.on('updated', (turno) => this.onUpdated(turno));\n      this.turnosService.on('removed', (turno) => this.onRemoved(turno));\n      this.turnosService.on('patched', (turno) => this.onPatched(turno));\n\n\n      this.turnos$ = new Observable((observer) => {\n          this.turnosObserver = observer;\n      });\n\n      this.dataStore = { turnos: [] };\n    }\n\n\n\n    public buscarTurnos(miMatricula: String, idMedico) {\n        //let m = this.matricula;\n        // console.log('ENTRE EN BUSCAR TURNOS');\n        this.miMatricula = miMatricula;\n\n        // console.log(idMedico);\n        let fechaHoy = new Date();\n        // let temp = moment(fechaHoy).subtract(1,'days').format('YYYY-MM-DD');\n        let temp = moment(fechaHoy).format('YYYY-MM-DD');\n        let temp2 = moment(temp, \"YYYY-MM-DD\").add(1, 'days');\n        let temp3 = (moment(temp2).format('YYYY-MM-DD'));\n\n        // console.log(temp);\n        // console.log(temp2);\n        // console.log(temp3);\n\n        this.turnosService.find({\n            query: {\n                horaInicial: {\n                  $gt: temp,\n                  $lt: temp3\n                },\n                medico: idMedico,\n                $populate: 'paciente medico' //'paciente medico'\n            }\n        }).then((turnos) => {\n\n          // ////console.log(\"ENTRE AL BUSCAR TURNOS DEL PACIENTES DEL DIA\");\n          // ////console.log(turnos);\n\n          ////console.log('ENTRE A PEDIR TURNOS');\n          ////console.log(turnos);\n\n          this.dataStore.turnos = turnos;\n          this.turnosObserver.next(this.dataStore.turnos);\n        }).catch(err => console.error(err));\n    }\n\n\n    public updateTurno(turno, nuevoEstado){\n      var now = new Date();\n      // console.log(\"################\");\n      // console.log(now);\n\n      var nueva = moment(now).utc();\n      // console.log(nueva);\n      // var momentDate = moment(now).utc();\n      // console.log(\"HORA...\");\n      // console.log(momentDate);\n      this.turnosService.patch(turno._id,{\"estado\": nuevoEstado, \"horaUltimoCambio\": nueva }).then((turnoActualizado) => {\n        // console.log(\"Turno actualizado correctamente\");\n        // console.log(turnoActualizado);\n      }).catch(err => console.error(err));\n    }\n\n    private getIndex(id: string): number {\n        let foundIndex = -1;\n\n        for (let i = 0; i < this.dataStore.turnos.length; i++) {\n            if (this.dataStore.turnos[i]._id === id) {\n                foundIndex = i;\n            }\n        }\n\n        return foundIndex;\n        // return 0;\n    }\n\n    /*\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onCreated'\n    */\n    private onCreated(turno: any) { //REMPLAZR EL ANY CON TURNO!\n\n        if(this.miMatricula === turno.medico.matricula){\n\n          /*\n            IMPORTANTE:\n            Por el momento, la variable hoy es la correcta, pero la pasamos a local para\n            poder compararla con diaTurno. Es decir, ambos horarios estan en -3 horas.\n          */\n\n          let hoy = new Date();\n\n          hoy.setUTCDate(hoy.getDate());\n          hoy.setUTCHours(hoy.getHours());\n\n\n          let diaTurno = new Date(turno.horaInicial);\n          // diaTurno.setUTCDate(diaTurno.getDate());\n          // diaTurno.setUTCHours(diaTurno.getHours());\n\n          if( diaTurno.getTime() >= hoy.getTime()){\n\n            //No aseguramos que SI O SI pertenezca a hoy\n            if(hoy.getDate() == diaTurno.getDate() && hoy.getMonth() == diaTurno.getMonth()){\n              // console.log('Esto es lo que queriamos!');\n              this.dataStore.turnos.push(turno);\n              //lo pusheo al calendar\n              this.turnosObserver.next(this.dataStore.turnos);\n            }\n          }\n\n        }\n\n    }\n\n    /*\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'\n    */\n    private onUpdated(turno: Turno) {\n        const index = this.getIndex(turno._id);\n\n        if(index != -1){\n          this.dataStore.turnos[index] = turno;\n\n          this.turnosObserver.next(this.dataStore.turnos);\n        }\n\n    }\n\n\n\n    /*\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onRemoved'\n    */\n    private onRemoved(turno: Turno) {\n        const index = this.getIndex(turno._id);\n\n        if(index != -1){\n          this.dataStore.turnos.splice(index, 1);\n\n          this.turnosObserver.next(this.dataStore.turnos);\n        }\n\n    }\n\n    /*\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'\n    */\n\n    private onPatched(turno){\n\n      let indexTurno = this.buscarIndexTurno(turno);\n\n      if(indexTurno != -1){\n\n        let turnoAnterior:any = this.dataStore.turnos[indexTurno];\n\n        //El medico esta llamando un nuevo paciente\n        if(turnoAnterior.estado !='en espera' && turno.estado == 'en espera'){\n          // console.log('Estaba pendiente y ahora el paciente llego al consultorio.');\n          this.notificarPacienteEspera(turno.paciente);\n        }\n        this.dataStore.turnos[indexTurno] = turno;\n      }\n\n\n\n    }\n\n\n\n    /*\n        Al destruirse el servicio, se debe cerrar el socket y borrar el observable del mismo.\n    */\n    ngOnDestroy(){\n\n        //this.socket.close();\n        //this.socket.disconnect();\n        //this.turnosObserver = null;\n        // ////console.log(\"SE TERMINO EL SERVICIOOOOOOOOOOOOOO\");\n    }\n\n\n    public asignarNotificaciones(notificaciones){\n      this.notificaciones = notificaciones;\n    }\n\n\n    notificarPacienteEspera(paciente) {\n      this.notificaciones.info(\n        'El paciente ' + paciente.nombre + ' ' + paciente.apellido + ' se encuentra en sala de espera'\n      )\n    }\n\n    //Metodos auxiliares\n  private buscarIndexTurno(turno): number{\n    let indexTurno = -1;\n\n    let turnos = this.dataStore.turnos;\n    // ////console.log(turnos);\n\n    turnos.forEach(function(elem,index){\n      if(elem._id.toString() == turno._id.toString()){\n\n        indexTurno = index;\n      }\n    });\n\n    return indexTurno;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos-del-medico/turnos-del-medico.service.ts","module.exports = \"<!-- Modal Formulario Crear Turno -->\\n<div class=\\\"modal fade\\\" id=\\\"formCrearTurno\\\" #formCrearTurno tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeFormCrearTurno >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Asignar nuevo turno</h3>\\n      </div>\\n\\n      <!-- <div class=\\\"modal-body\\\" > -->\\n      <div class=\\\"modal-body\\\" *ngIf = 'horaNuevoTurno != null && diaNuevoTurno != null && pacientes != null' >\\n\\n        <div class=\\\"form-group\\\">\\n          <h4 >Turno: {{diaNuevoTurno}} a las {{horaNuevoTurno}}hs</h4>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div style=\\\"width: 60%; margin-bottom: 1%;\\\">\\n            <h4>Seleccionar un paciente</h4>\\n            <ng-select #selector2 *ngIf = 'actualizado == true'\\n            [allowClear]=\\\"true\\\"\\n                        [items]=\\\"pacientesSelector\\\"\\n                        [disabled]=\\\"disabled\\\"\\n                        (data)=\\\"refreshValue($event)\\\"\\n                        (selected)=\\\"selected($event)\\\"\\n                        (removed)=\\\"removed($event)\\\"\\n                        (typed)=\\\"typed($event)\\\"\\n                        placeholder=\\\"buscar\\\">\\n            </ng-select>\\n          </div>\\n          <button class=\\\"btn btn-sm btn-primary pull-right\\\" (click)='agregarPaciente()'>\\n            <strong>Agregar paciente</strong>\\n          </button>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelar()'>\\n          Cancelar\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\" (click)='asignarTurno()'>\\n          Agregar\\n        </button>\\n\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\\n<agregar-paciente\\n  (pacienteAgregado)='onPacienteAgregado($event)'\\n></agregar-paciente>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/asignarPaciente/asignarPacienteTurno.html\n// module id = ../../../../../src/app/turnos/asignarPaciente/asignarPacienteTurno.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n//Declaramos esta variable para hacer uso de Jquery con los modals de Boostrap\ndeclare var $: any;\n\n@Component({\n  selector: 'asignacion-paciente',\n  templateUrl: './asignarPacienteTurno.html'\n})\nexport class AsignarPacienteComponent implements OnChanges{\n\n  @Input() fechaNuevoTurno: any;\n  @Input() pacientes: Array<any>;\n  @Output() nuevaAsignacion = new EventEmitter();\n\n  @ViewChild('closeFormCrearTurno') closeFormCrearTurno: ElementRef;\n  @ViewChild('selector2') selector: ElementRef;\n\n  public horaNuevoTurno: any;\n  public diaNuevoTurno: any;\n\n  public pacientesSelector: Array<any> = [];\n\n  public actualizado: boolean = false;\n\n  private value:any = {};\n  private _disabledV:string = '0';\n  private disabled:boolean = false;\n\n  /*\n  Este metodo es llamado cada vez que se cambia la fecha y/o los pacientes (inputs de este componente).\n  Principalmente, se completa la variable 'pacientesSelector', para poder ser utilizados con el componente ng2-select.\n  Tambien se preparan las variables de horaNuevoTurno y diaNuevoTurno para la visual del modal.\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n\n    if(this.pacientes!=null && this.fechaNuevoTurno != null){\n      ////console.log('Entre a Ng on Changes de Asignar PacientesServiceiente a un Turno');\n\n      //Asignamos las fechas para el modal\n      this.horaNuevoTurno = this.fechaNuevoTurno.format('HH:mm');\n      this.diaNuevoTurno = this.fechaNuevoTurno.format('DD [de] MMMM');\n\n      let yo = this;\n      this.pacientes.forEach(function(elem,index){\n        /*\n        Dado que estamos usando el componente ng2-select,\n        debemos tener un arreglo en el que cada objeto TENGA:\n        un atributo 'id'\n        un atributo 'text'\n        */\n        yo.pacientesSelector[index] = elem;\n        yo.pacientesSelector[index].id = elem.nombre +' ' + elem.apellido + ' - ' + elem.dni;\n        yo.pacientesSelector[index].text = elem.nombre +' ' + elem.apellido + ' - ' + elem.dni;\n      });\n      if(yo.pacientesSelector.length > 0){\n        ////console.log('TRUE');\n        this.actualizado = true;\n      }\n    }\n\n  }\n\n  /*\n\n  */\n  public asignarTurno(){\n\n    let pacienteAsignado = null;\n    let yo = this;\n\n    this.pacientesSelector.forEach(function(elem,index){\n      if(elem.id == yo.value.id){\n        ////console.log('encontre!');\n        pacienteAsignado = Object.assign({}, elem); //clonamos el elemento\n      }\n    });\n\n    //Quitamos los atributos agregados para el selector del clone\n    // delete pacienteAsignado['id'];\n    // delete pacienteAsignado['text'];\n    // ////console.log(pacienteAsignado);\n\n    //Cerramos el modal\n    this.closeFormCrearTurno.nativeElement.click();\n\n    //Enviamos la eleccion al componente padre\n    this.nuevaAsignacion.next(pacienteAsignado);\n  }\n\n  /*\n\n  */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    this.closeFormCrearTurno.nativeElement.click();\n  }\n\n  /*\n\n  */\n  public agregarPaciente(){\n    $('#formAgregarPaciente').modal('show');\n  }\n\n  public onPacienteAgregado(pacienteNuevo){\n    ////console.log('Entre en onPacienteAgregado de Asignar Paciente Turno');\n    ////console.log(pacienteNuevo);\n\n    if(this.pacientesSelector.length > 0){\n      this.pacientesSelector = [];\n    }\n\n\n    if(pacienteNuevo != null && pacienteNuevo.aprobado){\n      // console.log('ENTRE a paciente Nuevo y pase el if');\n      // console.log(pacienteNuevo);\n      this.pacientes.push(pacienteNuevo); //No se si es necesario hacerlo con pacientes\n\n      //Reiniciamos el selector\n      let yo = this;\n      this.pacientes.forEach(function(elem,index){\n        yo.pacientesSelector[index] = elem;\n        yo.pacientesSelector[index].id = elem.nombre +' ' + elem.apellido + ' - ' + elem.dni;\n        yo.pacientesSelector[index].text = elem.nombre +' ' + elem.apellido + ' - ' + elem.dni;\n      });\n    }\n\n    // console.log('ENTRE A ON PACIENTE AGREGADO');\n\n    if(this.selector != undefined){\n      // console.log('Pase el selector');\n      // console.log(this.selector);\n      /*\n      IMPORTANTE: Workaround para que se actualice segun obrasSelector\n      Sacado de:\n      https://github.com/valor-software/ng2-select/issues/635#issuecomment-281094377\n      */\n\n      //this.turnosPorObra[0].obraSocial = this.obrasSelector[0].id;\n      // let algo = {\n      //   id:'algo',\n      //   text: 'algo'\n      // }\n      //\n      // this.pacientesSelector = [algo];\n\n      (<any>this.selector).open();\n    }\n  }\n\n  //---------------------------------------------------------------------------\n  //Metodos originales del componente\n\n  private get disabledV():string {\n    return this._disabledV;\n  }\n\n  private set disabledV(value:string) {\n    this._disabledV = value;\n    this.disabled = this._disabledV === '1';\n  }\n  public selected(value:any):void {\n    ////console.log('Selected value is: ', value);\n  }\n\n  public removed(value:any):void {\n    ////console.log('Removed value is: ', value);\n  }\n\n  public typed(value:any):void {\n    ////console.log('New search input: ', value);\n  }\n\n  public refreshValue(value:any):void {\n    this.value = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/asignarPaciente/asignarPacienteTurno.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport * as io from 'socket.io-client';\r\nimport * as moment from 'moment';\r\n//import * as feathers from 'feathers-client';\r\n\r\n\r\ndeclare var feathers:any;\r\ndeclare var feathersClient:any;\r\n\r\n\r\n\r\nimport { Turno } from './turno.tipo';\r\n\r\nimport { PacientesService } from '../pacientes/pacientes.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\nimport { AuthService } from \"../authentication/auth.service\";\r\n\r\ndeclare var $: any;\r\n\r\nimport * as feathersRx from 'feathers-reactive';\r\n\r\nimport * as hooks from 'feathers-hooks';\r\nimport * as Rx from 'rxjs';\r\nimport * as authentication from 'feathers-authentication-client';\r\nimport { Feathers } from '../authentication/feathers.service'\r\n\r\n\r\n@Injectable()\r\nexport class TurnoSocketService {\r\n\r\n    private urlServidor = environment.apiUrl;\r\n\r\n    public turnos$: Observable<Turno[]>;\r\n    private turnosObserver: Observer<Turno[]>;\r\n\r\n    private turnosSocketService: any;\r\n\r\n    private dataStore: {\r\n        turnos: Turno[]\r\n    };\r\n\r\n    private idDoctor: string;\r\n    private socket;\r\n\r\n    private feathersApp;\r\n    constructor(private authService: AuthService) {\r\n\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // Metodos particulares\r\n\r\n    public iniciar(id : string){\r\n\r\n        ////console.log('Entre en Iniciar del TURNO SOCKET SERVICE');\r\n\r\n        this.idDoctor = id;\r\n\r\n        this.socket = io(this.urlServidor);\r\n\r\n        this.feathersApp = feathers().configure(feathers.socketio(this.socket));\r\n        this.feathersApp.configure(hooks());\r\n        this.feathersApp.configure(feathersRx(Rx));\r\n\r\n        this.feathersApp.configure(authentication({         // add authentication plugin\r\n          storage: window.localStorage\r\n        }));\r\n\r\n        //Obtenemos el service que queremos\r\n        this.turnosSocketService = this.feathersApp.service('turnos');\r\n\r\n        //Registramos eventos\r\n        this.turnosSocketService.on('created', (turno) => this.onCreated(turno));\r\n        this.turnosSocketService.on('updated', (turno) => this.onUpdated(turno));\r\n        this.turnosSocketService.on('removed', (turno) => this.onRemoved(turno));\r\n        this.turnosSocketService.on('patched', (turno) => this.onPatched(turno));\r\n\r\n\r\n        this.turnos$ = new Observable((observer) => {\r\n            this.turnosObserver = observer;\r\n        });\r\n        console.log(\"ANTES DE CARGAR\");\r\n        this.dataStore = { turnos: [] };\r\n        var thisLocal = this;\r\n\r\n        thisLocal.autenticar().then((param)=>{\r\n          // console.log(\"PARAMS\");\r\n          // console.log(param);\r\n          thisLocal.find();\r\n\r\n\r\n        });\r\n\r\n        //Quizas este no iria aca\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    /*\r\n      Metodo para autenticar ESTE socket\r\n    */\r\n    private autenticar(): Promise<any>{\r\n\r\n        // console.log(\"ENTRE AL AUTHENTICAR\");\r\n        let token = localStorage.getItem('feathers-jwt');\r\n\r\n        return this.feathersApp.authenticate({\r\n          strategy: \"jwt\",\r\n          accessToken: token\r\n        });\r\n    }\r\n\r\n    public obtenerTurno(id){\r\n\r\n    }\r\n\r\n    public cambiarMedico(id){\r\n        this.cleanService();\r\n        // ////console.log(\"CAMBIO DE MEDICO\");\r\n        this.iniciar(id);\r\n    }\r\n\r\n    public cleanService(){\r\n        //this.turnosSocketService = null;\r\n        //Obtenemos el service que queremos\r\n        ////console.log(\"ENTRE AL CLEAN SERVICE\");\r\n        this.socket.disconnect();\r\n        this.turnosSocketService = null;\r\n\r\n\r\n\r\n        this.turnos$ = null;\r\n\r\n        this.dataStore = { turnos: [] };\r\n    }\r\n\r\n    /*\r\n        Grafica el turno que llega por parametro.\r\n    */\r\n\r\n    private actualizarVisual(turno:Turno){\r\n\r\n        //let horaInicial = turno.horaInicial.split('.')[0]; //Transformo la fecha sacandole LA ZONA HORARIA para que no explote el calendario.\r\n        let horaInicial = turno.horaInicial\r\n        //let horaFin = turno.horaFin.split('.')[0]; //Transformo la fecha sacandole LA ZONA HORARIA para que no explote el calendario.\r\n        let horaFin = turno.horaFin;\r\n        //Le agregue el ID al final del nuevo turno para asi poder saber a que objeto corresponde cada evento grafico\r\n\r\n        let newTurno = {\"title\":turno.paciente.nombre+' '+turno.paciente.apellido,\"allDay\":false,\"start\":horaInicial,\"end\":horaFin,\"color\":\"#f8ac59\",\"_id\":turno._id, \"id\":turno._id};\r\n\r\n\r\n        $('#calendar').fullCalendar('renderEvent', newTurno, true)\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------------------\r\n    // Metodos principales\r\n\r\n    public crearTurno(fecha: Date, pacienteAsignado){\r\n\r\n        let paciente = pacienteAsignado;\r\n\r\n        //El color depende del medico al que le estoy cargando el turno\r\n        var color = '#f8ac59';\r\n\r\n\r\n        //*************************************************\r\n\r\n        /**\r\n        IMPORTANTE: Momentaneamente, al usar en windows, comentar la linea de Linux y descomentar la de Windows.\r\n        Para usar en Linux, hacer la vicebersa.\r\n        */\r\n        //*************************************************\r\n\r\n        //Windows: descomentar la linea de abajo\r\n         var temp = moment(fecha).utc().add(15, 'm'); //LO QUE ESTOY HACIENDO ACA ES HACER TURNOS DE 15 MINUTOS! ESE 15 DEBE SER POR MEDICOOOOOOOO\r\n\r\n        //LINUX: descomentar la linea de abajo\r\n        // var temp = moment(fecha,'YYYY-MM-DDTHH:mm:ss Z').add(15, 'm'); //LO QUE ESTOY HACIENDO ACA ES HACER TURNOS DE 15 MINUTOS! ESE 15 DEBE SER POR MEDICOOOOOOOO\r\n\r\n\r\n        //*************************************************\r\n\r\n\r\n        //let nuevaFecha = temp.utc().format('YYYY-MM-DDTHH:mm:ss'); //Le saco a la fecha la zona horaria!\r\n        let nuevaFecha = temp.format('YYYY-MM-DDTHH:mm:ss'); //Le saco a la fecha la zona horaria!\r\n\r\n\r\n\r\n        let nuevoTurno = {\r\n          horaInicial: fecha,\r\n          horaFin: nuevaFecha,\r\n          medico:this.idDoctor,\r\n          estado:'pendiente',\r\n          paciente: paciente._id\r\n        }\r\n\r\n        this.turnosSocketService.create(nuevoTurno).then((turnoNuevo)=>{\r\n          ////console.log('turnoNuevo');\r\n          ////console.log(turnoNuevo);\r\n          //******************************************************************\r\n          /**\r\n          IMPORTANTE:\r\n          Todavia NO ACTUALIZAMOS, pues eso se va a hacer en el EVENTO 'onCreated'.\r\n          */\r\n          //******************************************************************\r\n        });\r\n    }\r\n\r\n    public actualizarTurno(turno){\r\n\r\n        let newHoraInicial = turno.start.format();\r\n        let newHoraFin = turno.end.format();\r\n        let id = turno._id;\r\n        this.turnosSocketService.patch(id, {\"horaInicial\":newHoraInicial,\"horaFin\":newHoraFin}).then((turnoActualizado)=>{\r\n        });\r\n    }\r\n    public actualizarTurno2(start, end, idTurno){\r\n\r\n        let newHoraInicial = start.format();\r\n        let newHoraFin = end.format();\r\n        let id = idTurno;\r\n        this.turnosSocketService.patch(id, {\"horaInicial\":newHoraInicial,\"horaFin\":newHoraFin}).then((turnoActualizado)=>{\r\n        });\r\n    }\r\n\r\n    public eliminarTurno(idTurno){\r\n        console.log(\"Entre al eliminar Turno con el id de : \", idTurno);\r\n        let id = idTurno;\r\n        this.turnosSocketService.remove(idTurno).then((turnoEliminado)=>{\r\n            console.log(\"Turno eliminado!!\");\r\n        });\r\n        console.log(\"despues del eliminar\");\r\n    }\r\n\r\n\r\n    public find() {\r\n\r\n        let idMedico = this.idDoctor.toString();\r\n        // ////console.log(idMedico);\r\n        this.turnosSocketService.find({\r\n            query: {\r\n                //matricula: m\r\n                medico: idMedico\r\n            }\r\n        }).then((turnos) => {\r\n\r\n            //******************************************************************\r\n            /**\r\n            IMPORTANTE:\r\n            A veces es necesario hacer el .data. Es cuando, por ej, usas pagination\r\n            */\r\n            //******************************************************************\r\n            // ////console.log(\"#### FIND ###\");\r\n            // ////console.log(turnos);\r\n            this.dataStore.turnos = turnos;\r\n\r\n            //Aca vamos a renderizar el calendario de nuevo despues de obtener todos los turnos de ese medico.\r\n            for (let i = 0; i < turnos.length; i++) {\r\n                this.actualizarVisual(turnos[i]);\r\n            }\r\n\r\n            this.turnosObserver.next(this.dataStore.turnos);\r\n        }).catch(err => {\r\n            // console.error(err);\r\n            console.log(\"ocurrio un error en el find de turnos\");\r\n        });\r\n    }\r\n\r\n    private getIndex(id: string): number {\r\n        let foundIndex = -1;\r\n\r\n        for (let i = 0; i < this.dataStore.turnos.length; i++) {\r\n            if (this.dataStore.turnos[i]._id === id) {\r\n                foundIndex = i;\r\n            }\r\n        }\r\n\r\n        return foundIndex;\r\n        // return 0;\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------------------\r\n    // Metodos de recepcion de eventos de sockets\r\n\r\n    /*\r\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onCreated'\r\n    */\r\n    private onCreated(turno: any) { //REMPLAZR EL ANY CON TURNO!\r\n        // ////console.log('On created de Angular con Socket de Feathers');\r\n        // ////console.log(turno);\r\n\r\n        this.dataStore.turnos.push(turno);\r\n        //lo pusheo al calendar\r\n        this.actualizarVisual(turno);\r\n        this.turnosObserver.next(this.dataStore.turnos);\r\n    }\r\n\r\n    /*\r\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'\r\n    */\r\n    private onUpdated(turno: Turno) {\r\n        const index = this.getIndex(turno._id);\r\n\r\n        this.dataStore.turnos[index] = turno;\r\n\r\n        this.turnosObserver.next(this.dataStore.turnos);\r\n    }\r\n\r\n    /*\r\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onRemoved'\r\n    */\r\n    private onRemoved(turno: Turno) {\r\n        const index = this.getIndex(turno._id);\r\n\r\n        let eventosCalendario = $('#calendar').fullCalendar('clientEvents');\r\n\r\n        this.dataStore.turnos.splice(index, 1);\r\n        this.turnosObserver.next(this.dataStore.turnos);\r\n        $('#calendar').fullCalendar('removeEvents',eventosCalendario[index].id); // Esto elimina el evento (grafico) con el id = turno._id\r\n    }\r\n\r\n    /*\r\n        Este metodo va a ser llamado cada vez que alguien (desde aca o desde el server) emita ese evento 'onUpdated'\r\n    */\r\n\r\n    private onPatched(turno){\r\n\r\n        let id = turno._id;\r\n\r\n        $('#calendar').fullCalendar('removeEvents',turno._id); // Esto elimina el evento (grafico) con el id = turno._id\r\n        this.actualizarVisual(turno); //\r\n    }\r\n\r\n\r\n    /*\r\n        Al destruirse el servicio, se debe cerrar el socket y borrar el observable del mismo.\r\n    */\r\n    ngOnDestroy(){\r\n\r\n        //this.socket.close();\r\n        this.socket.disconnect();\r\n        //this.turnosObserver = null;\r\n        ////console.log(\"SE TERMINO EL SERVICIOOOOOOOOOOOOOO\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos-socket.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".blureado{\\n\\t-webkit-filter: blur(2PX);\\n\\t        filter: blur(2PX);\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.component.css\n// module id = ../../../../../src/app/turnos/turnos.component.css\n// module chunks = main","module.exports = \"\\r\\n\\r\\n<div class=\\\"ibox\\\" id=\\\"ibox1\\\">\\r\\n\\t<div class=\\\"ibox-title\\\">\\r\\n        <h5 *ngIf=\\\"doctorSeleccionado != null\\\" >Doctor: {{doctorSeleccionado.nombre}} {{doctorSeleccionado.apellido}}</h5>\\r\\n    </div>\\r\\n    <div class=\\\"ibox-content\\\" [ngClass]=\\\"{'sk-loading': cargandoTurnos}\\\">\\r\\n    \\t<div class=\\\"sk-spinner sk-spinner-wandering-cubes\\\">\\r\\n            <div class=\\\"sk-cube1\\\"></div>\\r\\n            <div class=\\\"sk-cube2\\\"></div>\\r\\n        </div>\\r\\n    \\t<div [ngClass]=\\\"{'blureado': cargandoTurnos}\\\">\\r\\n    \\t\\t<div id=\\\"calendar\\\"></div>\\r\\n    \\t</div>\\r\\n    \\t\\t\\r\\n\\t\\t<asignacion-paciente\\r\\n\\t\\t[fechaNuevoTurno]='fechaNuevoTurno'\\r\\n\\t\\t[pacientes]='pacientes'\\r\\n\\t\\t(nuevaAsignacion)='onAsignacionPaciente($event)'\\r\\n\\t\\t ></asignacion-paciente>\\r\\n\\r\\n\\t\\t <ver-turno [turno]=turnoSeleccionado></ver-turno>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.component.html\n// module id = ../../../../../src/app/turnos/turnos.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationError, NavigationCancel, RoutesRecognized } from '@angular/router';\r\n\r\nimport 'rxjs/add/operator/filter';\r\nimport { TurnosService } from './turnos.service';\r\nimport { MedicosService } from '../medico/medicos.service';\r\n\r\nimport * as moment from 'moment';\r\n\r\n\r\nimport { Medico } from '../medico/medico.tipo';\r\nimport { Turno } from './turno.tipo';\r\nimport { TurnoSocketService } from './turnos-socket.service';\r\nimport { PacientesService } from '../pacientes/pacientes.service';\r\n\r\nimport { PacientesCompartidosService } from '../routerService/pacientes.sistema';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport {default as swal} from 'sweetalert2';\r\n//Declaramos esta variable para hacer uso de Jquery con los modals de Boostrap\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'turnos',\r\n  providers:[TurnoSocketService, PacientesService],\r\n  templateUrl: './turnos.component.html',\r\n  styleUrls: ['./turnos.component.css']\r\n})\r\n\r\nexport class TurnosComponent implements OnInit, OnDestroy {\r\n\r\n  url: string;\r\n  idDoctor: string;\r\n  doctorSeleccionado: Medico;\r\n\r\n  doctores: Medico[];\r\n  turnos: Turno[];\r\n  turnoSeleccionado: any;\r\n\r\n  pacientes: any[] = [];\r\n\r\n  fechaNuevoTurno: any = null;\r\n\r\n  private iniciado: boolean = false;\r\n  private cambio: boolean = false;\r\n\r\n  private subscription: Subscription;\r\n  private pacientesSubscription: Subscription;\r\n\r\n  public cargandoTurnos: boolean = true;\r\n\r\n  constructor(\r\n    route: ActivatedRoute,\r\n    private turnosService: TurnosService,\r\n    private doctoresService: MedicosService,\r\n    private pacientesService: PacientesService,\r\n    private turnosSocketService : TurnoSocketService,\r\n    private pacientesCompartidosService : PacientesCompartidosService,\r\n    private router: Router,\r\n    private ref: ChangeDetectorRef\r\n  ) {\r\n    this.url = route.snapshot.params['doctor'];\r\n    this.idDoctor = route.snapshot.params['idDoctor'];\r\n    let yo = this;\r\n\r\n    this.iniciarServicio();\r\n    ////console.log(\"ENTRE X VECES: \");\r\n\r\n    // Eventos que se pueden capturar:\r\n    // NavigationStart\r\n    // NavigationEnd\r\n    // NavigationCancel\r\n    // NavigationError\r\n    // RoutesRecognized\r\n\r\n    router.events\r\n    //.filter(event => event instanceof NavigationStart)\r\n    .forEach((event) => {\r\n\r\n      while(!yo.iniciado){\r\n        ////console.log('Adentro');\r\n        setTimeout(function(){}, 5000);\r\n      }\r\n\r\n      // ////console.log(\"En router events\");\r\n      ////console.log(event);\r\n\r\n      if(event instanceof NavigationEnd){\r\n        let tempUrl = event.url.split('/',4)[1];\r\n        if (tempUrl == 'turnos'){\r\n          let idDoctor = event.url.split('/',4)[3];\r\n          ////console.log(matricula);\r\n\r\n          if(yo.turnosSocketService ){\r\n            if(yo.cambio ){\r\n              yo.metodoLimpieza(idDoctor);\r\n              yo.loadCalendar(idDoctor);\r\n            }\r\n            else{\r\n              yo.loadCalendar(idDoctor);\r\n            }\r\n\r\n          }\r\n          // if(yo.turnosSocketService ){\r\n          //\r\n          //         yo.metodoLimpieza(matricula);\r\n          //         yo.loadCalendar(matricula);\r\n          //\r\n          //\r\n          // }\r\n\r\n          yo.cambio = true;\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  observarPacientes(){\r\n    /*\r\n      Subscribimos a los pacientes, para que tengan una correspondencia\r\n      con los pacientes del navigator\r\n    */\r\n    if(this.pacientesCompartidosService.pacientes$){\r\n      this.pacientesSubscription = this.pacientesCompartidosService.pacientes$.subscribe((pacientes) => {\r\n\r\n        this.pacientes = pacientes;\r\n        // this.ref.markForCheck();\r\n      }, (err) => {\r\n        console.log('Error en observarPacientes de tablaPacientes');\r\n        console.error(err);\r\n      });\r\n\r\n      // Obtenemos los pacientes compartidos\r\n      this.pacientesCompartidosService.getPacientes();\r\n    }\r\n  }\r\n\r\n  iniciarServicio(){\r\n    ////console.log('*******************************************');\r\n    ////console.log('Entre a INICIAR SERVICIO de TURNO COMPONENT');\r\n    this.iniciado = this.turnosSocketService.iniciar(this.idDoctor);\r\n  }\r\n\r\n  loadCalendar(idDoctor: string){\r\n\r\n    this.setDoctorSeleccionado(idDoctor);\r\n\r\n    //VARIABLE PARA EL LOADING\r\n    this.cargandoTurnos = true;\r\n\r\n    var yo = this;\r\n    $('#calendar')\r\n    .fullCalendar({\r\n      header: {\r\n        locale: 'es',\r\n        left: 'prev,next today',\r\n        center: 'title',\r\n        right: 'month,agendaWeek,agendaDay,listWeek'\r\n      },\r\n      // timezone:'UTC',\r\n      defaultView:'agendaWeek',\r\n      height: 'auto',\r\n      //weekends: false, //COMENTADO SOLAMENTE COMO PRUEBA. PONER DE NUEVO PARA DEPLOY!\r\n      allDaySlot:false,\r\n      eventOverlap: false, //Previene que se sobrepongan 2 eventos!!!\r\n      slotDuration:'00:15:00',//deberia ser dinamico, dependiendo del medico (doctor.turno) al menos para la vista de clientes\r\n      minTime:'08:00:00',\r\n      maxTime:'24:00:00',\r\n      // businessHours: [\r\n      //\r\n      //   {\r\n      //    dow: [0, 1, 2, 3, 4, 5, 6], // Maybe not 0,6? Sunday,Saturday\r\n      //    start: '08:00',\r\n      //    end: '11:00'\r\n      //  },\r\n      //  {\r\n      //     dow: [1, 2], // Maybe not 0,6? Sunday,Saturday\r\n      //     start: '11:30',\r\n      //     end: '12:00'\r\n      //   }, {\r\n      //    dow: [0, 1, 2, 3, 4, 5, 6], // Maybe not 0,6? Sunday,Saturday\r\n      //    start: '15:00',\r\n      //    end: '18:00'\r\n      //  }],\r\n      //defaultDate: new Date(), // Esto esta de mas. Si no especificamos la fecha, por defecto es la acutal.\r\n      navLinks: true, // can click day/week names to navigate views\r\n      editable: true, //falso para la vista de clientes\r\n      eventLimit: true, // allow \"more\" link when too many events\r\n      events: this.turnos,\r\n      dayClick: function(date, jsEvent, view) { //date es un moment\r\n        ////console.log('Clicked on: ' + date.format());\r\n        //PRUEBA DE CAMBIO DE VISUAL:\r\n        if (view.name == \"month\") {\r\n          // Si la vista acutal es la del mes...\r\n          $('#calendar').fullCalendar('changeView', 'agendaDay'/* aca podemos cambiar a lo que queramos! ej:  'basicDay' */);\r\n          $('#calendar').fullCalendar('gotoDate',date);\r\n        }\r\n\r\n\r\n        // CAMBIARRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\r\n        let duracionTurno = parseInt($('#calendar').fullCalendar('option','slotDuration').split(':')[1]); //CAMBIARRRRRRRR\r\n        ////console.log($('#calendar').fullCalendar('option','slotDuration').split(':')[2]);\r\n        ////console.log(\"duracion\");\r\n        ////console.log(duracionTurno);\r\n        // CAMBIARRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\r\n\r\n\r\n        //*************************************************\r\n\r\n        //Windows: descomentar la linea de abajo\r\n        var temp = moment(date).utc(); //LO QUE ESTOY HACIENDO ACA ES HACER TURNOS DE 15 MINUTOS! ESE 15 DEBE SER POR MEDICOOOOOOOO\r\n        //*************************************************\r\n\r\n        // console.log('temp');\r\n        // console.log(temp);\r\n        /*\r\n        let temp2 = temp.add(duracionTurno, 'm');\r\n\r\n        let arregloDeHoras = $('#calendar').fullCalendar('option', 'businessHours');\r\n        //FIN DE LA PRUEBA.\r\n        let horaClick = date.hour() + ':' + date.minutes();\r\n        ////console.log(date);\r\n        ////console.log(date.day());\r\n        let horaClickFinal = temp2.hour() + ':' + temp2.minutes();\r\n        ////console.log(\"HORA FINALLLLLLLLLLLLL\");\r\n        ////console.log(horaClickFinal);\r\n        //comprobamos la validez de la hora ingresada!\r\n        if(yo.comprobarValidezHora(arregloDeHoras,horaClick,horaClickFinal,date.day())){\r\n\r\n            ////console.log(\"ENTRE CORRECTAMENTE AL RANGO HORARIO!\");\r\n            yo.asignarPaciente(temp);\r\n        }\r\n        */\r\n\r\n        yo.asignarPaciente(temp);\r\n\r\n\r\n\r\n\r\n        //creo el obj\r\n        //el \"end\" deberia ser dinamico, dependiendo del medico? (doctor.turno)\r\n\r\n        //\tvar newTurno = {\"title\":paciente,\"allDay\":false,\"start\":date.format(),\"end\":date.add(30, 'm').format(),\"color\":color};\r\n\r\n\r\n        //lo pusheo al calendar\r\n\r\n        //\t$('#calendar').fullCalendar('renderEvent', newTurno, true)\r\n\r\n        //lo guardo en la db\r\n        // ???\r\n\r\n      },\r\n      eventDrop: function(event, delta, revertFunc) {\r\n\r\n\r\n        var startUtc = moment(event.start).utc();\r\n        var endUtc = moment(event.end).utc();\r\n\r\n        swal({\r\n          title: '¿Estas seguro que queres cambiar el turno?',\r\n          //text: 'You will not be able to recover this imaginary file!',\r\n          type: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Si, modificar!',\r\n          cancelButtonText: 'Cancelar'\r\n        }).then(function() {\r\n          // yo.turnosSocketService.actualizarTurno(event);\r\n          yo.turnosSocketService.actualizarTurno2(startUtc, endUtc, event._id);\r\n        }, function(dismiss) {\r\n          // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n          if (dismiss === 'cancel') {\r\n            revertFunc();\r\n          }\r\n        });\r\n      },\r\n      eventResize: function(event, delta, revertFunc) {\r\n\r\n        var startUtc = moment(event.start).utc();\r\n        var endUtc = moment(event.end).utc();\r\n\r\n        swal({\r\n          title: '¿Estas seguro que queres agrandar el turno?',\r\n          //text: 'You will not be able to recover this imaginary file!',\r\n          type: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Si, agrandar!',\r\n          cancelButtonText: 'Cancelar'\r\n        }).then(function() {\r\n          // yo.turnosSocketService.actualizarTurno(event);\r\n            yo.turnosSocketService.actualizarTurno2(startUtc, endUtc, event._id);\r\n        }, function(dismiss) {\r\n          // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n          if (dismiss === 'cancel') {\r\n            revertFunc();\r\n          }\r\n        });\r\n\r\n\r\n        //actualizar el turno en la db (tenemos el event.id)\r\n        //???\r\n      },\r\n      eventClick: function(calEvent,delta,view){\r\n        //ESTO CAMBIARLO! Porque no esta bueno que cuando haga click muera el evento!\r\n        //La idea seria que cuando haga click le tire un popup o algo asi, para ver los detalles\r\n        // del turno y poder eliminarlo, editarlo, etc.\r\n\r\n        yo.turnoSeleccionado = calEvent;\r\n        yo.turnoSeleccionado = yo.obtenerTurno(calEvent._id);\r\n        $('#formVerTurno').modal('show');\r\n\r\n        // swal({\r\n        //   title: '¿Estas seguro que queres eliminar el turno?',\r\n        //   //text: 'You will not be able to recover this imaginary file!',\r\n        //   type: 'warning',\r\n        //   showCancelButton: true,\r\n        //   confirmButtonColor: '#3085d6',\r\n        //   cancelButtonColor: '#d33',\r\n        //   confirmButtonText: 'Si, eliminar!',\r\n        //   cancelButtonText: 'Cancelar'\r\n        // }).then(function() {\r\n        //   $('#calendar').fullCalendar('removeEvents', function (event) {\r\n        //     return event == calEvent; //Esto remueve solamente el evento \"clickeado\" que entra por parametro del evento del calendario 'calEvent'\r\n        //   });\r\n        //\r\n        //   yo.turnosSocketService.eliminarTurno(calEvent);\r\n        // }).catch(swal.noop);\r\n\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  //TESTEAR ESTO! VERIFICAR SI ESTA BIEN LA LOGICA!\r\n  comprobarValidezHora(arregloHorasValidas,horaInicialEvento, horaFinalEvento, numDia): Boolean{\r\n    ////console.log(\"comprobando validez\");\r\n    ////console.log(arregloHorasValidas);\r\n\r\n\r\n\r\n    let validez = false;\r\n    let horaInicialE = parseInt(horaInicialEvento.split(':')[0]);\r\n    let minInicialE = parseInt(horaInicialEvento.split(':')[1]);\r\n    let horaFinalE = parseInt(horaFinalEvento.split(':')[0]);\r\n    let minFinalE = parseInt(horaFinalEvento.split(':')[1]);\r\n\r\n\r\n    for (let i = 0; i < arregloHorasValidas.length; i++) {\r\n\r\n      let temp = arregloHorasValidas[i].start;\r\n      if (arregloHorasValidas[i].start[0]==='0'){\r\n        temp = arregloHorasValidas[i].start.substring(1,arregloHorasValidas[i].start.length);\r\n        // ////console.log(temp);\r\n        // ////console.log(horaInicialEvento>=temp);\r\n      }\r\n      let temp2 = arregloHorasValidas[i].end;\r\n      if (arregloHorasValidas[i].end[0]==='0'){\r\n        temp2 = arregloHorasValidas[i].end.substring(1,arregloHorasValidas[i].end.length);\r\n        ////console.log(horaFinalEvento <= temp2);\r\n      }\r\n      for (let j = 0; j < arregloHorasValidas[i].dow.length; j++) {\r\n        // ////console.log(\"----------\");\r\n        // ////console.log(arregloHorasValidas[i].dow[j]);\r\n          if(arregloHorasValidas[i].dow[j] == numDia){\r\n            // ////console.log(\"ENTRE Nº1\");\r\n            // ////console.log(temp);\r\n            // ////console.log(horaInicialEvento);\r\n            // ////console.log(temp <= horaInicialEvento);\r\n            // ////console.log(temp2);\r\n            // ////console.log(horaFinalEvento);\r\n            // ////console.log(\"----------\");\r\n\r\n            let horaValidaInicio = parseInt(temp.split(':')[0]);\r\n            let horaValidaFin = parseInt(temp2.split(':')[0]);\r\n            let minValidaInicio = parseInt(temp.split(':')[1]);\r\n            let minValidaFin = parseInt(temp2.split(':')[1]);\r\n\r\n\r\n            if((horaInicialE > horaValidaInicio) && ((horaFinalE < horaValidaFin) || (horaFinalE == horaValidaFin && minFinalE <= minValidaFin))){\r\n              validez = true;\r\n\r\n              // ////console.log(\"IF\");\r\n              // ////console.log(minFinalE);\r\n              // ////console.log(minValidaFin);\r\n              // ////console.log(minFinalE <= minValidaFin);\r\n            }\r\n            else{\r\n              // ////console.log(\"ELSE\");\r\n              // ////console.log(horaInicialE == horaValidaInicio);\r\n              // ////console.log(\"-\");\r\n              // ////console.log(minInicialE >= minValidaInicio);\r\n              // ////console.log(\"-\");\r\n              // ////console.log(horaFinalE < horaValidaFin);\r\n              // ////console.log(\"-\");\r\n              // ////console.log(horaFinalE == horaValidaFin);\r\n              // ////console.log(\"-\");\r\n              // ////console.log(minFinalE <= minValidaFin);\r\n              // ////console.log(\"-\");\r\n              if((horaInicialE == horaValidaInicio) && (minInicialE >= minValidaInicio)){\r\n                if((horaFinalE < horaValidaFin) || (horaFinalE == horaValidaFin && minFinalE <= minValidaFin)){\r\n                  validez = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n      }\r\n    }\r\n    return true;\r\n    // return validez;\r\n  }\r\n\r\n  asignarPaciente(date){\r\n    this.fechaNuevoTurno = date;\r\n\r\n    $('#formCrearTurno').modal('show');\r\n  }\r\n\r\n  onAsignacionPaciente(asignacion){\r\n    // ////console.log('On Asignacion de Paciente');\r\n    // ////console.log(asignacion);\r\n\r\n    if(asignacion != null){\r\n\r\n      // console.log(\"Fecha\");\r\n      // console.log(this.fechaNuevoTurno);\r\n      // console.log(asignacion);\r\n      let yo = this;\r\n      let paciente = \"\"+ asignacion.nombre + \" \" + asignacion.apellido;\r\n      let fecha = this.fechaNuevoTurno.format(\"DD-MM-YYYY HH:mm\")\r\n      swal({\r\n        title: 'Confirmacion de creacion de turno',\r\n        text: \"¿Estas seguro de crear un turno para el dia \"+ fecha + \" para el paciente \" + paciente + \" ?\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Si, Crear!',\r\n        cancelButtonText: 'No, Cancelar!',\r\n        confirmButtonClass: 'btn btn-success',\r\n        cancelButtonClass: 'btn btn-danger',\r\n        // buttonsStyling: false\r\n      }).then(function () {\r\n        swal(\r\n          'Turno creado!',\r\n          'El turno fue creado correctamente',\r\n          'success'\r\n        ),\r\n        yo.crearTurno(yo.fechaNuevoTurno, asignacion);\r\n      }, function (dismiss) {\r\n        // dismiss can be 'cancel', 'overlay',\r\n        // 'close', and 'timer'\r\n        if (dismiss === 'cancel') {\r\n          swal(\r\n            'Cancelado',\r\n            'El turno fue descartado',\r\n            'error'\r\n          )\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  crearTurno(date, pacienteAsignado){\r\n\r\n    let paciente = pacienteAsignado;\r\n\r\n    this.turnosSocketService.crearTurno(date.format(), paciente);\r\n\r\n    //Restablecemos las variables\r\n    this.fechaNuevoTurno = null;\r\n  }\r\n\r\n  metodoLimpieza(idDoctor){\r\n\r\n    //   console.log('*****///****');\r\n    //  console.log('Entre a metodo limpieza');\r\n    //Limpiamos el calendario\r\n    // calendario.fullCalendar( 'destroy' );\r\n    let yo = this;\r\n\r\n    this.setDoctorSeleccionado(idDoctor);\r\n\r\n\r\n    this.pacientesService.getPacientesActivos().then(pacientes => {\r\n      // console.log('Pacientes');\r\n      yo.pacientes = pacientes;\r\n\r\n      let calendario = $('#calendar');\r\n      calendario.fullCalendar( 'removeEvents' );\r\n\r\n      // console.log('Voy a limpiar el service');\r\n      //Limpiamos el service\r\n      if(this.turnosSocketService){\r\n\r\n        this.turnosSocketService.cambiarMedico(idDoctor);\r\n      }\r\n    }).catch(err => console.error(err));\r\n\r\n\r\n  }\r\n\r\n  verificarUrl(){\r\n\r\n    // ////console.log(this.url);\r\n    // console.log (this.doctores.find(doctor => doctor.url == \"this.url\"));\r\n    // //^^ no lo encuentra\r\n    // ////console.log(this.doctores);\r\n\r\n  }\r\n\r\n\r\n  obtenerTurno(id){\r\n    let turnoEncontrado = null;\r\n\r\n    for (let i = 0; i < this.turnos.length; i++) {\r\n\r\n        if(id === this.turnos[i]._id){\r\n          turnoEncontrado = this.turnos[i];\r\n          // console.log(\"Turno encontrado!\");\r\n        }\r\n\r\n    }\r\n    return turnoEncontrado;\r\n  }\r\n\r\n  getAllDoctores(): void {\r\n    this.doctoresService\r\n    .getDoctores()\r\n    .then(docs => {\r\n      this.doctores = docs;\r\n      this.verificarUrl();\r\n      this.getAllTurnos(this.url, this.idDoctor)\r\n    });\r\n  }\r\n  getAllTurnos(url, idDoctor): void {\r\n    ////console.log(url)//parametro para la consulta\r\n    this.loadCalendar(idDoctor)\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.cargandoTurnos = true;\r\n    this.subscription = this.turnosSocketService.turnos$.subscribe((turnos: Turno[]) => {\r\n      this.cargandoTurnos = false;\r\n      this.turnos = turnos;\r\n      this.ref.markForCheck();\r\n    }, (err) => {\r\n      console.error(err);\r\n    });\r\n    //this.turnosSocketService.find();\r\n\r\n    let yo = this;\r\n\r\n    // this.observarPacientes();\r\n    this.getAllDoctores();\r\n\r\n    this.pacientesService.getPacientesActivos().then(pacientes => {\r\n\r\n      yo.pacientes = pacientes;\r\n\r\n    }).catch(err =>  console.log(err))\r\n\r\n  }\r\n\r\n  setDoctorSeleccionado(idDoctor) {\r\n    //Seteo el doctor seleccionado\r\n    if(this.doctores != undefined){\r\n      var thisLocal = this;\r\n      this.doctores.forEach(function(elem,index){\r\n        if(elem._id == idDoctor){\r\n           thisLocal.doctorSeleccionado = elem;\r\n          //  console.log(thisLocal.doctorSeleccionado);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // ////console.log(\"ME DESTRUIIIIIII ####@#|@##~#@\");\r\n    // //this.subscription.unsubscribe();\r\n    // ////console.log('####*****////########//////###');\r\n    ////console.log('OBSERVERS');\r\n    var observers = (<any>(this.router.events)).observers;\r\n    ////console.log(observers);\r\n    ////console.log(observers[observers.length-1].unsubscribe());\r\n    ////console.log(observers);\r\n    ////console.log('####*****////########//////###');\r\n    ////console.log();\r\n\r\n    ////console.log(this.router);\r\n    this.router.dispose();\r\n    this.turnosSocketService = null;\r\n    this.pacientesService = null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { Turno } from './turno.tipo'\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class TurnosService {\r\n\r\n\tprivate headers = new Headers({'Content-Type': 'application/json'});\r\n    private turnosURL = environment.apiUrl +'/turnos';  // URL to web api\r\n\r\n\tconstructor(private http: Http) {\r\n\r\n\t}\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/turnos.service.ts","module.exports = \"<!-- Modal Formulario Editar Obra -->\\n<div class=\\\"modal fade\\\" id=\\\"formVerTurno\\\" #formVerTurno tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" #closeformVerTurno >&times;</button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Turno: {{diaNuevoTurno}} a las {{horaNuevoTurno}}hs</h3>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\" *ngIf='modeloObra != null'>\\n        <!-- <div class=\\\"modal-body\\\" *ngIf = 'horaNuevoTurno != null && diaNuevoTurno != null && Obras != null' > -->\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Paciente:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.nombre}}  {{pacienteDelTurno.apellido}}</h5>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Obra Social:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.obra.nombre}}</h5>\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label>DNI:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.dni}}</h5>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Email:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.email}}</h5>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Edad:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.fechaNacimiento|age}}</h5>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Ocupacion:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.ocupacion}}</h5>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Observaciones:</label>\\n          <div class=\\\"input-group\\\">\\n            <h5 *ngIf=\\\"turno != null\\\">{{pacienteDelTurno.observaciones}}</h5>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n\\n        <button class=\\\"btn btn-info\\\" (click)='editarPaciente()'>\\n          Editar paciente\\n        </button>\\n\\n        <button class=\\\"btn btn-danger\\\" (click)='cancelarTurno()'>\\n          Cancelar Turno\\n        </button>\\n\\n        <button class=\\\"btn btn-primary\\\"\\n        (click)='cancelar();'>\\n        OK\\n      </button>\\n\\n    </div>\\n  </div>\\n  <!-- /.modal-content -->\\n</div>\\n<!-- /.modal-dialog -->\\n\\n</div>\\n<!-- /.modal -->\\n\\n\\n\\n\\n<editar-paciente (pacienteEditado)=\\\"onEditarPaciente($event)\\\" *ngIf='pacienteDelTurno' [paciente]=pacienteDelTurno></editar-paciente>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/verTurno/verTurno.html\n// module id = ../../../../../src/app/turnos/verTurno/verTurno.html\n// module chunks = main","import { Component, OnInit, Input, Output,EventEmitter,OnChanges, ElementRef, ViewChild } from '@angular/core';\n\n\nimport { Obra } from '../../obras/obra.tipo';\nimport { ObrasService } from '../../obras/obras.service';\nimport { Turno } from '../turno.tipo';\nimport { EditarPacienteComponent } from '../../pacientes/editarPaciente/editarPaciente';\nimport { AgePipe } from '../../pacientes/edad.pipe';\nimport { TurnoSocketService } from '../turnos-socket.service';\n\nimport {default as swal} from 'sweetalert2';\nimport * as moment from 'moment';\ndeclare var $: any;\n\n@Component({\n  selector: 'ver-turno',\n  // providers:[TurnoSocketService],\n  templateUrl: './verTurno.html'\n})\nexport class VerTurnoComponent implements OnInit, OnChanges{\n\n  // @Input() fechaNuevoTurno: any;\n  @Input() obra: any;\n  @Input() turno: any;\n  @Output() obraEditado = new EventEmitter();\n\n  @ViewChild('closeformVerTurno') closeformVerTurno: ElementRef;\n\n  // private obras: Obra[];\n  // private obraSelected: Obra = null;\n\n  public modeloObra = null;\n\n\n  public horaNuevoTurno: any;\n  public diaNuevoTurno: any;\n\n  public pacienteDelTurno: any = null;\n\n\n  constructor(\n    private obrasService: ObrasService,private turnosSocketService : TurnoSocketService\n  ){\n\n  }\n\n  /*\n  */\n  ngOnInit() {\n    // this.obrasService.getObras().then(\n    //   obras =>{\n    //     console.log('Tengo las obras!!');\n    //     this.obras = obras;\n    //     this.modeloPaciente = Object.assign({}, this.paciente); //clonamos el paciente\n    //\n    //     console.log(this.paciente);\n    //   }\n    // ).catch(error=>{console.log(error)})\n    // console.log(\"Entre al modal\");\n  }\n\n  /*\n  */\n  ngOnChanges(changes) {\n    // changes.prop contains the old and the new value...\n    // console.log(\"Entre al modal22222\");\n    // console.log(this.turno);\n\n    //Asignamos las fechas para el modal\n    if(this.turno != null){\n      this.pacienteDelTurno = this.turno.paciente;\n      // let fechaNuevoTurno = this.turno.horaInicial;\n      let fechaNuevoTurno = moment(this.turno.horaInicial).utc();\n      // console.log(fechaNuevoTurno);\n      this.horaNuevoTurno = fechaNuevoTurno.format('HH:mm');\n      this.diaNuevoTurno = fechaNuevoTurno.format('DD [de] MMMM');\n    }\n\n\n    this.modeloObra = Object.assign({}, this.obra); //clonamos el paciente\n  }\n\n\n  public editarPaciente(){\n    $('#formEditarPaciente').modal('show');\n  }\n\n  public onEditarPaciente(pacienteEditado){\n    if(pacienteEditado != null && pacienteEditado != undefined){\n      this.pacienteDelTurno = pacienteEditado;\n    }\n  }\n  /*\n\n  */\n  public editarObra(){\n    ////console.log('Entre a agregar Paciente');\n    //  let obraId = this.obraSelected._id;\n\n    // console.log('this.modeloObra');\n    // console.log(this.modeloObra);\n\n    this.obrasService.actualizarObra(this.modeloObra._id, this.modeloObra)\n    .then(obraEdit => {\n      this.obraEditado.next(obraEdit);\n\n\n      //Cerramos el modal y limpiamos variables\n      //this.modeloPaciente = null;\n      // this.obraSelected = null;\n      this.closeformVerTurno.nativeElement.click();\n\n    }).catch(err => {console.log(err);})\n  }\n\n\n  public cancelarTurno(){\n    $('#formVerTurno').modal('hide');\n    let yo = this;\n    swal({\n      title: '¿Estas seguro que queres eliminar el turno?',\n      //text: 'You will not be able to recover this imaginary file!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar!',\n      cancelButtonText: 'Cancelar'\n    }).then(function() {\n      // $('#calendar').fullCalendar('removeEvents', function (event) {\n      //   return event == calEvent; //Esto remueve solamente el evento \"clickeado\" que entra por parametro del evento del calendario 'calEvent'\n      // });\n      console.log(\"Entre al THEN de la funcion de SWAL y mi tuno id es el de: \", yo.turno._id);\n      yo.turnosSocketService.eliminarTurno(yo.turno._id);\n    }, function(dismiss){\n      //Aca entra si se arrepiente de eliminar el turno!!!!\n      $('#formVerTurno').modal('show');\n    }).catch(swal.noop);\n  }\n\n\n  /*\n\n  */\n  public cancelar(){\n    //Limpiamos variables\n    //this.value = {};\n\n    //Cerramos el modal\n    // this.obraSelected = null;\n    this.closeformVerTurno.nativeElement.click();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/turnos/verTurno/verTurno.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'footer',\r\n  template:`\r\n\t    <section class=\"footer hidden-sm hidden-xs\" style=\"z-index:999;\">\r\n            <div class=\"pull-right\">\r\n                Centro de la Visión - <strong>Neuquén</strong>.\r\n            </div>\r\n            <div>\r\n                <strong>Copyright</strong> Codetry &copy; 2017\r\n            </div>\r\n        </section>\r\n  `\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/ui/footer.component.ts","module.exports = \"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\">\\r\\n  <div class=\\\"sidebar-collapse\\\">\\r\\n    <ul class=\\\"nav metismenu\\\" id=\\\"side-menu\\\">\\r\\n      <li class=\\\"nav-header\\\" style=\\\"padding: 10px 25px\\\">\\r\\n\\r\\n        <div class=\\\"profile-element\\\">\\r\\n\\r\\n          <a >\\r\\n            <span class=\\\"block m-t-xs\\\"> <strong class=\\\"font-bold\\\">{{profile?.nombre}}</strong> </span>\\r\\n            <span class=\\\"text-muted text-xs block\\\">{{profile?.cargo}}</span>\\r\\n          </a>\\r\\n          <img alt=\\\"image\\\" class=\\\"pull-right\\\" src=\\\"assets/images/logo.png\\\" style=\\\"    margin-top: -35px; margin-right: -20px;\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"logo-element\\\">\\r\\n          <img alt=\\\"image\\\" class=\\\"img-circle\\\" src=\\\"assets/images/logo.png\\\" style=\\\"margin-left: -45px;\\\">\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <!--\\r\\n      <li [ngClass]=\\\"{active: activeRoute('dashboards')}\\\">\\r\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-th-large\\\"></i> <span class=\\\"nav-label\\\">Dashboard examples</span> <span class=\\\"fa arrow\\\"></span> </a>\\r\\n        <ul class=\\\"nav nav-second-level collapse\\\" [ngClass]=\\\"{in: activeRoute('dashboards')}\\\">\\r\\n          <li [ngClass]=\\\"{active: activeRoute('dashboard1')}\\\"><a [routerLink]=\\\"['/dashboards/dashboard1']\\\">Dashboard v.1</a></li>\\r\\n          <li [ngClass]=\\\"{active: activeRoute('dashboard2')}\\\"><a [routerLink]=\\\"['/dashboards/dashboard2']\\\">Dashboard v.2</a></li>\\r\\n          <li [ngClass]=\\\"{active: activeRoute('dashboard3')}\\\"><a [routerLink]=\\\"['/dashboards/dashboard3']\\\">Dashboard v.3</a></li>\\r\\n          <li [ngClass]=\\\"{active: activeRoute('dashboard4')}\\\"><a [routerLink]=\\\"['/dashboards/dashboard4']\\\">Dashboard v.4</a></li>\\r\\n          <li [ngClass]=\\\"{active: activeRoute('dashboard5')}\\\"><a [routerLink]=\\\"['/dashboards/dashboard5']\\\">Dashboard v.5</a></li>\\r\\n        </ul>\\r\\n      </li>\\r\\n      -->\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('starter')}\\\" *ngIf=\\\"!esMedico()\\\">\\r\\n          <a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-th-large\\\"></i> <span class=\\\"nav-label\\\">Escritorio</span></a>\\r\\n        </li>\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('turnos')}\\\" *ngIf='mostrarTurnosMedicos()'>\\r\\n          <a><i class=\\\"fa fa-user-md\\\"></i> <span class=\\\"nav-label\\\">Turnos</span> <span class=\\\"fa arrow\\\"></span> </a>\\r\\n          <ul class=\\\"nav nav-second-level collapse\\\" [ngClass]=\\\"{in: activeRoute('turnos')}\\\">\\r\\n            <!-- *ngFor=\\\"let doctor of doctores\\\" -->\\r\\n            <li *ngFor='let med of medicos'><a [routerLink]=\\\"['/turnos/' + med.nombre +'/'+med._id]\\\">{{med.nombre}} {{med.apellido}}</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('medico')}\\\" *ngIf=\\\"esMedico()\\\">\\r\\n          <a [routerLink]=\\\"['/medico']\\\"><i class=\\\"fa fa-list-alt\\\"></i> <span class=\\\"nav-label\\\">Turnos del Dia</span></a>\\r\\n        </li>\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('turnos')}\\\" *ngIf=\\\"esMedico()\\\">\\r\\n          <a [routerLink]=\\\"['/turnos/' + medico.nombre +'/'+medico._idMedico]\\\"><i class=\\\"fa fa-user-md\\\"></i> <span class=\\\"nav-label\\\">Calendario</span></a>\\r\\n        </li>\\r\\n\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('pacientes')}\\\">\\r\\n          <a [routerLink]=\\\"['/pacientes']\\\"><i class=\\\"fa fa-user\\\"></i> <span class=\\\"nav-label\\\">Pacientes</span></a>\\r\\n        </li>\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('obras')}\\\" *ngIf=\\\"!esMedico()\\\">\\r\\n          <a [routerLink]=\\\"['/obras']\\\"><i class=\\\"fa fa-university\\\"></i> <span class=\\\"nav-label\\\">Obras Sociales</span></a>\\r\\n        </li>\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('configuracion')}\\\" *ngIf=\\\"!esMedico()\\\">\\r\\n          <a [routerLink]=\\\"['/configuracion']\\\"><i class=\\\"fa fa-cog\\\"></i> <span class=\\\"nav-label\\\">Configuración</span></a>\\r\\n        </li>\\r\\n\\r\\n        <li [ngClass]=\\\"{active: activeRoute('configuracion')}\\\" *ngIf=\\\"esMedico()\\\">\\r\\n          <a [routerLink]=\\\"['/configuracion/' + medico._idMedico]\\\"><i class=\\\"fa fa-cog\\\"></i> <span class=\\\"nav-label\\\">Configuración</span></a>\\r\\n        </li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </ul>\\r\\n\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/ui/navigation/navigation.component.html\n// module id = ../../../../../src/app/ui/navigation/navigation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationService } from './navigation.service';\r\n\r\nimport { PacientesService } from '../../pacientes/pacientes.service';\r\nimport { ObrasService } from '../../obras/obras.service';\r\nimport { MedicosService } from '../../medico/medicos.service';\r\nimport { Medico } from '../../medico/medico.tipo';\r\n\r\nimport 'jquery-slimscroll';\r\n\r\nimport { AuthService } from '../../authentication/auth.service';\r\n\r\n\r\nimport { MedicosCompartidosService } from '../../routerService/medicos.sistema';\r\nimport { PacientesCompartidosService } from '../../routerService/pacientes.sistema';\r\nimport { ObrasCompartidasService } from '../../routerService/obras.sistema';\r\n\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n\r\ndeclare var jQuery:any;\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  templateUrl: 'navigation.component.html'\r\n})\r\n\r\nexport class NavigationComponent {\r\n\r\n  profile: any;\r\n\r\n  private medicos: Medico[] = [];\r\n  private medico: Medico;\r\n\r\n  private medicosSubscription: Subscription;\r\n  private obrasSubscription: Subscription;\r\n  private pacientesSubscription: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private navigationService: NavigationService,\r\n    private medicosService: MedicosService,\r\n    private obrasService: ObrasService,\r\n    private pacientesService: PacientesService,\r\n    private authService: AuthService,\r\n    private medicosCompartidos: MedicosCompartidosService,\r\n    private obrasCompartidas: ObrasCompartidasService,\r\n    private pacientesCompartidos: PacientesCompartidosService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    jQuery('#side-menu').metisMenu();\r\n\r\n    if (jQuery(\"body\").hasClass('fixed-sidebar')) {\r\n      jQuery('.sidebar-collapse').slimscroll({\r\n        height: '100%'\r\n      })\r\n    }\r\n\r\n    this.obtenerSubscripcionMedicos();\r\n    this.obtenerSubscripcionObras();\r\n    this.obtenerSubscripcionPacientes();\r\n\r\n  }\r\n\r\n  obtenerSubscripcionMedicos(){\r\n    this.medicosService.getDoctores().then((docs)=>{\r\n      this.medicosSubscription = this.medicosCompartidos.medicos$.subscribe((medicos) => {\r\n\r\n        // console.log('ENTRE A LA SUBSCRIPCION de medicos');\r\n        this.medicos = medicos;\r\n        // this.ref.markForCheck();\r\n      }, (err) => {\r\n        console.error(err);\r\n      });\r\n      this.medicosCompartidos.iniciar(docs);\r\n    });\r\n  }\r\n\r\n  obtenerSubscripcionPacientes(){\r\n    this.pacientesService.getPacientesActivos().then((pacientes)=>{\r\n      this.pacientesSubscription = this.pacientesCompartidos.pacientes$.subscribe((pacientes) => {\r\n        // console.log(pacientes);\r\n        // console.log('ENTRE A LA SUBSCRIPCION de pacientes');\r\n        // this.ref.markForCheck();\r\n      }, (err) => {\r\n        console.error(err);\r\n      });\r\n      this.pacientesCompartidos.iniciarPacientes(pacientes);\r\n    });\r\n  }\r\n\r\n  obtenerSubscripcionObras(){\r\n    this.obrasService.getObras().then((obras)=>{\r\n      this.obrasSubscription = this.obrasCompartidas.obras$.subscribe((obras) => {\r\n        // console.log(obras);\r\n        // console.log('ENTRE A LA SUBSCRIPCION de obras');\r\n        // this.ref.markForCheck();\r\n      }, (err) => {\r\n        console.error(err);\r\n      });\r\n\r\n      let obrasSinParticular = this.removerObraParticularVista(obras);\r\n\r\n      this.obrasCompartidas.iniciarObras(obrasSinParticular);\r\n    });\r\n  }\r\n\r\n  /*\r\n    Quitamos la obra 'Particular' de la lista de obras elegibles por los administrativos / medicos.\r\n  */\r\n  private removerObraParticularVista(obras){\r\n\r\n    let obrasSinParticular = [];\r\n    let indexParticular = -1;\r\n\r\n    obras.forEach(function(elem, index){\r\n      if(elem.nombre == 'Particular'){\r\n        console.log('Lo encontre!!!');\r\n        indexParticular = index;\r\n      }\r\n    });\r\n\r\n    obrasSinParticular = obras;\r\n\r\n    // Removemos la obra 'Particular'\r\n    if(indexParticular > -1){\r\n      obrasSinParticular.splice(indexParticular, 1);\r\n    }\r\n\r\n    return obrasSinParticular;\r\n\r\n  }\r\n\r\n  activeRoute(routename: string): boolean{\r\n    return this.router.url.indexOf(routename) > -1;\r\n  }\r\n\r\n  logOut(){\r\n    this.authService.logOut();\r\n  }\r\n\r\n\r\n  getUsuario(){\r\n\r\n    // console.log(localStorage);\r\n    // var p = localStorage.getItem('user');\r\n    // console.log(p);\r\n    var usuario: any = JSON.parse(localStorage.getItem('user'));\r\n    // console.log('usuario');\r\n    // console.log(usuario);\r\n    ////console.log('ENTRE A GET USUARIO');\r\n    // ////console.log(usuario);\r\n    if(usuario!=undefined && usuario != null){\r\n\r\n      this.profile = {};\r\n      this.profile.nombre = usuario.nombre;\r\n      this.profile.cargo = usuario.clase;\r\n      this.actualizarListaMedicos();\r\n      //Aca debeiramos preguntar el cargo para ver si es medico\r\n      this.medico = usuario;\r\n    }\r\n\r\n    // this.navigationService.getUsuario()\r\n    // .subscribe(\r\n    //   data => this.profile = data,\r\n    //   error => ////console.log('Server Error')\r\n    // );\r\n  }\r\n\r\n  public actualizarListaMedicos(){\r\n    const yo = this;\r\n    this.medicosService.getDoctores().then((docs)=>{\r\n      // console.log('ENTRE ACA!!!');\r\n      // console.log(docs);\r\n      // yo.medicos = docs;\r\n    });\r\n  }\r\n\r\n  mostrarTurnosMedicos(){\r\n    //  return this.medicosCargados() && !this.esMedico();\r\n    return  !this.esMedico();\r\n  }\r\n  medicosCargados(){\r\n\r\n    return this.medicos.length > 0;\r\n  }\r\n\r\n  public esMedico(){\r\n\r\n    var usuario: any = JSON.parse(localStorage.getItem('user'));\r\n    // ////console.log(usuario);\r\n    if(usuario!=undefined && usuario != null){\r\n\r\n      //this.getUsuario();\r\n      var clase = usuario.clase;\r\n      // ////console.log(\"CLASEEEEEEEEEEE\");\r\n      // ////console.log(usuario.toString());\r\n\r\n      return clase === \"medico\";\r\n\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public ngOnInit():any {\r\n\r\n\r\n    this.getUsuario();\r\n\r\n    // setTimeout(()=>{\r\n    //   console.log('Se cumplio el timeout')\r\n    //   this.getUsuario();\r\n    // },1000)\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/ui/navigation/navigation.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class NavigationService {\r\n\r\n  constructor(private http: Http) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/ui/navigation/navigation.service.ts","import { Component } from '@angular/core';\nimport { smoothlyMenu } from '../../app.helpers';\n\nimport { AuthService } from '../../authentication/auth.service';\n\ndeclare var jQuery:any; \n\n@Component({\n  selector: 'topnavbar',\n  templateUrl: 'topnavbar.template.html'\n})\nexport class TopnavbarComponent {\n\n  toggleNavigation(): void {\n    jQuery(\"body\").toggleClass(\"mini-navbar\");\n    smoothlyMenu();\n  }\n  constructor(private authService: AuthService) { }\n\n  logout(){\n    this.authService.logOut();\n    ////console.log('logout');\n     //.authService.isLoggedIn();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/app/ui/topnavbar/topnavbar.component.ts","module.exports = \"<div class=\\\"row border-bottom\\\">\\n  <nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"minimalize-styl-2 btn btn-primary \\\" (click)=\\\"toggleNavigation()\\\"><i class=\\\"fa fa-bars\\\"></i> </a>\\n      <!--form role=\\\"search\\\" class=\\\"navbar-form-custom\\\" method=\\\"post\\\" action=\\\"#\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control\\\" name=\\\"top-search\\\" id=\\\"top-search\\\">\\n        </div>\\n      </form-->\\n    </div>\\n    <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n      <li>\\n        <a (click)=\\\"logout()\\\" href=\\\"#\\\">\\n          <i class=\\\"fa fa-sign-out\\\"></i> Cerrar Sesión\\n        </a>\\n      </li>\\n    </ul>\\n\\n  </nav>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/src/app/ui/topnavbar/topnavbar.template.html\n// module id = ../../../../../src/app/ui/topnavbar/topnavbar.template.html\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3030'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// /home/juampi/Documents/Codetry/turn-app/src/main.ts","var map = {\n\t\"./af\": \"../../../../moment/locale/af.js\",\n\t\"./af.js\": \"../../../../moment/locale/af.js\",\n\t\"./ar\": \"../../../../moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../../../moment/locale/ar.js\",\n\t\"./az\": \"../../../../moment/locale/az.js\",\n\t\"./az.js\": \"../../../../moment/locale/az.js\",\n\t\"./be\": \"../../../../moment/locale/be.js\",\n\t\"./be.js\": \"../../../../moment/locale/be.js\",\n\t\"./bg\": \"../../../../moment/locale/bg.js\",\n\t\"./bg.js\": \"../../../../moment/locale/bg.js\",\n\t\"./bn\": \"../../../../moment/locale/bn.js\",\n\t\"./bn.js\": \"../../../../moment/locale/bn.js\",\n\t\"./bo\": \"../../../../moment/locale/bo.js\",\n\t\"./bo.js\": \"../../../../moment/locale/bo.js\",\n\t\"./br\": \"../../../../moment/locale/br.js\",\n\t\"./br.js\": \"../../../../moment/locale/br.js\",\n\t\"./bs\": \"../../../../moment/locale/bs.js\",\n\t\"./bs.js\": \"../../../../moment/locale/bs.js\",\n\t\"./ca\": \"../../../../moment/locale/ca.js\",\n\t\"./ca.js\": \"../../../../moment/locale/ca.js\",\n\t\"./cs\": \"../../../../moment/locale/cs.js\",\n\t\"./cs.js\": \"../../../../moment/locale/cs.js\",\n\t\"./cv\": \"../../../../moment/locale/cv.js\",\n\t\"./cv.js\": \"../../../../moment/locale/cv.js\",\n\t\"./cy\": \"../../../../moment/locale/cy.js\",\n\t\"./cy.js\": \"../../../../moment/locale/cy.js\",\n\t\"./da\": \"../../../../moment/locale/da.js\",\n\t\"./da.js\": \"../../../../moment/locale/da.js\",\n\t\"./de\": \"../../../../moment/locale/de.js\",\n\t\"./de-at\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../../../moment/locale/de.js\",\n\t\"./dv\": \"../../../../moment/locale/dv.js\",\n\t\"./dv.js\": \"../../../../moment/locale/dv.js\",\n\t\"./el\": \"../../../../moment/locale/el.js\",\n\t\"./el.js\": \"../../../../moment/locale/el.js\",\n\t\"./en-au\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-nz\": \"../../../../moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../../../moment/locale/en-nz.js\",\n\t\"./eo\": \"../../../../moment/locale/eo.js\",\n\t\"./eo.js\": \"../../../../moment/locale/eo.js\",\n\t\"./es\": \"../../../../moment/locale/es.js\",\n\t\"./es-do\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../../../moment/locale/es-do.js\",\n\t\"./es.js\": \"../../../../moment/locale/es.js\",\n\t\"./et\": \"../../../../moment/locale/et.js\",\n\t\"./et.js\": \"../../../../moment/locale/et.js\",\n\t\"./eu\": \"../../../../moment/locale/eu.js\",\n\t\"./eu.js\": \"../../../../moment/locale/eu.js\",\n\t\"./fa\": \"../../../../moment/locale/fa.js\",\n\t\"./fa.js\": \"../../../../moment/locale/fa.js\",\n\t\"./fi\": \"../../../../moment/locale/fi.js\",\n\t\"./fi.js\": \"../../../../moment/locale/fi.js\",\n\t\"./fo\": \"../../../../moment/locale/fo.js\",\n\t\"./fo.js\": \"../../../../moment/locale/fo.js\",\n\t\"./fr\": \"../../../../moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../../../moment/locale/fr.js\",\n\t\"./fy\": \"../../../../moment/locale/fy.js\",\n\t\"./fy.js\": \"../../../../moment/locale/fy.js\",\n\t\"./gd\": \"../../../../moment/locale/gd.js\",\n\t\"./gd.js\": \"../../../../moment/locale/gd.js\",\n\t\"./gl\": \"../../../../moment/locale/gl.js\",\n\t\"./gl.js\": \"../../../../moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./he\": \"../../../../moment/locale/he.js\",\n\t\"./he.js\": \"../../../../moment/locale/he.js\",\n\t\"./hi\": \"../../../../moment/locale/hi.js\",\n\t\"./hi.js\": \"../../../../moment/locale/hi.js\",\n\t\"./hr\": \"../../../../moment/locale/hr.js\",\n\t\"./hr.js\": \"../../../../moment/locale/hr.js\",\n\t\"./hu\": \"../../../../moment/locale/hu.js\",\n\t\"./hu.js\": \"../../../../moment/locale/hu.js\",\n\t\"./hy-am\": \"../../../../moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../../../moment/locale/hy-am.js\",\n\t\"./id\": \"../../../../moment/locale/id.js\",\n\t\"./id.js\": \"../../../../moment/locale/id.js\",\n\t\"./is\": \"../../../../moment/locale/is.js\",\n\t\"./is.js\": \"../../../../moment/locale/is.js\",\n\t\"./it\": \"../../../../moment/locale/it.js\",\n\t\"./it.js\": \"../../../../moment/locale/it.js\",\n\t\"./ja\": \"../../../../moment/locale/ja.js\",\n\t\"./ja.js\": \"../../../../moment/locale/ja.js\",\n\t\"./jv\": \"../../../../moment/locale/jv.js\",\n\t\"./jv.js\": \"../../../../moment/locale/jv.js\",\n\t\"./ka\": \"../../../../moment/locale/ka.js\",\n\t\"./ka.js\": \"../../../../moment/locale/ka.js\",\n\t\"./kk\": \"../../../../moment/locale/kk.js\",\n\t\"./kk.js\": \"../../../../moment/locale/kk.js\",\n\t\"./km\": \"../../../../moment/locale/km.js\",\n\t\"./km.js\": \"../../../../moment/locale/km.js\",\n\t\"./kn\": \"../../../../moment/locale/kn.js\",\n\t\"./kn.js\": \"../../../../moment/locale/kn.js\",\n\t\"./ko\": \"../../../../moment/locale/ko.js\",\n\t\"./ko.js\": \"../../../../moment/locale/ko.js\",\n\t\"./ky\": \"../../../../moment/locale/ky.js\",\n\t\"./ky.js\": \"../../../../moment/locale/ky.js\",\n\t\"./lb\": \"../../../../moment/locale/lb.js\",\n\t\"./lb.js\": \"../../../../moment/locale/lb.js\",\n\t\"./lo\": \"../../../../moment/locale/lo.js\",\n\t\"./lo.js\": \"../../../../moment/locale/lo.js\",\n\t\"./lt\": \"../../../../moment/locale/lt.js\",\n\t\"./lt.js\": \"../../../../moment/locale/lt.js\",\n\t\"./lv\": \"../../../../moment/locale/lv.js\",\n\t\"./lv.js\": \"../../../../moment/locale/lv.js\",\n\t\"./me\": \"../../../../moment/locale/me.js\",\n\t\"./me.js\": \"../../../../moment/locale/me.js\",\n\t\"./mi\": \"../../../../moment/locale/mi.js\",\n\t\"./mi.js\": \"../../../../moment/locale/mi.js\",\n\t\"./mk\": \"../../../../moment/locale/mk.js\",\n\t\"./mk.js\": \"../../../../moment/locale/mk.js\",\n\t\"./ml\": \"../../../../moment/locale/ml.js\",\n\t\"./ml.js\": \"../../../../moment/locale/ml.js\",\n\t\"./mr\": \"../../../../moment/locale/mr.js\",\n\t\"./mr.js\": \"../../../../moment/locale/mr.js\",\n\t\"./ms\": \"../../../../moment/locale/ms.js\",\n\t\"./ms-my\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../../../moment/locale/ms.js\",\n\t\"./my\": \"../../../../moment/locale/my.js\",\n\t\"./my.js\": \"../../../../moment/locale/my.js\",\n\t\"./nb\": \"../../../../moment/locale/nb.js\",\n\t\"./nb.js\": \"../../../../moment/locale/nb.js\",\n\t\"./ne\": \"../../../../moment/locale/ne.js\",\n\t\"./ne.js\": \"../../../../moment/locale/ne.js\",\n\t\"./nl\": \"../../../../moment/locale/nl.js\",\n\t\"./nl-be\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../../../moment/locale/nl.js\",\n\t\"./nn\": \"../../../../moment/locale/nn.js\",\n\t\"./nn.js\": \"../../../../moment/locale/nn.js\",\n\t\"./pa-in\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pl\": \"../../../../moment/locale/pl.js\",\n\t\"./pl.js\": \"../../../../moment/locale/pl.js\",\n\t\"./pt\": \"../../../../moment/locale/pt.js\",\n\t\"./pt-br\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../../../moment/locale/pt.js\",\n\t\"./ro\": \"../../../../moment/locale/ro.js\",\n\t\"./ro.js\": \"../../../../moment/locale/ro.js\",\n\t\"./ru\": \"../../../../moment/locale/ru.js\",\n\t\"./ru.js\": \"../../../../moment/locale/ru.js\",\n\t\"./sd\": \"../../../../moment/locale/sd.js\",\n\t\"./sd.js\": \"../../../../moment/locale/sd.js\",\n\t\"./se\": \"../../../../moment/locale/se.js\",\n\t\"./se.js\": \"../../../../moment/locale/se.js\",\n\t\"./si\": \"../../../../moment/locale/si.js\",\n\t\"./si.js\": \"../../../../moment/locale/si.js\",\n\t\"./sk\": \"../../../../moment/locale/sk.js\",\n\t\"./sk.js\": \"../../../../moment/locale/sk.js\",\n\t\"./sl\": \"../../../../moment/locale/sl.js\",\n\t\"./sl.js\": \"../../../../moment/locale/sl.js\",\n\t\"./sq\": \"../../../../moment/locale/sq.js\",\n\t\"./sq.js\": \"../../../../moment/locale/sq.js\",\n\t\"./sr\": \"../../../../moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../../../moment/locale/sr.js\",\n\t\"./ss\": \"../../../../moment/locale/ss.js\",\n\t\"./ss.js\": \"../../../../moment/locale/ss.js\",\n\t\"./sv\": \"../../../../moment/locale/sv.js\",\n\t\"./sv.js\": \"../../../../moment/locale/sv.js\",\n\t\"./sw\": \"../../../../moment/locale/sw.js\",\n\t\"./sw.js\": \"../../../../moment/locale/sw.js\",\n\t\"./ta\": \"../../../../moment/locale/ta.js\",\n\t\"./ta.js\": \"../../../../moment/locale/ta.js\",\n\t\"./te\": \"../../../../moment/locale/te.js\",\n\t\"./te.js\": \"../../../../moment/locale/te.js\",\n\t\"./tet\": \"../../../../moment/locale/tet.js\",\n\t\"./tet.js\": \"../../../../moment/locale/tet.js\",\n\t\"./th\": \"../../../../moment/locale/th.js\",\n\t\"./th.js\": \"../../../../moment/locale/th.js\",\n\t\"./tl-ph\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../../../moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../../../moment/locale/tlh.js\",\n\t\"./tr\": \"../../../../moment/locale/tr.js\",\n\t\"./tr.js\": \"../../../../moment/locale/tr.js\",\n\t\"./tzl\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzm\": \"../../../../moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../../../moment/locale/tzm.js\",\n\t\"./uk\": \"../../../../moment/locale/uk.js\",\n\t\"./uk.js\": \"../../../../moment/locale/uk.js\",\n\t\"./ur\": \"../../../../moment/locale/ur.js\",\n\t\"./ur.js\": \"../../../../moment/locale/ur.js\",\n\t\"./uz\": \"../../../../moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../../../moment/locale/uz.js\",\n\t\"./vi\": \"../../../../moment/locale/vi.js\",\n\t\"./vi.js\": \"../../../../moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../../../moment/locale/yo.js\",\n\t\"./yo.js\": \"../../../../moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../../../moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../../../moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../../../moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/juampi/Documents/Codetry/turn-app/node_modules/moment/locale ^\\.\\/.*$\n// module id = ../../../../moment/locale recursive ^\\.\\/.*$\n// module chunks = main","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}